{"version":3,"file":"dc.js","sources":["../src/core/bad-argument-exception.ts","../src/core/constants.ts","../src/core/filters/ranged-filter.ts","../src/core/filters/ranged-two-dimensional-filter.ts","../src/core/filters/two-dimensional-filter.ts","../src/core/filters/hierarchy-filter.ts","../src/core/filters/filter-factory.ts","../src/core/filter-storage.ts","../src/core/chart-group.ts","../src/core/chart-registry.ts","../src/core/logger.ts","../src/core/config.ts","../src/compat/core/config.ts","../src/compat/core/chart-registry.ts","../src/core/core.ts","../src/compat/core/core.ts","../src/core/d3compat.ts","../src/core/events.ts","../src/compat/core/filters.ts","../src/core/invalid-state-exception.ts","../src/core/utils.ts","../src/core/printers.ts","../src/compat/core/printers.ts","../src/core/units.ts","../src/compat/core/units.ts","../src/compat/core/utils.ts","../src/base/d3.box.ts","../src/data/filter-handler.ts","../src/data/c-f-filter-handler.ts","../src/data/filter-storage-helper.ts","../src/data/c-f-simple-adapter.ts","../src/base/base-mixin.ts","../src/compat/base/base-mixin.ts","../src/base/bubble-mixin.ts","../src/compat/base/bubble-mixin.ts","../src/data/c-f-data-cap-helper.ts","../src/compat/base/cap-mixin.ts","../src/base/colors/abstract-color-helper.ts","../src/base/colors/color-scale-helper.ts","../src/base/colors/ordinal-colors.ts","../src/base/color-mixin.ts","../src/base/colors/color-calculator.ts","../src/base/colors/linear-colors.ts","../src/compat/base/color-mixin.ts","../src/base/margin-mixin.ts","../src/base/coordinate-grid-mixin.ts","../src/compat/base/margin-mixin.ts","../src/compat/base/coordinate-grid-mixin.ts","../src/data/c-f-multi-adapter.ts","../src/base/stack-mixin.ts","../src/compat/base/stack-mixin.ts","../src/charts/bar-chart.ts","../src/compat/charts/bar-chart.ts","../src/charts/box-plot.ts","../src/compat/charts/box-plot.ts","../src/charts/bubble-chart.ts","../src/compat/charts/bubble-chart.ts","../src/charts/bubble-overlay.ts","../src/compat/charts/bubble-overlay.ts","../src/charts/cbox-menu.ts","../src/compat/charts/cbox-menu.ts","../src/charts/composite-chart.ts","../src/compat/charts/composite-chart.ts","../src/charts/data-count.ts","../src/compat/charts/data-count.ts","../src/charts/data-grid.ts","../src/compat/charts/data-grid.ts","../src/charts/data-table.ts","../src/compat/charts/data-table.ts","../src/charts/geo-choropleth-chart.ts","../src/compat/charts/geo-choropleth-chart.ts","../src/charts/heat-map.ts","../src/compat/charts/heat-map.ts","../src/charts/line-chart.ts","../src/compat/charts/line-chart.ts","../src/charts/number-display.ts","../src/compat/charts/number-display.ts","../src/charts/pie-chart.ts","../src/compat/charts/pie-chart.ts","../src/charts/row-chart.ts","../src/compat/charts/row-chart.ts","../src/charts/scatter-plot.ts","../src/compat/charts/scatter-plot.ts","../src/charts/select-menu.ts","../src/compat/charts/select-menu.ts","../src/charts/series-chart.ts","../src/compat/charts/series-chart.ts","../src/charts/sunburst-chart.ts","../src/compat/charts/sunburst-chart.ts","../src/charts/text-filter-widget.ts","../src/compat/charts/text-filter-widget.ts","../src/charts/html-legend.ts","../src/compat/charts/html-legend.ts","../src/charts/legend.ts","../src/compat/charts/legend.ts"],"sourcesContent":["export class BadArgumentException extends Error {}\n","export const constants = {\n    CHART_CLASS: 'dc-chart',\n    DEBUG_GROUP_CLASS: 'debug',\n    STACK_CLASS: 'stack',\n    DESELECTED_CLASS: 'deselected',\n    SELECTED_CLASS: 'selected',\n    NODE_INDEX_NAME: '__index__',\n    GROUP_INDEX_NAME: '__group_index__',\n    DEFAULT_CHART_GROUP: '__default_chart_group__',\n    EVENT_DELAY: 40,\n    NEGLIGIBLE_NUMBER: 1e-10,\n};\n","import { IFilter } from './i-filter';\n\nexport class RangedFilter<T> extends Array<T> implements IFilter {\n    readonly filterType = 'RangedFilter';\n\n    constructor(low: T, high: T) {\n        super();\n        this[0] = low;\n        this[1] = high;\n    }\n\n    isFiltered(value: T): boolean {\n        return value >= this[0] && value < this[1];\n    }\n\n    serialize(): object {\n        return [...this];\n    }\n}\n","import { IFilter } from './i-filter';\n\nexport class RangedTwoDimensionalFilter extends Array implements IFilter {\n    public readonly filterType = 'RangedTwoDimensionalFilter';\n\n    private fromBottomLeft;\n\n    constructor(filter) {\n        super();\n\n        for (let i = 0; i < filter.length; i++) {\n            this[i] = filter[i];\n        }\n\n        if (filter[0] instanceof Array) {\n            this.fromBottomLeft = [\n                [Math.min(filter[0][0], filter[1][0]), Math.min(filter[0][1], filter[1][1])],\n                [Math.max(filter[0][0], filter[1][0]), Math.max(filter[0][1], filter[1][1])],\n            ];\n        } else {\n            this.fromBottomLeft = [\n                [filter[0], -Infinity],\n                [filter[1], Infinity],\n            ];\n        }\n    }\n\n    public isFiltered(value): boolean {\n        let x;\n        let y;\n\n        if (value instanceof Array) {\n            x = value[0];\n            y = value[1];\n        } else {\n            x = value;\n            y = this.fromBottomLeft[0][1];\n        }\n\n        return (\n            x >= this.fromBottomLeft[0][0] &&\n            x < this.fromBottomLeft[1][0] &&\n            y >= this.fromBottomLeft[0][1] &&\n            y < this.fromBottomLeft[1][1]\n        );\n    }\n\n    serialize(): object {\n        return [...this];\n    }\n}\n","import { IFilter } from './i-filter';\n\nexport class TwoDimensionalFilter extends Array implements IFilter {\n    public readonly filterType = 'TwoDimensionalFilter';\n\n    constructor(filter) {\n        super();\n        this[0] = filter[0];\n        this[1] = filter[1];\n    }\n\n    public isFiltered(value) {\n        return (\n            value.length &&\n            value.length === this.length &&\n            value[0] === this[0] &&\n            value[1] === this[1]\n        );\n    }\n\n    serialize(): object {\n        return [...this];\n    }\n}\n","import { IFilter } from './i-filter';\n\nexport class HierarchyFilter extends Array implements IFilter {\n    public readonly filterType = 'HierarchyFilter';\n\n    constructor(path) {\n        super();\n\n        for (let i = 0; i < path.length; i++) {\n            this[i] = path[i];\n        }\n    }\n\n    public isFiltered(value): boolean {\n        const filter = this;\n\n        if (!(filter.length && value && value.length && value.length >= filter.length)) {\n            return false;\n        }\n\n        for (let i = 0; i < filter.length; i++) {\n            if (value[i] !== filter[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    serialize(): object {\n        return [...this];\n    }\n}\n","import { RangedFilter } from './ranged-filter';\nimport { RangedTwoDimensionalFilter } from './ranged-two-dimensional-filter';\nimport { TwoDimensionalFilter } from './two-dimensional-filter';\nimport { HierarchyFilter } from './hierarchy-filter';\nimport { IFilter } from './i-filter';\n\nexport const filterFactory: { [k: string]: (entry: any) => IFilter } = {\n    HierarchyFilter: entry => new HierarchyFilter(entry),\n    RangedFilter: entry => new RangedFilter(entry[0], entry[1]),\n    RangedTwoDimensionalFilter: entry => new RangedTwoDimensionalFilter(entry),\n    TwoDimensionalFilter: entry => new TwoDimensionalFilter(entry),\n};\n","import { IFilterListenerParams, IFilterStorage, ISerializeOpts } from './i-filter-storage';\nimport { IFilter } from './filters/i-filter';\nimport { filterFactory } from './filters/filter-factory';\nimport { ISerializedFilters } from './i-serialized-filters';\nimport { Dispatch, dispatch } from 'd3-dispatch';\n\nexport class FilterStorage implements IFilterStorage {\n    // Current filters\n    private _filters;\n\n    // List of listeners for each storage key\n    // Storage key will be dimension (id shareFilters is true) or the chart itself\n    private _listenerChains: Map<any, IFilterListenerParams[]>;\n\n    // notify when filter changes for any of the charts\n    private _filterChangeListener: Dispatch<object>;\n\n    constructor() {\n        this._filters = new Map();\n        this._listenerChains = new Map();\n        this._filterChangeListener = dispatch('filter-changed');\n    }\n\n    public onFilterChange(key: string, callback) {\n        this._filterChangeListener.on(`filter-changed.${key}`, callback);\n    }\n\n    public registerFilterListener(params: IFilterListenerParams): any {\n        const storageKey = params.storageKey;\n        if (!this._listenerChains.get(storageKey)) {\n            this._listenerChains.set(storageKey, []);\n        }\n        const listener = { ...params };\n        this._listenerChains.get(storageKey).push(listener);\n        return listener;\n    }\n\n    public deRegisterFilterListener(storageKey: any, listener: any): void {\n        // exclude this listener and retain the rest\n        let listenerChain = this._listenerChains.get(storageKey);\n        listenerChain = listenerChain.filter(l => l !== listener);\n        this._listenerChains.set(storageKey, listenerChain);\n    }\n\n    public deRegisterAll(): void {\n        this._filters = new Map();\n        this._listenerChains = new Map();\n    }\n\n    public notifyListeners(storageKey: any, filters) {\n        const listenerChain = this._listenerChains.get(storageKey);\n        listenerChain\n            .filter(l => typeof l.onFiltersChanged === 'function')\n            .forEach(l => {\n                l.onFiltersChanged(filters);\n            });\n\n        const chartIds = listenerChain.map(lsnr => lsnr.chartId);\n        this._filterChangeListener.call('filter-changed', this, {\n            chartIds,\n            filters: this._filters.get(storageKey),\n        });\n    }\n\n    public setFiltersFor(storageKey: any, filters) {\n        this._filters.set(storageKey, filters);\n    }\n\n    public getFiltersFor(storageKey: any) {\n        if (!this._filters.get(storageKey)) {\n            this._filters.set(storageKey, []);\n        }\n        return this._filters.get(storageKey);\n    }\n\n    public resetFiltersAndNotify(storageKey) {\n        this.setFiltersAndNotify(storageKey, []);\n    }\n\n    public setFiltersAndNotify(storageKey, filters) {\n        // Update filters in the storage\n        this.setFiltersFor(storageKey, filters);\n\n        // Apply filters with the DataProvider - it will update CrossFilter\n        // Applying it to just first entry is sufficient as these share the underlying dimension\n        const listenerChain = this._listenerChains.get(storageKey);\n        if (listenerChain && listenerChain[0]) {\n            listenerChain[0].applyFilters(filters);\n        }\n\n        // Notify charts that filter has been updated\n        this.notifyListeners(storageKey, filters);\n    }\n\n    public deserializeFiltersSetAndNotify(storageKey, entry) {\n        const filters = this._deSerializeFilters(entry.filterType, entry.values);\n        this.setFiltersAndNotify(storageKey, filters);\n    }\n\n    public serialize({ includeStorageKey }: ISerializeOpts = {}): ISerializedFilters[] {\n        // Include items that have active filters\n        // In case of Composite charts, include only the parent chart\n        return Array.from(this._listenerChains.values())\n            .map(listenersList => {\n                // check if any item in the list corresponds to a non-child chart\n                const listener = listenersList.find(l => l.primaryChart);\n\n                if (listener) {\n                    const filters = this._filters.get(listener.storageKey);\n                    if (filters && filters.length > 0) {\n                        const entry = this._serializeFilters(listener.chartId, filters);\n                        if (includeStorageKey) {\n                            entry.storageKey = listener.storageKey;\n                        }\n                        return entry;\n                    }\n                }\n                return undefined;\n            })\n            .filter(o => o); // Exclude all undefined\n    }\n\n    public restore(entries: ISerializedFilters[]): void {\n        const listenerChains = Array.from(this._listenerChains.values());\n\n        const filtersToRestore = new Map(\n            entries.map(entry => {\n                // Find a listenerChain that has same chartId registered\n                const listenerChain = listenerChains.find((lsnrsChain: IFilterListenerParams[]) =>\n                    lsnrsChain.find(listener => listener.chartId === entry.chartId)\n                );\n\n                // convert to appropriate dc IFilter objects\n                const filters = this._deSerializeFilters(entry.filterType, entry.values);\n\n                // pickup storageKey from first entry - all entries will have same storage key\n                const storageKey = listenerChain[0].storageKey;\n\n                return [storageKey, filters];\n            })\n        );\n\n        for (const storageKey of this._listenerChains.keys()) {\n            // reset a filter if it is not getting restored\n            const filters = filtersToRestore.has(storageKey)\n                ? filtersToRestore.get(storageKey)\n                : [];\n\n            this.setFiltersAndNotify(storageKey, filters);\n        }\n    }\n\n    private _serializeFilters(chartId: string, filters: any[]): ISerializedFilters {\n        if (typeof filters[0].isFiltered !== 'function') {\n            return {\n                chartId,\n                filterType: 'Simple',\n                values: [...filters], // defensively clone\n            };\n        }\n\n        const filtersWithType: IFilter[] = filters;\n        return {\n            chartId,\n            filterType: filtersWithType[0].filterType,\n            values: filtersWithType.map(f => f.serialize()),\n        };\n    }\n\n    private _deSerializeFilters(filterType, values) {\n        // Simple filters are simple list of items, not need to any additional instantiation\n        if (filterType === 'Simple') {\n            return values;\n        }\n\n        // Lookup filter factory based on the filter type\n        const filterCreator = filterFactory[filterType];\n\n        return values.map(f => filterCreator(f));\n    }\n}\n","import { FilterStorage } from './filter-storage';\nimport { IFilterStorage } from './i-filter-storage';\nimport { IChartGroup } from './i-chart-group';\nimport { IMinimalChart } from './i-minimal-chart';\n\n/**\n * A chart group often corresponds to a set of linked charts.\n * For example, when using crossfilter, it is typically charts linked to same crossfilter instance.\n * It specifies the set of charts which should be updated when a filter changes on one of the charts.\n * The {@linkcode BaseMixin} methods {@linkcode BaseMixin.renderGroup | renderGroup} and\n * {@linkcode BaseMixin.redrawGroup | redrawGroup} call {@linkcode renderAll} and {@linkcode redrawAll}\n * on the chart group.\n *\n * `dc` charts created without specifying a chartGroup are registered with the default ChartGroup.\n * It is recommended that all `dc` charts are created with an explicit chartGroup.\n *\n * This has been introduced in v5 to facilitate automated garage collection of charts.\n * SPAs (Single Page Applications), or any other environments where set of charts need to be unloaded,\n * should use explicit chartGroups.\n *\n * It is possible to register non dc charts (or any other object) with the chartGroup.\n * Please see {@linkcode IMinimalChart} to understand the methods the chartGroup will be invoking.\n *\n * `dc` charts do not hard depend on this class. So, it is possible to replace it with any compliant\n * implementation. {@linkcode IChartGroup} specifies what rest of the `dc` expects.\n */\nexport class ChartGroup implements IChartGroup {\n    private _charts: IMinimalChart[];\n\n    /**\n     * It stores filter state of charts.\n     *\n     * @category Ninja\n     */\n    public filterStorage: IFilterStorage;\n\n    /**\n     * This callback is invoked after {@linkcode redrawAll} and {@linkcode renderAll}.\n     *\n     * @example\n     * ```\n     * chartGroup.renderlet = () => {\n     *     // user code\n     * }\n     * ```\n     *\n     * @category Intermediate\n     */\n    public renderlet: () => void;\n\n    /**\n     * This is an `async` callback.\n     * It can be used for quite sophisticated purposes.\n     * For example, the RemoteDataAdaptors can request data from a remote service based on\n     * current filters and await till results are received.\n     *\n     * @category Intermediate\n     * @see {@link beforeRenderAll}\n     */\n    public beforeRedrawAll: () => Promise<void>;\n\n    /**\n     * Similar to {@linkcode beforeRedrawAll}.\n     *\n     * @category Intermediate\n     * @see {@link beforeRedrawAll}\n     */\n    public beforeRenderAll: () => Promise<void>;\n\n    /**\n     * Create a new instance. Please note it does not take a name as parameter.\n     */\n    constructor() {\n        this._charts = [];\n        this.filterStorage = new FilterStorage();\n    }\n\n    /**\n     * List of charts in the group. It returns the internal storage without defensive cloning.\n     *\n     * @category Intermediate\n     */\n    public list(): IMinimalChart[] {\n        return this._charts;\n    }\n\n    /**\n     * Check if the chart is registered with this chartGroup.\n     *\n     * @category Intermediate\n     */\n    public has(chart: IMinimalChart): boolean {\n        return this._charts.includes(chart);\n    }\n\n    /**\n     * dc charts will register themselves. Non dc charts will need to call this method.\n     *\n     * @category Intermediate\n     */\n    public register(chart: IMinimalChart): void {\n        this._charts.push(chart);\n    }\n\n    /**\n     * dc charts will deregister themselves.\n     *\n     * @category Intermediate\n     */\n    public deregister(chart: IMinimalChart): void {\n        if (typeof chart.dispose === 'function') {\n            chart.dispose();\n        }\n\n        this._charts = this._charts.filter(ch => ch !== chart);\n    }\n\n    /**\n     * Remove all charts from the registry.\n     * Should not be called directly - it may leave charts in inconsistent state.\n     *\n     * @category Ninja\n     */\n    public clear(): void {\n        this._charts = [];\n    }\n\n    /**\n     * Once all charts have been registered, this function should be called.\n     * It will do the following in order:\n     * - invoke async callback {@linkcode beforeRenderAll},\n     * - invoke {@linkcode BaseMixin.render | render} on each of the charts,\n     * - invoke callback {@linkcode renderlet}.\n     *\n     * Typically this will be called only once.\n     */\n    public async renderAll(): Promise<void> {\n        if (typeof this.beforeRenderAll === 'function') {\n            await this.beforeRenderAll();\n        }\n\n        for (const chart of this._charts) {\n            chart.render();\n        }\n\n        if (typeof this.renderlet === 'function') {\n            this.renderlet();\n        }\n    }\n\n    /**\n     * Redraw all the charts.\n     *\n     * When a filter is modified for any of the charts or there is a change in the underlying data,\n     * all linked charts will need be redrawn.\n     *\n     * It will do the following in order:\n     * - invoke async callback {@linkcode beforeRedrawAll},\n     * - invoke {@linkcode BaseMixin.redraw | redraw} on each of the charts,\n     * - invoke callback {@linkcode renderlet}.\n     *\n     * For any filter changes, this will be called by dc charts internally.\n     * However, if there is a change in data (like rows getting added), this function\n     * needs to be called to see the updated data.\n     */\n    public async redrawAll(): Promise<void> {\n        if (typeof this.beforeRedrawAll === 'function') {\n            await this.beforeRedrawAll();\n        }\n\n        for (const chart of this._charts) {\n            chart.redraw();\n        }\n\n        if (typeof this.renderlet === 'function') {\n            this.renderlet();\n        }\n    }\n\n    /**\n     * Reset filters for all the charts. This can be used to implement `Reset All` in the UI.\n     */\n    public filterAll(): void {\n        for (const chart of this._charts) {\n            chart.filterAll();\n        }\n    }\n\n    /**\n     * Refocus all the charts that support focusing.\n     */\n    public refocusAll(): void {\n        for (const chart of this._charts) {\n            if (chart.focus) {\n                chart.focus();\n            }\n        }\n    }\n}\n","import { constants } from './constants';\nimport { ChartGroup } from './chart-group';\nimport { IMinimalChart } from './i-minimal-chart';\n\n/**\n * The ChartRegistry maintains sets of all instantiated dc.js charts under named groups\n * and the default group. There is a single global ChartRegistry object named `chartRegistry`\n *\n * A chart group often corresponds to a crossfilter instance. It specifies\n * the set of charts which should be updated when a filter changes on one of the charts or when the\n * global functions {@link filterAll | filterAll}, {@link refocusAll | refocusAll},\n * {@link renderAll | renderAll}, {@link redrawAll | redrawAll}, or chart functions\n * {@link BaseMixin.renderGroup},\n * {@link BaseMixin.redrawGroup} are called.\n */\nclass ChartRegistry {\n    private _chartMap: { [group: string]: ChartGroup };\n\n    constructor() {\n        // chartGroup:string => charts:array\n        this._chartMap = {};\n    }\n\n    public chartGroup(group?: string): ChartGroup {\n        if (!group) {\n            group = constants.DEFAULT_CHART_GROUP;\n        }\n\n        if (!this._chartMap[group]) {\n            this._chartMap[group] = new ChartGroup();\n        }\n\n        return this._chartMap[group];\n    }\n\n    /**\n     * Determine if a given chart instance resides in any group in the registry.\n     */\n    public has(chart: IMinimalChart): boolean {\n        for (const chartGroupName in this._chartMap) {\n            if (this._chartMap.hasOwnProperty(chartGroupName)) {\n                if (this._chartMap[chartGroupName].has(chart)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Clear given group if one is provided, otherwise clears all groups.\n     */\n    public clear(group?: string): void {\n        if (group) {\n            if (this._chartMap[group]) {\n                this._chartMap[group].clear();\n                delete this._chartMap[group];\n            }\n        } else {\n            for (const chartGroupName in this._chartMap) {\n                if (this._chartMap.hasOwnProperty(chartGroupName)) {\n                    this._chartMap[chartGroupName].clear();\n                }\n            }\n            this._chartMap = {};\n        }\n    }\n\n    /**\n     * Get an array of each chart instance in the given group.\n     * If no group is provided, the charts in the default group are returned.\n     */\n    public list(group?: string): IMinimalChart[] {\n        return this.chartGroup(group).list();\n    }\n}\n\n/**\n * The chartRegistry object maintains sets of all instantiated dc.js charts under named groups\n * and the default group.\n */\nexport const chartRegistry = new ChartRegistry();\n","/**\n * Provides basis logging and deprecation utilities\n */\nexport class Logger {\n    /**\n     * Enable debug level logging. Set to `false` by default.\n     */\n    public enableDebugLog: boolean;\n    private readonly _alreadyWarned: { [msg: string]: boolean };\n\n    constructor() {\n        this.enableDebugLog = false;\n\n        this._alreadyWarned = {};\n    }\n\n    /**\n     * Put a warning message to console\n     *\n     * @example\n     * ```\n     * logger.warn('Invalid use of .tension on CurveLinear');\n     * ```\n     */\n    public warn(msg: string): Logger {\n        if (console) {\n            if (console.warn) {\n                console.warn(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Put a warning message to console. It will warn only on unique messages.\n     *\n     * @example\n     * ```\n     * logger.warnOnce('Invalid use of .tension on CurveLinear');\n     * ```\n     */\n    public warnOnce(msg: string): Logger {\n        if (!this._alreadyWarned[msg]) {\n            this._alreadyWarned[msg] = true;\n\n            logger.warn(msg);\n        }\n\n        return this;\n    }\n\n    /**\n     * Put a debug message to console. It is controlled by `logger.enableDebugLog`\n     *\n     * @example\n     * ```\n     * logger.debug('Total number of slices: ' + numSlices);\n     * ```\n     */\n    public debug(msg: string): Logger {\n        if (this.enableDebugLog && console) {\n            if (console.debug) {\n                console.debug(msg);\n            } else if (console.log) {\n                console.log(msg);\n            }\n        }\n\n        return this;\n    }\n}\n\nexport const logger = new Logger();\n","import { timeFormat } from 'd3-time-format';\n\nimport { logger } from './logger';\nimport { ColorsList } from './types';\nimport { format } from 'd3-format';\n\n/**\n * General configuration\n */\nexport class Config {\n    /**\n     * The default date format for dc.js,\n     * by default d3.timeFormat('%m/%d/%Y')\n     */\n    public dateFormat: (date: Date) => string;\n\n    /**\n     * The default floating point format for dc.js.\n     */\n    public floatFormat = format('.2f');\n\n    /**\n     * If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\n     * immediately.\n     */\n    public disableTransitions: boolean;\n\n    private _defaultColors: ColorsList;\n\n    constructor() {\n        this._defaultColors = Config._schemeCategory20c;\n\n        this.dateFormat = timeFormat('%m/%d/%Y');\n\n        this.disableTransitions = false;\n    }\n\n    /**\n     * Set the default color scheme for ordinal charts. Changing it will impact all ordinal charts.\n     *\n     * By default it is set to a copy of\n     * `d3.schemeCategory20c` for backward compatibility. This color scheme has been\n     * [removed from D3v5](https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50).\n     * In DC 3.1 release it will change to a more appropriate default.\n     *\n     * @example\n     * ```\n     * config.defaultColors(d3.schemeSet1)\n     * ```\n     */\n    public defaultColors(): ColorsList;\n    public defaultColors(colors: ColorsList): this;\n    public defaultColors(colors?) {\n        if (!arguments.length) {\n            // Issue warning if it uses _schemeCategory20c\n            if (this._defaultColors === Config._schemeCategory20c) {\n                logger.warnOnce(\n                    'You are using d3.schemeCategory20c, which has been removed in D3v5. ' +\n                        'See the explanation at https://github.com/d3/d3/blob/master/CHANGES.md#changes-in-d3-50. ' +\n                        'DC is using it for backward compatibility, however it will be changed in DCv3.1. ' +\n                        'You can change it by calling dc.config.defaultColors(newScheme). ' +\n                        'See https://github.com/d3/d3-scale-chromatic for some alternatives.'\n                );\n            }\n            return this._defaultColors;\n        }\n        this._defaultColors = colors;\n        return this;\n    }\n\n    // D3v5 has removed schemeCategory20c, copied here for backward compatibility\n    // prettier-ignore\n    public static _schemeCategory20c: ColorsList = [\n        '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d',\n        '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476',\n        '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n        '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n}\n\n/**\n * General configuration object; see {@link Config} for members.\n */\nexport const config = new Config();\n","export * from '../../core/config';\n\nimport { config } from '../../core/config';\n\n// @ts-ignore\nconfig._renderlet = null; // type (group:string) => void\n","import { chartRegistry } from '../../core/chart-registry';\nimport { config } from './config';\nimport { IMinimalChart } from '../../core/i-minimal-chart';\n\nexport * from '../../core/chart-group';\nexport * from '../../core/filter-storage';\nexport * from '../../core/chart-registry';\n\n/**\n * Add given chart instance to the given group, creating the group if necessary.\n * If no group is provided, the default group `constants.DEFAULT_CHART_GROUP` will be used.\n */\nexport function registerChart(chart: IMinimalChart, group?: string): void {\n    chartRegistry.chartGroup(group).register(chart);\n}\n\n/**\n * Remove given chart instance from the given group, creating the group if necessary.\n * If no group is provided, the default group `constants.DEFAULT_CHART_GROUP` will be used.\n */\nexport function deregisterChart(chart: IMinimalChart, group?: string): void {\n    chartRegistry.chartGroup(group).deregister(chart);\n}\n\n/**\n * Determine if a given chart instance resides in any group in the registry.\n */\nexport function hasChart(chart: IMinimalChart): boolean {\n    return chartRegistry.has(chart);\n}\n\n/**\n * Clear given group if one is provided, otherwise clears all groups.\n */\nexport function deregisterAllCharts(group?) {\n    chartRegistry.clear(group);\n}\n\n/**\n * Clear all filters on all charts within the given chart group. If the chart group is not given then\n * only charts that belong to the default chart group will be reset.\n */\nexport function filterAll(group?: string): void {\n    chartRegistry.chartGroup(group).filterAll();\n}\n\n/**\n * Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is\n * not given then only charts that belong to the default chart group will be reset.\n */\nexport function refocusAll(group?: string): void {\n    chartRegistry.chartGroup(group).refocusAll();\n}\n\n/**\n * Re-render all charts belong to the given chart group. If the chart group is not given then only\n * charts that belong to the default chart group will be re-rendered.\n */\nexport function renderAll(group?: string): void {\n    chartRegistry.chartGroup(group).renderAll();\n\n    // @ts-ignore\n    if (config._renderlet !== null) {\n        // @ts-ignore\n        config._renderlet(group);\n    }\n}\n\n/**\n * Redraw all charts belong to the given chart group. If the chart group is not given then only charts\n * that belong to the default chart group will be re-drawn. Redraw is different from re-render since\n * when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting\n * from scratch.\n */\nexport function redrawAll(group?: string): void {\n    chartRegistry.chartGroup(group).redrawAll();\n\n    // @ts-ignore\n    if (config._renderlet !== null) {\n        // @ts-ignore\n        config._renderlet(group);\n    }\n}\nexport { ISerializedFilters } from '../../core/i-serialized-filters';\n","import { config } from './config';\n\n/**\n * Start a transition on a selection if transitions are globally enabled\n * ({@link disableTransitions} is false) and the duration is greater than zero; otherwise return\n * the selection. Since most operations are the same on a d3 selection and a d3 transition, this\n * allows a common code path for both cases.\n * @param selection - the selection to be transitioned\n * @param [duration=250] - the duration of the transition in milliseconds, a\n * function returning the duration, or 0 for no transition\n * @param [delay] - the delay of the transition in milliseconds, or a function\n * returning the delay, or 0 for no delay\n * @param [name] - the name of the transition (if concurrent transitions on the same\n * elements are needed)\n */\nexport function transition(selection, duration?: number, delay?: number, name?: string) {\n    // TODO: can we do typing for selection here\n    if (config.disableTransitions || duration <= 0) {\n        return selection;\n    }\n\n    let s = selection.transition(name);\n\n    if (duration >= 0 || duration !== undefined) {\n        s = s.duration(duration);\n    }\n    if (delay >= 0 || delay !== undefined) {\n        s = s.delay(delay);\n    }\n\n    return s;\n}\n\n/* somewhat silly, but to avoid duplicating logic */\nexport function optionalTransition(\n    enable: boolean,\n    duration?: number,\n    delay?: number,\n    name?: string\n) {\n    if (enable) {\n        return function (selection) {\n            return transition(selection, duration, delay, name);\n        };\n    } else {\n        return function (selection) {\n            return selection;\n        };\n    }\n}\n\n// See http://stackoverflow.com/a/20773846\nexport function afterTransition(_transition, callback) {\n    if (_transition.empty() || !_transition.duration) {\n        callback.call(_transition);\n    } else {\n        let n = 0;\n        _transition\n            .each(() => {\n                ++n;\n            })\n            .on('end', () => {\n                if (!--n) {\n                    callback.call(_transition);\n                }\n            });\n    }\n}\n\nexport function instanceOfChart(o: any): boolean {\n    return o instanceof Object && o.__dcFlag__ && true;\n}\n","import { config } from './config';\n\nexport * from '../../core/core';\n\nexport function renderlet(_?: (arg0?) => void): (arg0) => void {\n    if (!arguments.length) {\n        // @ts-ignore\n        return config._renderlet;\n    }\n    // @ts-ignore\n    config._renderlet = _;\n    return null;\n}\n","import { event } from 'd3-selection';\nimport { nest } from 'd3-collection';\n// @ts-ignore, it is missing in d3@v5\nimport { groups } from 'd3-array';\n\n// d3v6 has changed the arguments for event handlers.\n// We are creating a wrapper which detects if the first argument is an event, which indicated d3@v6\n// Otherwise we assume lower versions of d3.\n// The underlying handler will always receive bound datum as the first argument and the event as the second argument.\n// It is possible that any of these can actually be undefined (or null).\nexport function adaptHandler(handler) {\n    return function (a, b) {\n        if (a && a.target) {\n            // d3@v6 - b is __data__, a is the event\n            handler.call(this, b, a);\n        } else {\n            // older d3 - a is __data__, event from global d3.event\n            handler.call(this, a, event);\n        }\n    };\n}\n\nexport interface INesterParams {\n    key;\n    sortKeys?;\n    sortValues?;\n    entries;\n}\n\nfunction _d3v5Nester({ key, sortKeys, sortValues, entries }: INesterParams) {\n    const nester = nest().key(key);\n    if (sortKeys) {\n        nester.sortKeys(sortKeys);\n    }\n    if (sortValues) {\n        nester.sortValues(sortValues);\n    }\n    return nester.entries(entries);\n}\n\nfunction _d3v6Nester({ key, sortKeys, sortValues, entries }: INesterParams) {\n    if (sortValues) {\n        entries = [...entries].sort(sortValues);\n    }\n    let out = groups(entries, key);\n    if (sortKeys) {\n        out = out.sort(sortKeys);\n    }\n\n    // remap to d3@v5 structure\n    return out.map(e => ({\n        key: `${e[0]}`, // d3@v5 always returns key as string\n        values: e[1],\n    }));\n}\n\nexport function compatNestHelper({ key, sortKeys, sortValues, entries }: INesterParams) {\n    if (groups) {\n        // d3@v6\n        return _d3v6Nester({ key, sortKeys, sortValues, entries });\n    } else {\n        // older d3\n        return _d3v5Nester({ key, sortKeys, sortValues, entries });\n    }\n}\n","// TODO: convert this to a class so that events is an Object of that class\n\ninterface IEvents {\n    current: () => void;\n    trigger: (closure: () => void, delay?: number) => void;\n}\n\nexport const events: IEvents = {\n    current: null,\n    trigger: undefined,\n};\n\n/**\n * This function triggers a throttled event function with a specified delay (in milli-seconds).  Events\n * that are triggered repetitively due to user interaction such brush dragging might flood the library\n * and invoke more renders than can be executed in time. Using this function to wrap your event\n * function allows the library to smooth out the rendering by throttling events and only responding to\n * the most recent event.\n *\n * @example\n * ```\n * chart.on('renderlet', function(chart) {\n *     // smooth the rendering through event throttling\n *     events.trigger(function(){\n *         // focus some other chart to the range selected by user on this chart\n *         someOtherChart.focus(chart.filter());\n *     }, 500);\n * })\n * ```\n */\nevents.trigger = function (closure: () => void, delay?: number) {\n    if (!delay) {\n        closure();\n        return;\n    }\n\n    events.current = closure;\n\n    setTimeout(() => {\n        if (closure === events.current) {\n            closure();\n        }\n    }, delay);\n};\n","import {\n    HierarchyFilter,\n    RangedFilter,\n    RangedTwoDimensionalFilter,\n    TwoDimensionalFilter,\n} from '../../core/filters/index';\n\n/**\n * The dc.js filters are functions which are passed into crossfilter to chose which records will be\n * accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one\n * dimension will affect all the other dimensions but not that one.  dc always applies a filter\n * function to the dimension; the function combines multiple filters and if any of them accept a\n * record, it is filtered in.\n *\n * These filter constructors are used as appropriate by the various charts to implement brushing.  We\n * mention below which chart uses which filter.  In some cases, many instances of a filter will be added.\n *\n * Each of the dc.js filters is an object with the following properties:\n * * `isFiltered` - a function that returns true if a value is within the filter\n * * `filterType` - a string identifying the filter, here the name of the constructor\n *\n * Currently these filter objects are also arrays, but this is not a requirement. Custom filters\n * can be used as long as they have the properties above.\n */\n\nexport const filters = {\n    /**\n     * RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X\n     * axis brushing for the {@link CoordinateGridMixin coordinate grid charts}.\n     *\n     * Its `filterType` is 'RangedFilter'\n     * @name RangedFilter\n     * @constructor\n     */\n    RangedFilter: (low, high) => new RangedFilter(low, high),\n\n    /**\n     * TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the\n     * {@link HeatMap heat map chart} to include particular cells as they are clicked.  (Rows and columns are\n     * filtered by filtering all the cells in the row or column.)\n     *\n     * Its `filterType` is 'TwoDimensionalFilter'\n     * @name TwoDimensionalFilter\n     * @constructor\n     */\n    TwoDimensionalFilter: filter => new TwoDimensionalFilter(filter),\n\n    /**\n     * The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular\n     * region. It is used by the {@link ScatterPlot scatter plot} to implement rectangular brushing.\n     *\n     * It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that\n     * `x1 <= x2` and `y1 <= y2`. It then returns a filter which accepts any points which are in the\n     * rectangular range including the lower values but excluding the higher values.\n     *\n     * If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as\n     * two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <\n     * x2`.\n     *\n     * Its `filterType` is 'RangedTwoDimensionalFilter'\n     * @name RangedTwoDimensionalFilter\n     * @constructor\n     */\n    RangedTwoDimensionalFilter: filter => new RangedTwoDimensionalFilter(filter),\n\n    /**\n     * HierarchyFilter is a filter which accepts a key path as an array. It matches any node at, or\n     * child of, the given path. It is used by the {@link SunburstChart sunburst chart} to include particular cells and all\n     * their children as they are clicked.\n     *\n     * @name HierarchyFilter\n     * @constructor\n     */\n    HierarchyFilter: path => new HierarchyFilter(path),\n};\n","export class InvalidStateException extends Error {}\n","import { timeDay, timeHour, timeMinute, timeMonth, timeSecond, timeWeek, timeYear } from 'd3-time';\nimport { format } from 'd3-format';\n\nimport { constants } from './constants';\nimport { config } from './config';\nimport { ascending } from 'd3-array';\n\nexport const pluck2 = function (n, f) {\n    return function (d, i) {\n        return f.call(d, d[n], i);\n    };\n};\n\nexport function sortBy(data, ordering: (d: any) => any) {\n    // clone the array before sorting, otherwise Array.sort sorts in-place\n    return [...data].sort((a, b) => {\n        return ascending(ordering(a), ordering(b));\n    });\n}\n\n/**\n * Print a single value filter.\n */\nexport function printSingleValue(filter): string {\n    let s: string = `${filter}`;\n\n    if (filter instanceof Date) {\n        s = config.dateFormat(filter);\n    } else if (typeof filter === 'string') {\n        s = filter;\n    } else if (isFloat(filter)) {\n        s = config.floatFormat(filter);\n    } else if (isInteger(filter)) {\n        s = `${Math.round(filter)}`;\n    }\n\n    return s;\n}\n\n// convert 'day' to d3.timeDay and similar\nfunction _toTimeFunc(t) {\n    const mappings = {\n        second: timeSecond,\n        minute: timeMinute,\n        hour: timeHour,\n        day: timeDay,\n        week: timeWeek,\n        month: timeMonth,\n        year: timeYear,\n    };\n    return mappings[t];\n}\n\n/**\n * Arbitrary add one value to another.\n *\n * If the value l is of type Date, adds r units to it. t becomes the unit.\n * For example add(dt, 3, 'week') will add 3 (r = 3) weeks (t= 'week') to dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * add(30, 10) will give 40 and add(30, '10') will give 33.\n *\n * They also generate strange results if l is a string.\n * @method add\n * @memberof utils\n * @param l the value to modify\n * @param r the amount by which to modify the value\n * @param [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n */\nexport function add(l, r, t?) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() + r);\n        }\n        t = t || timeDay;\n        if (typeof t !== 'function') {\n            t = _toTimeFunc(t);\n        }\n        return t.offset(l, r);\n    } else if (typeof r === 'string') {\n        const percentage = +r / 100;\n        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l + r;\n    }\n}\n\n/**\n * Arbitrary subtract one value from another.\n *\n * If the value l is of type Date, subtracts r units from it. t becomes the unit.\n * For example subtract(dt, 3, 'week') will subtract 3 (r = 3) weeks (t= 'week') from dt.\n *\n * If l is of type numeric, t is ignored. In this case if r is of type string,\n * it is assumed to be percentage (whether or not it includes %). For example\n * subtract(30, 10) will give 20 and subtract(30, '10') will give 27.\n *\n * They also generate strange results if l is a string.\n * @method subtract\n * @param l the value to modify\n * @param r the amount by which to modify the value\n * @param [t=d3.timeDay] if `l` is a `Date`, then this should be a\n * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#_interval).\n * For backward compatibility with dc.js 2.0, it can also be the name of an interval, i.e.\n * 'millis', 'second', 'minute', 'hour', 'day', 'week', 'month', or 'year'\n */\nexport function subtract(l, r, t?) {\n    if (typeof r === 'string') {\n        r = r.replace('%', '');\n    }\n\n    if (l instanceof Date) {\n        if (typeof r === 'string') {\n            r = +r;\n        }\n        if (t === 'millis') {\n            return new Date(l.getTime() - r);\n        }\n        t = t || timeDay;\n        if (typeof t !== 'function') {\n            t = _toTimeFunc(t);\n        }\n        return t.offset(l, -r);\n    } else if (typeof r === 'string') {\n        const percentage = +r / 100;\n        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);\n    } else {\n        return l - r;\n    }\n}\n\n/**\n * Is the value a number?\n */\nexport function isNumber(n) {\n    return n === +n;\n}\n\n/**\n * Is the value a float?\n */\nexport function isFloat(n) {\n    // tslint:disable-next-line:no-bitwise\n    return n === +n && n !== (n | 0);\n}\n\n/**\n * Is the value an integer?\n */\nexport function isInteger(n) {\n    // tslint:disable-next-line:no-bitwise\n    return n === +n && n === (n | 0);\n}\n\n/**\n * Is the value very close to zero?\n */\nexport function isNegligible(n) {\n    return !isNumber(n) || (n < constants.NEGLIGIBLE_NUMBER && n > -constants.NEGLIGIBLE_NUMBER);\n}\n\n/**\n * Ensure the value is no greater or less than the min/max values.  If it is return the boundary value.\n */\nexport function clamp(val, min, max) {\n    return val < min ? min : val > max ? max : val;\n}\n\n/**\n * Using a simple static counter, provide a unique integer id.\n */\nlet _idCounter = 0;\nexport function uniqueId() {\n    return ++_idCounter;\n}\n\n/**\n * Convert a name to an ID.\n */\nexport function nameToId(name) {\n    return name.toLowerCase().replace(/[\\s]/g, '_').replace(/[\\.']/g, '');\n}\n\n/**\n * Append or select an item on a parent element.\n */\nexport function appendOrSelect(parent, selector, tag?) {\n    tag = tag || selector;\n    let element = parent.select(selector);\n    if (element.empty()) {\n        element = parent.append(tag);\n    }\n    return element;\n}\n\n/**\n * Return the number if the value is a number; else 0.\n */\nexport function safeNumber(n) {\n    return isNumber(+n) ? +n : 0;\n}\n\n/**\n * Return true if both arrays are equal, if both array are null these are considered equal\n */\nexport function arraysEqual(a1, a2) {\n    if (!a1 && !a2) {\n        return true;\n    }\n\n    if (!a1 || !a2) {\n        return false;\n    }\n\n    return (\n        a1.length === a2.length &&\n        // If elements are not integers/strings, we hope that it will match because of toString\n        // Test cases cover dates as well.\n        a1.every((elem, i) => elem.valueOf() === a2[i].valueOf())\n    );\n}\n\n// ******** Sunburst Chart ********\nexport function allChildren(node) {\n    let paths = [];\n    paths.push(node.path);\n    console.log('currentNode', node);\n    if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n            paths = paths.concat(allChildren(node.children[i]));\n        }\n    }\n    return paths;\n}\n\n// builds a d3 Hierarchy from a collection\n// TODO: turn this monster method something better.\nexport function toHierarchy(list, accessor) {\n    const root = { key: 'root', children: [] };\n    for (let i = 0; i < list.length; i++) {\n        const data = list[i];\n        const parts = data.key;\n        const value = accessor(data);\n        let currentNode = root;\n        for (let j = 0; j < parts.length; j++) {\n            const currentPath = parts.slice(0, j + 1);\n            const children = currentNode.children;\n            const nodeName = parts[j];\n            let childNode;\n            if (j + 1 < parts.length) {\n                // Not yet at the end of the sequence; move down the tree.\n                childNode = _findChild(children, nodeName);\n\n                // If we don't already have a child node for this branch, create it.\n                if (childNode === void 0) {\n                    childNode = { key: nodeName, children: [], path: currentPath };\n                    children.push(childNode);\n                }\n                currentNode = childNode;\n            } else {\n                // Reached the end of the sequence; create a leaf node.\n                childNode = { key: nodeName, value, data, path: currentPath };\n                children.push(childNode);\n            }\n        }\n    }\n    return root;\n}\n\nfunction _findChild(children, nodeName) {\n    for (let k = 0; k < children.length; k++) {\n        if (children[k].key === nodeName) {\n            return children[k];\n        }\n    }\n}\n\nexport function getAncestors(node) {\n    const path = [];\n    let current = node;\n    while (current.parent) {\n        path.unshift(current.name);\n        current = current.parent;\n    }\n    return path;\n}\n\nexport function arraysIdentical(a, b) {\n    let i = a.length;\n    if (i !== b.length) {\n        return false;\n    }\n    while (i--) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { printSingleValue } from './utils';\n\n/**\n * Converts a list of filters into a readable string.\n */\nexport function printFilters(filters) {\n    return filters.map(filter => printFilter(filter)).join(', ');\n}\n\n/**\n * Converts a filter into a readable string.\n */\nexport function printFilter(filter) {\n    let s = '';\n\n    if (typeof filter !== 'undefined' && filter !== null) {\n        if (filter instanceof Array) {\n            if (filter.length >= 2) {\n                s = `[${filter.map(e => printSingleValue(e)).join(' -> ')}]`;\n            } else if (filter.length >= 1) {\n                s = printSingleValue(filter[0]);\n            }\n        } else {\n            s = printSingleValue(filter);\n        }\n    }\n\n    return s;\n}\n","import { printFilter, printFilters } from '../../core/printers';\n\nexport const printers = {\n    filter: printFilter,\n    filters: printFilters,\n};\n","import { isNegligible } from './utils';\nimport { IUnits } from './types';\n\n/**\n * The default value for {@link ICoordinateGridMixinConf.xUnits | .xUnits} for the\n * {@link CoordinateGridMixin | Coordinate Grid Chart} and should\n * be used when the x values are a sequence of integers.\n * It is a function that counts the number of integers in the range supplied in its start and end parameters.\n *\n * @see {@link ICoordinateGridMixinConf.xUnits}\n *\n * @example\n * ```\n * chart.xUnits(UnitsIntegers) // already the default\n * ```\n */\nexport const UnitsInteger: IUnits = function (start: number, end: number): number {\n    return Math.abs(end - start);\n};\n\n/**\n * This argument can be passed to the {@link ICoordinateGridMixinConf.xUnits | .xUnits} function of a\n * coordinate grid chart to specify ordinal units for the x axis. Usually this parameter is used in\n * combination with passing\n * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales | d3.scaleOrdinal}\n * to {@link CoordinateGridMixin.x | .x}.\n *\n * As of dc.js 3.0, this is purely a placeholder or magic value which causes the chart to go into ordinal mode; the\n * function is not called.\n *\n * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales | d3.scaleOrdinal}\n * @see {@link ICoordinateGridMixinConf.xUnits}\n * @see {@link CoordinateGridMixin.x | coordinateGridMixin.x}\n *\n * @example\n * ```\n * chart.xUnits(UnitsOrdinal)\n *      .x(d3.scaleOrdinal())\n * ```\n */\nexport const UnitsOrdinal: IUnits = function (start, end): number {\n    throw new Error('dc.units.ordinal should not be called - it is a placeholder');\n};\n\n/**\n * This function generates an argument for the {@link CoordinateGridMixin | Coordinate Grid Chart}\n * {@link ICoordinateGridMixinConf.xUnits | .xUnits} function specifying that the x values are floating-point\n * numbers with the given precision.\n * The returned function determines how many values at the given precision will fit into the range\n * supplied in its start and end parameters.\n *\n * @see {@link ICoordinateGridMixinConf.xUnits}\n *\n * @example\n * ```\n * // specify values (and ticks) every 0.1 units\n * chart.xUnits(UnitWithPrecision(0.1))\n *\n * // there are 500 units between 0.5 and 1 if the precision is 0.001\n * var thousandths = UnitWithPrecision(0.001);\n *\n * thousandths(0.5, 1.0) // returns 500\n * ```\n */\nexport const UnitWithPrecision = function (precision: number): IUnits {\n    const _f: IUnits = function (s: number, e: number): number {\n        const d = Math.abs((e - s) / _f.resolution);\n        if (isNegligible(d - Math.floor(d))) {\n            return Math.floor(d);\n        } else {\n            return Math.ceil(d);\n        }\n    };\n    _f.resolution = precision;\n    return _f;\n};\n","import { UnitsInteger, UnitsOrdinal, UnitWithPrecision } from '../../core/units';\n\nexport const units = {\n    integers: UnitsInteger,\n    ordinal: UnitsOrdinal,\n    fp: { precision: UnitWithPrecision },\n};\n","import {\n    add,\n    allChildren,\n    appendOrSelect,\n    arraysEqual,\n    arraysIdentical,\n    clamp,\n    getAncestors,\n    isFloat,\n    isInteger,\n    isNegligible,\n    isNumber,\n    nameToId,\n    printSingleValue,\n    safeNumber,\n    subtract,\n    toHierarchy,\n    uniqueId,\n} from '../../core/utils';\n\n/**\n * Returns a function that given a string property name, can be used to pluck the property off an object.  A function\n * can be passed as the second argument to also alter the data being returned.\n *\n * This can be a useful shorthand method to create accessor functions.\n * @example\n * var xPluck = pluck('x');\n * var objA = {x: 1};\n * xPluck(objA) // 1\n * @example\n * var xPosition = pluck('x', function (x, i) {\n *     // `this` is the original datum,\n *     // `x` is the x property of the datum,\n *     // `i` is the position in the array\n *     return this.radius + x;\n * });\n * selectAll('.circle').data(...).x(xPosition);\n */\nexport const pluck = function (n, f?) {\n    if (!f) {\n        return function (d) {\n            return d[n];\n        };\n    }\n    return function (d, i) {\n        return f.call(d, d[n], i);\n    };\n};\n\nexport const utils = {\n    add: add,\n    allChildren: allChildren,\n    appendOrSelect: appendOrSelect,\n    arraysEqual: arraysEqual,\n    arraysIdentical: arraysIdentical,\n    clamp: clamp,\n    constant: function (x) {\n        return () => x;\n    },\n    getAncestors: getAncestors,\n    isFloat: isFloat,\n    isInteger: isInteger,\n    isNegligible: isNegligible,\n    isNumber: isNumber,\n    nameToId: nameToId,\n    printSingleValue: printSingleValue,\n    safeNumber: safeNumber,\n    subtract: subtract,\n    toHierarchy: toHierarchy,\n    uniqueId: uniqueId,\n};\n","// https://github.com/d3/d3-plugins/blob/master/box/box.js\n// * Original source March 22, 2013\n// * Enhancements integrated on May 13, 2018 for dc.js library only\n\n// https://github.com/d3/d3-plugins/blob/master/LICENSE\n// Copyright (c) 2012-2015, Michael Bostock\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// * Redistributions of source code must retain the above copyright notice, this\n//   list of conditions and the following disclaimer.\n//\n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution.\n//\n// * The name Michael Bostock may not be used to endorse or promote products\n//   derived from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n/*eslint complexity: 0*/\n\n// Inspired by http://informationandvisualization.de/blog/box-plot\n\nimport { ascending, quantile, range } from 'd3-array';\nimport { select } from 'd3-selection';\nimport { scaleLinear } from 'd3-scale';\nimport { timerFlush } from 'd3-timer';\n\n/**\n * Used by BoxPlot\n *\n * @hidden\n */\nexport const d3Box = function () {\n    let width = 1;\n    let height = 1;\n    let duration = 0;\n    const delay = 0;\n    let domain = null;\n    let value = Number;\n    let whiskers = boxWhiskers;\n    let quartiles = boxQuartiles;\n    let tickFormat = null;\n\n    // Enhanced attributes\n    let renderDataPoints = false;\n    const dataRadius = 3;\n    let dataOpacity = 0.3;\n    let dataWidthPortion = 0.8;\n    let renderTitle = false;\n    let showOutliers = true;\n    let boldOutlier = false;\n\n    // For each small multiple…\n    function box(g) {\n        g.each(function (data, index) {\n            data = data.map(value).sort(ascending);\n            const _g = select(this);\n            const n = data.length;\n            let min;\n            let max;\n\n            // Leave if there are no items.\n            if (n === 0) {\n                return;\n            }\n\n            // Compute quartiles. Must return exactly 3 elements.\n            const quartileData = (data.quartiles = quartiles(data));\n\n            // Compute whiskers. Must return exactly 2 elements, or null.\n            const whiskerIndices = whiskers && whiskers.call(this, data, index);\n            const whiskerData = whiskerIndices && whiskerIndices.map(_i => data[_i]);\n\n            // Compute outliers. If no whiskers are specified, all data are 'outliers'.\n            // We compute the outliers as indices, so that we can join across transitions!\n            const outlierIndices = whiskerIndices\n                ? range(0, whiskerIndices[0]).concat(range(whiskerIndices[1] + 1, n))\n                : range(n);\n\n            // Determine the maximum value based on if outliers are shown\n            if (showOutliers) {\n                min = data[0];\n                max = data[n - 1];\n            } else {\n                min = data[whiskerIndices[0]];\n                max = data[whiskerIndices[1]];\n            }\n            const pointIndices = range(whiskerIndices[0], whiskerIndices[1] + 1);\n\n            // Compute the new x-scale.\n            const x1 = scaleLinear()\n                .domain((domain && domain.call(this, data, index)) || [min, max])\n                .range([height, 0]);\n\n            // Retrieve the old x-scale, if this is an update.\n            const x0 = this.__chart__ || scaleLinear().domain([0, Infinity]).range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            // Note: the box, median, and box tick elements are fixed in number,\n            // so we only have to handle enter and update. In contrast, the outliers\n            // and other elements are variable, so we need to exit them! Variable\n            // elements also fade in and out.\n\n            // Update center line: the vertical line spanning the whiskers.\n            const center = _g.selectAll('line.center').data(whiskerData ? [whiskerData] : []);\n\n            center\n                .enter()\n                .insert('line', 'rect')\n                .attr('class', 'center')\n                .attr('x1', width / 2)\n                .attr('y1', d => x0(d[0]))\n                .attr('x2', width / 2)\n                .attr('y2', d => x0(d[1]))\n                .style('opacity', 1e-6)\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .style('opacity', 1)\n                .attr('y1', d => x1(d[0]))\n                .attr('y2', d => x1(d[1]));\n\n            center\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .style('opacity', 1)\n                .attr('x1', width / 2)\n                .attr('x2', width / 2)\n                .attr('y1', d => x1(d[0]))\n                .attr('y2', d => x1(d[1]));\n\n            center\n                .exit()\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .style('opacity', 1e-6)\n                .attr('y1', d => x1(d[0]))\n                .attr('y2', d => x1(d[1]))\n                .remove();\n\n            // Update innerquartile box.\n            const _box = _g.selectAll('rect.box').data([quartileData]);\n\n            _box.enter()\n                .append('rect')\n                .attr('class', 'box')\n                .attr('x', 0)\n                .attr('y', d => x0(d[2]))\n                .attr('width', width)\n                .attr('height', d => x0(d[0]) - x0(d[2]))\n                .style('fill-opacity', renderDataPoints ? 0.1 : 1)\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y', d => x1(d[2]))\n                .attr('height', d => x1(d[0]) - x1(d[2]));\n\n            _box.transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('width', width)\n                .attr('y', d => x1(d[2]))\n                .attr('height', d => x1(d[0]) - x1(d[2]));\n\n            // Update median line.\n            const medianLine = _g.selectAll('line.median').data([quartileData[1]]);\n\n            medianLine\n                .enter()\n                .append('line')\n                .attr('class', 'median')\n                .attr('x1', 0)\n                .attr('y1', x0)\n                .attr('x2', width)\n                .attr('y2', x0)\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y1', x1)\n                .attr('y2', x1);\n\n            medianLine\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('x1', 0)\n                .attr('x2', width)\n                .attr('y1', x1)\n                .attr('y2', x1);\n\n            // Update whiskers.\n            const whisker = _g.selectAll('line.whisker').data(whiskerData || []);\n\n            whisker\n                .enter()\n                .insert('line', 'circle, text')\n                .attr('class', 'whisker')\n                .attr('x1', 0)\n                .attr('y1', x0)\n                .attr('x2', width)\n                .attr('y2', x0)\n                .style('opacity', 1e-6)\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y1', x1)\n                .attr('y2', x1)\n                .style('opacity', 1);\n\n            whisker\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('x1', 0)\n                .attr('x2', width)\n                .attr('y1', x1)\n                .attr('y2', x1)\n                .style('opacity', 1);\n\n            whisker\n                .exit()\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y1', x1)\n                .attr('y2', x1)\n                .style('opacity', 1e-6)\n                .remove();\n\n            // Update outliers.\n            if (showOutliers) {\n                const outlierClass = boldOutlier ? 'outlierBold' : 'outlier';\n                const outlierSize = boldOutlier ? 3 : 5;\n                const outlierX = boldOutlier\n                    ? function () {\n                          return Math.floor(\n                              Math.random() * (width * dataWidthPortion) +\n                                  1 +\n                                  (width - width * dataWidthPortion) / 2\n                          );\n                      }\n                    : function () {\n                          return width / 2;\n                      };\n\n                const outlier = _g.selectAll(`circle.${outlierClass}`).data(outlierIndices, Number);\n\n                outlier\n                    .enter()\n                    .insert('circle', 'text')\n                    .attr('class', outlierClass)\n                    .attr('r', outlierSize)\n                    .attr('cx', outlierX)\n                    .attr('cy', i => x0(data[i]))\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cy', i => x1(data[i]))\n                    .style('opacity', 0.6);\n\n                if (renderTitle) {\n                    outlier.selectAll('title').remove();\n                    outlier.append('title').text(i => data[i]);\n                }\n\n                outlier\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cx', outlierX)\n                    .attr('cy', i => x1(data[i]))\n                    .style('opacity', 0.6);\n\n                outlier\n                    .exit()\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cy', 0) // function (i) { return x1(d[i]); })\n                    .style('opacity', 1e-6)\n                    .remove();\n            }\n\n            // Update Values\n            if (renderDataPoints) {\n                const point = _g.selectAll('circle.data').data(pointIndices);\n\n                point\n                    .enter()\n                    .insert('circle', 'text')\n                    .attr('class', 'data')\n                    .attr('r', dataRadius)\n                    .attr('cx', () =>\n                        Math.floor(\n                            Math.random() * (width * dataWidthPortion) +\n                                1 +\n                                (width - width * dataWidthPortion) / 2\n                        )\n                    )\n                    .attr('cy', i => x0(data[i]))\n                    .style('opacity', 1e-6)\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cy', i => x1(data[i]))\n                    .style('opacity', dataOpacity);\n\n                if (renderTitle) {\n                    point.selectAll('title').remove();\n                    point.append('title').text(i => data[i]);\n                }\n\n                point\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cx', () =>\n                        Math.floor(\n                            Math.random() * (width * dataWidthPortion) +\n                                1 +\n                                (width - width * dataWidthPortion) / 2\n                        )\n                    )\n                    .attr('cy', i => x1(data[i]))\n                    .style('opacity', dataOpacity);\n\n                point\n                    .exit()\n                    .transition()\n                    .duration(duration)\n                    .delay(delay)\n                    .attr('cy', 0)\n                    .style('opacity', 1e-6)\n                    .remove();\n            }\n\n            // Compute the tick format.\n            const format = tickFormat || x1.tickFormat(8);\n\n            // Update box ticks.\n            const boxTick = _g.selectAll('text.box').data(quartileData);\n\n            // tslint:disable:no-bitwise\n\n            boxTick\n                .enter()\n                .append('text')\n                .attr('class', 'box')\n                .attr('dy', '.3em')\n                .attr('dx', (d, i) => (i & 1 ? 6 : -6))\n                .attr('x', (d, i) => (i & 1 ? width : 0))\n                .attr('y', x0)\n                .attr('text-anchor', (d, i) => (i & 1 ? 'start' : 'end'))\n                .text(format)\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y', x1);\n\n            boxTick\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .text(format)\n                .attr('x', (d, i) => (i & 1 ? width : 0))\n                .attr('y', x1);\n\n            // tslint:enable:no-bitwise\n\n            // Update whisker ticks. These are handled separately from the box\n            // ticks because they may or may not exist, and we want don't want\n            // to join box ticks pre-transition with whisker ticks post-.\n            const whiskerTick = _g.selectAll('text.whisker').data(whiskerData || []);\n\n            whiskerTick\n                .enter()\n                .append('text')\n                .attr('class', 'whisker')\n                .attr('dy', '.3em')\n                .attr('dx', 6)\n                .attr('x', width)\n                .attr('y', x0)\n                .text(format)\n                .style('opacity', 1e-6)\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y', x1)\n                .style('opacity', 1);\n\n            whiskerTick\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .text(format)\n                .attr('x', width)\n                .attr('y', x1)\n                .style('opacity', 1);\n\n            whiskerTick\n                .exit()\n                .transition()\n                .duration(duration)\n                .delay(delay)\n                .attr('y', x1)\n                .style('opacity', 1e-6)\n                .remove();\n\n            // Remove temporary quartiles element from within data array.\n            delete data.quartiles;\n        });\n        timerFlush();\n    }\n\n    box.width = function (x) {\n        if (!arguments.length) {\n            return width;\n        }\n        width = x;\n        return box;\n    };\n\n    box.height = function (x) {\n        if (!arguments.length) {\n            return height;\n        }\n        height = x;\n        return box;\n    };\n\n    box.tickFormat = function (x) {\n        if (!arguments.length) {\n            return tickFormat;\n        }\n        tickFormat = x;\n        return box;\n    };\n\n    box.showOutliers = function (x) {\n        if (!arguments.length) {\n            return showOutliers;\n        }\n        showOutliers = x;\n        return box;\n    };\n\n    box.boldOutlier = function (x) {\n        if (!arguments.length) {\n            return boldOutlier;\n        }\n        boldOutlier = x;\n        return box;\n    };\n\n    box.renderDataPoints = function (x) {\n        if (!arguments.length) {\n            return renderDataPoints;\n        }\n        renderDataPoints = x;\n        return box;\n    };\n\n    box.renderTitle = function (x) {\n        if (!arguments.length) {\n            return renderTitle;\n        }\n        renderTitle = x;\n        return box;\n    };\n\n    box.dataOpacity = function (x) {\n        if (!arguments.length) {\n            return dataOpacity;\n        }\n        dataOpacity = x;\n        return box;\n    };\n\n    box.dataWidthPortion = function (x) {\n        if (!arguments.length) {\n            return dataWidthPortion;\n        }\n        dataWidthPortion = x;\n        return box;\n    };\n\n    box.duration = function (x) {\n        if (!arguments.length) {\n            return duration;\n        }\n        duration = x;\n        return box;\n    };\n\n    box.domain = function (x) {\n        if (!arguments.length) {\n            return domain;\n        }\n        domain = x === null ? x : typeof x === 'function' ? x : () => x;\n        return box;\n    };\n\n    box.value = function (x) {\n        if (!arguments.length) {\n            return value;\n        }\n        value = x;\n        return box;\n    };\n\n    box.whiskers = function (x) {\n        if (!arguments.length) {\n            return whiskers;\n        }\n        whiskers = x;\n        return box;\n    };\n\n    box.quartiles = function (x) {\n        if (!arguments.length) {\n            return quartiles;\n        }\n        quartiles = x;\n        return box;\n    };\n\n    return box;\n};\n\n/**\n * Used by BoxPlot\n *\n * @hidden\n */\nfunction boxWhiskers(d) {\n    return [0, d.length - 1];\n}\n\n/**\n * Used by BoxPlot\n *\n * @hidden\n */\nfunction boxQuartiles(d) {\n    return [quantile(d, 0.25), quantile(d, 0.5), quantile(d, 0.75)];\n}\n","export class FilterHandler {\n    private _filters: any[] = []; // TODO: find better types\n    get filters(): any[] {\n        return this._filters;\n    }\n\n    set filters(value: any[]) {\n        this._filters = value;\n    }\n\n    /**\n     * Check whether any active filter or a specific filter is associated.\n     */\n    public hasFilter(filter?): boolean {\n        if (filter === null || typeof filter === 'undefined') {\n            return this.filters.length > 0;\n        }\n        return this.filters.some(f => filter <= f && filter >= f);\n    }\n\n    /**\n     * Different data backends will implement it differently.\n     * Crossfilter version will apply the filter onto the corresponding dimension.\n     */\n    protected applyFilters() {\n        // do nothing at this level, derived classes will actually implement it\n    }\n\n    /**\n     * This will notify charts that filters have changed.\n     * It will be implemented in one of derived classes.\n     */\n    protected notifyListeners(filter) {}\n\n    // TODO rewrite to use FilterHandler / CFFilterHandler\n    /**\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\n     * is given.\n     *\n     * The filter parameter can take one of these forms:\n     * * A single value: the value will be toggled (added if it is not present in the current\n     * filters, removed if it is present)\n     * * An array containing a single array of values (`[ [value,value,value] ]`): each value is\n     * toggled\n     * * When appropriate for the chart, a {@link IFilter | dc filter object} such as\n     *   * {@link RangedFilter} for the {@link CoordinateGridMixin} charts\n     *   * {@link TwoDimensionalFilter} for the {@link HeatMap}\n     *   * {@link RangedTwoDimensionalFilter} for the {@link ScatterPlot}\n     *   * {@link HierarchyFilter} for the {@link SunburstChart}\n     *   * `null`: the filter will be reset by {@link CFSimpleAdapter.resetFilters}\n     *\n     * Note that this is always a toggle (even when it doesn't make sense for the filter type). If\n     * you wish to replace the current filter call\n     * {@link BaseMixin.replaceFilter | `chart.replaceFilter(filter)`} instead.\n     *\n     * Each toggle is executed by checking if the value is already present using the\n     * {@link CFSimpleAdapter.hasFilter}; if it is not present, it is added\n     * using the {@link CFSimpleAdapter.addFilter}; if it is already present,\n     * it is removed using the {@link CFSimpleAdapter.removeFilter}.\n     *\n     * In the Crossfilter version, once the filters array has been updated,\n     * the filters are applied to the\n     * crossfilter dimension, using the {@link CFSimpleAdapter.applyFilters}.\n     *\n     * Once you have set the filters, call {@link BaseMixin.redrawGroup}\n     * (or {@link ChartGroup.redrawAll}) to redraw the chart's group.\n     * @see {@link CFSimpleAdapter.hasFilter}\n     * @see {@link CFSimpleAdapter.addFilter}\n     * @see {@link CFSimpleAdapter.removeFilter}\n     * @see {@link CFSimpleAdapter.applyFilters}\n     * @see {@link BaseMixin.replaceFilter}\n     * @example\n     * ```\n     * // filter by a single string\n     * chart.filter('Sunday');\n     * // filter by a single age\n     * chart.filter(18);\n     * // filter by a set of states\n     * chart.filter([ ['MA', 'TX', 'ND', 'WA'] ]);\n     * // filter by range -- note the use of filters.RangedFilter, which is different\n     * // from the syntax for filtering a crossfilter dimension directly, dimension.filter([15,20])\n     * chart.filter(new RangedFilter(15,20));\n     * ```\n     */\n    public filter();\n    public filter(filter): this;\n    public filter(filter?) {\n        if (!arguments.length) {\n            return this.filters.length > 0 ? this.filters[0] : null;\n        }\n\n        if (filter === null) {\n            this.resetFilters();\n        } else if (\n            filter instanceof Array &&\n            filter[0] instanceof Array &&\n            !(filter as any).isFiltered\n        ) {\n            // list of filters\n            filter[0].forEach(f => this.toggleFilter(f));\n        } else {\n            this.toggleFilter(filter);\n        }\n\n        this.applyFilters();\n\n        this.notifyListeners(filter);\n\n        return this;\n    }\n\n    public toggleFilter(filter) {\n        if (this.hasFilter(filter)) {\n            this.removeFilter(filter);\n        } else {\n            this.addFilter(filter);\n        }\n    }\n\n    /**\n     * Add this filter to existing filters.\n     *\n     * Override this if you need to alter the default behaviour of this filter to be just appended to the current list.\n     *\n     * TODO: link to example\n     */\n    protected addFilter(f) {\n        this.filters.push(f);\n    }\n\n    /**\n     * Remove this filter from existing filters.\n     *\n     * Override this if you need to alter the default behaviour of this filter to be just removed from the current list.\n     *\n     * TODO: link to example\n     */\n    public removeFilter(filter) {\n        this.filters = this.filters.filter(f => !(filter <= f && filter >= f));\n    }\n\n    /**\n     * Clear current filters.\n     */\n    public resetFilters() {\n        this.filters = [];\n    }\n\n    /**\n     * An opportunity to cleanup.\n     */\n    public dispose() {\n        // use this to cleanup before discarding\n    }\n}\n","import { MinimalCFDimension } from '../core/types';\nimport { FilterHandler } from './filter-handler';\n\nexport interface ICFFilterHandlerConf {\n    dimension?: MinimalCFDimension;\n}\n\nexport class CFFilterHandler extends FilterHandler {\n    protected _conf: ICFFilterHandlerConf;\n\n    constructor(conf: ICFFilterHandlerConf = {}) {\n        super();\n        this.configure(conf);\n    }\n    public configure(conf: ICFFilterHandlerConf): this {\n        this._conf = { ...this._conf, ...conf };\n        return this;\n    }\n\n    public conf(): ICFFilterHandlerConf {\n        return this._conf;\n    }\n\n    public applyFilters() {\n        if (!(this._conf.dimension && this._conf.dimension.filter)) {\n            return;\n        }\n\n        if (this.filters.length === 0) {\n            this._conf.dimension.filter(null);\n        } else if (this.filters.length === 1 && !this.filters[0].isFiltered) {\n            // single value and not a function-based filter\n            this._conf.dimension.filterExact(this.filters[0]);\n        } else if (this.filters.length === 1 && this.filters[0].filterType === 'RangedFilter') {\n            // single range-based filter\n            this._conf.dimension.filterRange(this.filters[0]);\n        } else {\n            this._conf.dimension.filterFunction(d => {\n                for (let i = 0; i < this.filters.length; i++) {\n                    const filter = this.filters[i];\n                    if (filter.isFiltered) {\n                        if (filter.isFiltered(d)) {\n                            return true;\n                        }\n                    } else if (filter <= d && filter >= d) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n    }\n}\n","import { CFFilterHandler, ICFFilterHandlerConf } from './c-f-filter-handler';\nimport { IFilterStorage } from '../core/i-filter-storage';\n\nexport interface IFilterStorageConf extends ICFFilterHandlerConf {\n    readonly filterStorage?: IFilterStorage;\n    readonly chartId?: string;\n    readonly primaryChart?: boolean;\n    readonly shareFilters?: boolean;\n    readonly onFiltersChanged?: (filters) => void;\n}\n\nexport class FilterStorageHelper extends CFFilterHandler {\n    private _listenerRegToken: any;\n    protected _conf: IFilterStorageConf;\n\n    constructor(conf: IFilterStorageConf = {}) {\n        super({\n            // @ts-ignore\n            shareFilters: true,\n            ...conf,\n        });\n    }\n\n    public conf(): IFilterStorageConf {\n        return super.conf();\n    }\n\n    public configure(conf: IFilterStorageConf): this {\n        super.configure(conf);\n        this._ensureListenerRegistered();\n        return this;\n    }\n\n    private _ensureListenerRegistered() {\n        if (!this._conf.filterStorage) {\n            return;\n        }\n\n        // If it was already registered, we check if the storage ky is still same\n        // in case that has changed we need to de-register and register afresh\n\n        const storageKey = this._storageKey();\n\n        if (this._listenerRegToken) {\n            if (this._listenerRegToken.storageKey === storageKey) {\n                // all good, storageKey has not changed\n                return;\n            }\n            // storageKey changed, de-register first\n            this._deRegisterListener();\n        }\n\n        this._listenerRegToken = this._conf.filterStorage.registerFilterListener({\n            storageKey,\n            onFiltersChanged: this._conf.onFiltersChanged,\n            chartId: this._conf.chartId,\n            primaryChart: this._conf.primaryChart,\n            applyFilters: filters => this.applyFilters(),\n        });\n    }\n\n    private _deRegisterListener() {\n        this._conf.filterStorage.deRegisterFilterListener(\n            this._listenerRegToken.storageKey,\n            this._listenerRegToken\n        );\n        this._listenerRegToken = undefined;\n    }\n\n    private _storageKey() {\n        if (this._conf.shareFilters) {\n            return this._conf.dimension;\n        } else {\n            return this;\n        }\n    }\n\n    get filters(): any[] {\n        return this._conf.filterStorage.getFiltersFor(this._storageKey());\n    }\n\n    set filters(value: any[]) {\n        this._conf.filterStorage.setFiltersFor(this._storageKey(), value);\n    }\n\n    public notifyListeners(filters) {\n        this._conf.filterStorage.notifyListeners(this._storageKey(), filters);\n    }\n\n    public dispose() {\n        super.dispose();\n        if (this._listenerRegToken) {\n            this._deRegisterListener();\n        }\n    }\n}\n","import { BaseAccessor, MinimalCFGroup, ValueAccessor } from '../core/types';\nimport { FilterStorageHelper, IFilterStorageConf } from './filter-storage-helper';\n\nexport interface ICFSimpleAdapterConf extends IFilterStorageConf {\n    readonly group?: MinimalCFGroup;\n    readonly groupName?: string;\n    readonly valueAccessor?: ValueAccessor;\n    readonly ordering?: BaseAccessor<any>;\n}\n\nexport class CFSimpleAdapter extends FilterStorageHelper {\n    protected _conf: ICFSimpleAdapterConf;\n\n    constructor(conf: ICFSimpleAdapterConf = {}) {\n        super({\n            valueAccessor: d => d.value,\n            ordering: d => d.key,\n            ...conf,\n        });\n    }\n\n    public configure(conf: ICFSimpleAdapterConf): this {\n        return super.configure(conf);\n    }\n\n    public conf(): ICFSimpleAdapterConf {\n        return super.conf();\n    }\n\n    // TODO: better typing\n    public data(): any {\n        const entities = this._conf.group.all();\n\n        // create a two level deep copy defensively\n        entities.map(val => ({ ...val }));\n\n        entities.forEach(e => {\n            e._value = this._conf.valueAccessor(e);\n        });\n\n        return entities;\n    }\n}\n","import { BaseType, select, Selection } from 'd3-selection';\nimport { dispatch, Dispatch } from 'd3-dispatch';\n\nimport { isNumber, sortBy, uniqueId } from '../core/utils';\nimport { instanceOfChart } from '../core/core';\nimport { chartRegistry } from '../core/chart-registry';\nimport { constants } from '../core/constants';\nimport { events } from '../core/events';\nimport { logger } from '../core/logger';\nimport { printFilters } from '../core/printers';\nimport { InvalidStateException } from '../core/invalid-state-exception';\nimport { BadArgumentException } from '../core/bad-argument-exception';\nimport { CFGrouping, ChartGroupType, ChartParentType, LegendItem } from '../core/types';\nimport { IBaseMixinConf } from './i-base-mixin-conf';\nimport { CFSimpleAdapter } from '../data/c-f-simple-adapter';\nimport { IChartGroup } from '../core/i-chart-group';\n\n/**\n * `BaseMixin` is an abstract functional object representing a basic `dc` chart object\n * for all chart and widget implementations. Methods from this class are inherited\n * and available on all chart implementations in the `dc` library.\n */\nexport class BaseMixin {\n    /**\n     * @hidden\n     */\n    protected _conf: IBaseMixinConf;\n\n    // tslint:disable-next-line:variable-name\n    private __dcFlag__: string;\n    private _anchor: string | Element;\n    private _root: Selection<Element, any, any, any>; // Do not assume much, allow any HTML or SVG element\n    private _svg: Selection<SVGElement, any, any, any>; // from d3-selection\n    private _isChild: boolean;\n    private _defaultWidthCalc: (element) => number;\n    private _widthCalc: (element) => number;\n    private _defaultHeightCalc: (element) => number;\n    private _heightCalc: (element) => number;\n    private _width: number;\n    private _height: number;\n    private _mandatoryAttributesList: string[];\n    private _chartGroup: IChartGroup;\n    private _listeners: Dispatch<BaseMixin>;\n    private _legend; // TODO: figure out actual type\n    /**\n     * @hidden\n     */\n    protected _dataProvider: CFSimpleAdapter;\n\n    /**\n     * Create a new chart\n     */\n    constructor(parent, chartGroup: ChartGroupType) {\n        this._anchor = undefined;\n        this._root = undefined;\n        this._svg = undefined;\n        this._isChild = undefined;\n\n        this.__dcFlag__ = uniqueId().toString();\n        this._chartGroup = this._getChartGroup(chartGroup);\n        this.anchor(parent);\n\n        this.configure({\n            minWidth: 200,\n            minHeight: 200,\n            useViewBoxResizing: false,\n            filterPrinter: printFilters,\n            controlsUseVisibility: false,\n            transitionDuration: 750,\n            transitionDelay: 0,\n            commitHandler: undefined,\n            keyAccessor: d => d.key,\n            label: d => d.key,\n            renderLabel: false,\n            renderTitle: true,\n            title: d => `${this._conf.keyAccessor(d)}: ${d._value}`,\n        });\n\n        this.dataProvider(new CFSimpleAdapter());\n\n        this._defaultWidthCalc = element => {\n            const width =\n                element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n            return width && width > this._conf.minWidth ? width : this._conf.minWidth;\n        };\n        this._widthCalc = this._defaultWidthCalc;\n\n        this._defaultHeightCalc = element => {\n            const height =\n                element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n            return height && height > this._conf.minHeight ? height : this._conf.minHeight;\n        };\n        this._heightCalc = this._defaultHeightCalc;\n        this._width = undefined;\n        this._height = undefined;\n\n        this._mandatoryAttributesList = [];\n\n        this._listeners = dispatch(\n            'preRender',\n            'postRender',\n            'preRedraw',\n            'postRedraw',\n            'filtered',\n            'zoomed',\n            'renderlet',\n            'pretransition'\n        );\n\n        this._legend = undefined;\n    }\n\n    /**\n     * An opportunity to cleanup.\n     *\n     * @category Ninja\n     */\n    public dispose() {\n        if (this._dataProvider) {\n            this._dataProvider.dispose();\n        }\n    }\n\n    /**\n     * Configure this chart. The given options are merged with current options.\n     */\n    public configure(conf: IBaseMixinConf): this {\n        this._conf = { ...this._conf, ...conf };\n        return this;\n    }\n\n    /**\n     * Get the current configuration.\n     *\n     * It returns reference to the internal structure.\n     * Any changes made may have unintended consequences.\n     *\n     * @category Intermediate\n     */\n    public conf(): IBaseMixinConf {\n        return this._conf;\n    }\n\n    /**\n     * TODO add details\n     */\n    public dataProvider(): CFSimpleAdapter;\n    public dataProvider(dataProvider): this;\n    public dataProvider(dataProvider?) {\n        if (!arguments.length) {\n            return this._dataProvider;\n        }\n\n        // cleanup previous data provider\n        if (this._dataProvider) {\n            this._dataProvider.dispose();\n        }\n\n        this._dataProvider = dataProvider;\n\n        this._dataProvider.configure({\n            chartId: this.anchorName(),\n            primaryChart: !this._isChild,\n            filterStorage: this.chartGroup().filterStorage,\n            onFiltersChanged: filter => this._filtersChanged(filter),\n        });\n\n        return this;\n    }\n\n    /**\n     * Set or get the height attribute of a chart. The height is applied to the SVGElement generated by\n     * the chart when rendered (or re-rendered). If a value is given, then it will be used to calculate\n     * the new height and the chart returned for method chaining.  The value can either be a numeric, a\n     * function, or falsy. If no value is specified then the value of the current height attribute will\n     * be returned.\n     *\n     * By default, without an explicit height being given, the chart will select the width of its\n     * anchor element. If that isn't possible it defaults to 200 (provided by the\n     * {@link IBaseMixinConf.minHeight} property). Setting the value falsy will return\n     * the chart to the default behavior.\n     * @see {@link IBaseMixinConf.minHeight}\n     * @example\n     * ```\n     * // Default height\n     * chart.height(function (element) {\n     *     var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;\n     *     return (height && height > chart.minHeight()) ? height : chart.minHeight();\n     * });\n     *\n     * chart.height(250); // Set the chart's height to 250px;\n     * chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function\n     * chart.height(null); // reset the height to the default auto calculation\n     * ```\n     */\n    public height(): number;\n    public height(height: number | (() => number)): this;\n    public height(height?) {\n        if (!arguments.length) {\n            if (!isNumber(this._height)) {\n                // only calculate once\n                this._height = this._heightCalc(this._root.node());\n            }\n            return this._height;\n        }\n        this._heightCalc = height\n            ? typeof height === 'function'\n                ? height\n                : () => height\n            : this._defaultHeightCalc;\n        this._height = undefined;\n        return this;\n    }\n\n    /**\n     * Set or get the width attribute of a chart.\n     * @see {@link height}\n     * @see {@link IBaseMixinConf.minWidth}\n     * @example\n     * ```\n     * // Default width\n     * chart.width(function (element) {\n     *     const width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\n     *     return (width && width > chart.minWidth()) ? width : chart.minWidth();\n     * });\n     * ```\n     */\n    public width(): number;\n    public width(width: number | (() => number)): this;\n    public width(width?) {\n        if (!arguments.length) {\n            if (!isNumber(this._width)) {\n                // only calculate once\n                this._width = this._widthCalc(this._root.node());\n            }\n            return this._width;\n        }\n        this._widthCalc = width\n            ? typeof width === 'function'\n                ? width\n                : () => width\n            : this._defaultWidthCalc;\n        this._width = undefined;\n        return this;\n    }\n\n    /**\n     * Return charts data, typically `group.all()`. Some charts override this method.\n     * The derived classes may even use different return type.\n     *\n     * @category Ninja\n     */\n    public data(): CFGrouping[] {\n        return this._dataProvider.data();\n    }\n\n    /**\n     * @hidden\n     */\n    protected _computeOrderedGroups(data) {\n        return sortBy(data, this._dataProvider.conf().ordering);\n    }\n\n    /**\n     * Clear all filters associated with this chart. The same effect can be achieved by calling\n     * {@link filter | chart.filter(null)}.\n     *\n     * @category Intermediate\n     */\n    public filterAll() {\n        return this.filter(null);\n    }\n\n    /**\n     * Execute d3 single selection in the chart's scope using the given selector and return the d3\n     * selection.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     *\n     * This is typically used in augmenting/modifying a chart.\n     *\n     * TODO link to example\n     *\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#select | d3.select}\n     *\n     * @example\n     * ```\n     * // Has the same effect as d3.select('#chart-id').select(selector)\n     * chart.select(selector)\n     *\n     * ```\n     *\n     * @category Intermediate\n     * @param sel CSS selector string\n     */\n    public select<DescElement extends BaseType>(sel) {\n        return this._root.select<DescElement>(sel);\n    }\n\n    /**\n     * Execute in scope d3 selectAll using the given selector and return d3 selection result.\n     *\n     * This function is **not chainable** since it does not return a chart instance; however the d3\n     * selection result can be chained to d3 function calls.\n     *\n     * This is typically used in augmenting/modifying a chart.\n     *\n     * TODO link to example\n     *\n     * @see {@link https://github.com/d3/d3-selection/blob/master/README.md#selectAll | d3.selectAll}\n     *\n     * @example\n     * ```\n     * // Has the same effect as d3.select('#chart-id').selectAll(selector)\n     * chart.selectAll(selector)\n     * ```\n     * @category Intermediate\n     * @param sel CSS selector string\n     */\n    public selectAll<DescElement extends BaseType, OldDatum>(sel) {\n        return this._root ? this._root.selectAll<DescElement, OldDatum>(sel) : null;\n    }\n\n    /**\n     * Set the root SVGElement to either be an existing chart's root; or any valid [d3 single\n     * selector](https://github.com/d3/d3-selection/blob/master/README.md#selecting-elements) specifying a dom\n     * block element such as a div; or a dom element or d3 selection.\n     *\n     * This is internally managed. Invoking it directly may have unintended consequences.\n     *\n     * @category Ninja\n     */\n    public anchor(): string | Element;\n    public anchor(parent: ChartParentType): this;\n    public anchor(parent?) {\n        if (!arguments.length) {\n            return this._anchor;\n        }\n        if (instanceOfChart(parent)) {\n            this._anchor = parent.anchor();\n            if ((this._anchor as any).children) {\n                // is _anchor a div?\n                this._anchor = `#${parent.anchorName()}`;\n            }\n            this._root = parent.root();\n            this._isChild = true;\n        } else if (parent) {\n            if (parent.select && parent.classed) {\n                // detect d3 selection\n                this._anchor = parent.node();\n            } else {\n                this._anchor = parent;\n            }\n            this._root = select(this._anchor as any); // _anchor can be either string or an Element, both are valid\n            this._root.classed(constants.CHART_CLASS, true);\n            this._chartGroup.register(this);\n            this._isChild = false;\n        } else {\n            throw new BadArgumentException('parent must be defined');\n        }\n        return this;\n    }\n\n    private _getChartGroup(chartGroup: ChartGroupType): IChartGroup {\n        return !chartGroup || typeof chartGroup === 'string'\n            ? chartRegistry.chartGroup(chartGroup as string)\n            : chartGroup;\n    }\n\n    /**\n     * Returns the DOM id for the chart's anchored location.\n     * @category Intermediate\n     */\n    public anchorName(): string {\n        const a: string | Element = this.anchor();\n        if (a) {\n            if (typeof a === 'string') {\n                return a.replace('#', '');\n            } else if (a.id) {\n                return a.id;\n            }\n        }\n        return `dc-chart${this.chartID()}`;\n    }\n\n    /**\n     * Returns the root element where a chart resides. Usually it will be the parent div element where\n     * the SVGElement was created.\n     *\n     * Resetting the root element on a chart outside of dc internals may have\n     * unexpected consequences.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement | HTMLElement}\n     *\n     * @category Ninja\n     */\n    public root(): Selection<Element, any, any, any>;\n    public root(rootElement: Selection<Element, any, any, any>): this;\n    public root(rootElement?) {\n        if (!arguments.length) {\n            return this._root;\n        }\n        this._root = rootElement;\n        return this;\n    }\n\n    /**\n     * Returns the top SVGElement for this specific chart.\n     *\n     * Usually generating an SVG Element is handled handled by dc internally.\n     * The {@link BubbleOverlay}, however, needs an SVG Element to be passed explicitly.\n     *\n     * Resetting the SVGElement on a chart outside\n     * of dc internals may have unexpected consequences.\n     *\n     * @category Ninja\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement | SVGElement}\n     */\n    public svg(): Selection<SVGElement, any, any, any>;\n    public svg(svgElement): this;\n    public svg(svgElement?) {\n        if (!arguments.length) {\n            return this._svg;\n        }\n        this._svg = svgElement;\n        return this;\n    }\n\n    /**\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement | SVGElement}\n     *\n     * @hidden\n     */\n    protected resetSvg(): Selection<SVGElement, any, any, any> {\n        this.select('svg').remove();\n        return this.generateSvg();\n    }\n\n    /**\n     * @hidden\n     */\n    protected sizeSvg(): void {\n        if (this._svg) {\n            if (!this._conf.useViewBoxResizing) {\n                this._svg.attr('width', this.width()).attr('height', this.height());\n            } else if (!this._svg.attr('viewBox')) {\n                this._svg.attr('viewBox', `0 0 ${this.width()} ${this.height()}`);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected generateSvg(): Selection<SVGElement, any, any, any> {\n        this._svg = this.root().append('svg');\n        this.sizeSvg();\n        return this._svg;\n    }\n\n    /**\n     * Turn on optional control elements within the root element. dc currently supports the\n     * following html control elements.\n     * * root.selectAll('.reset') - elements are turned on if the chart has an active filter. This type\n     * of control element is usually used to store a reset link to allow user to reset filter on a\n     * certain chart. This element will be turned off automatically if the filter is cleared.\n     * * root.selectAll('.filter') elements are turned on if the chart has an active filter. The text\n     * content of this element is then replaced with the current filter value using the filter printer\n     * function. This type of element will be turned off automatically if the filter is cleared.\n     *\n     * @see {@link turnOffControls}\n     * @category Intermediate\n     */\n    public turnOnControls(): this {\n        if (this._root) {\n            const attribute = this._conf.controlsUseVisibility ? 'visibility' : 'display';\n            this.selectAll('.reset').style(attribute, null);\n            this.selectAll('.filter')\n                .text(this._conf.filterPrinter(this.filters()))\n                .style(attribute, null);\n        }\n        return this;\n    }\n\n    /**\n     * Turn off optional control elements within the root element.\n     *\n     * @see {@link turnOnControls}\n     * @category Intermediate\n     */\n    public turnOffControls(): this {\n        if (this._root) {\n            const attribute = this._conf.controlsUseVisibility ? 'visibility' : 'display';\n            const value = this._conf.controlsUseVisibility ? 'hidden' : 'none';\n            this.selectAll('.reset').style(attribute, value);\n            this.selectAll('.filter').style(attribute, value).text(this.filter());\n        }\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _mandatoryAttributes(): string[];\n    /**\n     * @hidden\n     */\n    protected _mandatoryAttributes(_: string[]): this;\n    /**\n     * @hidden\n     */\n    protected _mandatoryAttributes(_?) {\n        if (!arguments.length) {\n            return this._mandatoryAttributesList;\n        }\n        this._mandatoryAttributesList = _;\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected checkForMandatoryAttributes(a): void {\n        if (!this[a] || !this[a]()) {\n            throw new InvalidStateException(\n                `Mandatory attribute chart.${a} is missing on chart[#${this.anchorName()}]`\n            );\n        }\n    }\n\n    /**\n     * Invoking this method will force the chart to re-render everything from scratch. Generally it\n     * should only be used to render the chart for the first time on the page or if you want to make\n     * sure everything is redrawn from scratch instead of relying on the default incremental redrawing\n     * behaviour.\n     *\n     * Typically you would invoke {@link renderGroup} which will redraw all charts within the {@link chartGroup}.\n     */\n    public render(): this {\n        this._height = this._width = undefined; // force recalculate\n        this._listeners.call('preRender', this, this);\n\n        // if (this._mandatoryAttributesList) {\n        //     this._mandatoryAttributesList.forEach(e => this.checkForMandatoryAttributes(e));\n        // }\n\n        const result = this._doRender();\n\n        if (this._legend) {\n            this._legend.render();\n        }\n\n        this._activateRenderlets('postRender');\n\n        return result;\n    }\n\n    /**\n     * It needs to be public as it is used by Composite Charts\n     * @hidden\n     */\n    public _activateRenderlets(event?): void {\n        this._listeners.call('pretransition', this, this);\n        if (this._conf.transitionDuration > 0 && this._svg) {\n            this._svg\n                .transition()\n                .duration(this._conf.transitionDuration)\n                .delay(this._conf.transitionDelay)\n                .on('end', () => {\n                    this._listeners.call('renderlet', this, this);\n                    if (event) {\n                        this._listeners.call(event, this, this);\n                    }\n                });\n        } else {\n            this._listeners.call('renderlet', this, this);\n            if (event) {\n                this._listeners.call(event, this, this);\n            }\n        }\n    }\n\n    /**\n     * Calling redraw will cause the chart to re-render data changes incrementally. If there is no\n     * change in the underlying data dimension then calling this method will have no effect on the\n     * chart. Most chart interaction in dc will automatically trigger this method through internal\n     * events; therefore, you only need to\n     * manually invoke this function if data is manipulated outside of dc's control (for example if\n     * data is loaded in the background using\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add | crossfilter.add}).\n     *\n     * Typically you would invoke {@link redrawGroup} which will redraw all charts within the {@link chartGroup}.\n     */\n    public redraw(): this {\n        this.sizeSvg();\n        this._listeners.call('preRedraw', this, this);\n\n        const result = this._doRedraw();\n\n        if (this._legend) {\n            this._legend.render();\n        }\n\n        this._activateRenderlets('postRedraw');\n\n        return result;\n    }\n\n    /**\n     * Redraws all charts in the same group as this chart, typically in reaction to a filter\n     * change. If the chart has a {@link commitHandler}, it will\n     * be executed and waited for. It internally calls {@link ChartGroup.redrawAll}\n     *\n     * @see {@link redraw}\n     * @see {@link chartGroup}\n     */\n    public redrawGroup(): this {\n        if (this._conf.commitHandler) {\n            this._conf.commitHandler(false, (error, result) => {\n                if (error) {\n                    console.log(error);\n                } else {\n                    this.chartGroup().redrawAll();\n                }\n            });\n        } else {\n            this.chartGroup().redrawAll();\n        }\n        return this;\n    }\n\n    /**\n     * Renders all charts in the same group as this chart. If the chart has a\n     * {@link commitHandler}, it will be executed and waited for.\n     * It internally calls {@link ChartGroup.redrawAll}\n     *\n     * @see {@link render}\n     * @see {@link chartGroup}\n     */\n    public renderGroup(): this {\n        if (this._conf.commitHandler) {\n            this._conf.commitHandler(false, (error, result) => {\n                if (error) {\n                    console.log(error);\n                } else {\n                    this.chartGroup().renderAll();\n                }\n            });\n        } else {\n            this.chartGroup().renderAll();\n        }\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _invokeFilteredListener(f): void {\n        if (f !== undefined) {\n            this._listeners.call('filtered', this, this, f);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _invokeZoomedListener(): void {\n        this._listeners.call('zoomed', this, this);\n    }\n\n    /**\n     * Check whether any active filter or a specific filter is associated with particular chart instance.\n     * This function is **not chainable**.\n     *\n     * Starting version 5, filtering is provided by DataProvider.\n     *\n     * @see {@link CFSimpleAdapter.hasFilter}.\n     * @category Intermediate\n     */\n    public hasFilter(filter?): boolean {\n        return this._dataProvider.hasFilter(filter);\n    }\n\n    /**\n     * Replace the chart filter. This is equivalent to calling `chart.filter(null).filter(filter)`\n     * but more efficient because the filter is only applied once.\n     *\n     * Starting version 5, filtering is provided by DataProvider.\n     *\n     * @see {@link CFSimpleAdapter.resetFilters}.\n     * @category Intermediate\n     */\n    public replaceFilter(filter): this {\n        // The following call resets the filters without actually applying those\n        this._dataProvider.resetFilters();\n\n        this.filter(filter);\n        return this;\n    }\n\n    /**\n     * Filter the chart by the given parameter, or return the current filter if no input parameter\n     * is given.\n     *\n     * Starting version 5, filtering is provided by DataProvider.\n     *\n     * @see {@link CFSimpleAdapter.filter}.\n     * @category Intermediate\n     */\n    public filter();\n    public filter(filter): this;\n    public filter(filter?) {\n        if (!arguments.length) {\n            return this._dataProvider.filter();\n        }\n        this._dataProvider.filter(filter);\n\n        return this;\n    }\n\n    /**\n     * TODO check if it can be made private\n     *\n     * @hidden\n     */\n    protected _filtersChanged(filters) {\n        this._invokeFilteredListener(filters);\n\n        if (this._root !== null && this.hasFilter()) {\n            this.turnOnControls();\n        } else {\n            this.turnOffControls();\n        }\n    }\n\n    /**\n     * Returns all current filters. This method does not perform defensive cloning of the internal\n     * filter array before returning, therefore any modification of the returned array will effect the\n     * chart's internal filter storage.\n     *\n     * Starting version 5, filtering is provided by DataProvider.\n     *\n     * @see {@link CFSimpleAdapter.filters}.\n     * @category Intermediate\n     */\n    public filters() {\n        return this._dataProvider.filters;\n    }\n\n    /**\n     * @hidden\n     */\n    public highlightSelected(e): void {\n        select(e).classed(constants.SELECTED_CLASS, true);\n        select(e).classed(constants.DESELECTED_CLASS, false);\n    }\n\n    /**\n     * @hidden\n     */\n    public fadeDeselected(e): void {\n        select(e).classed(constants.SELECTED_CLASS, false);\n        select(e).classed(constants.DESELECTED_CLASS, true);\n    }\n\n    /**\n     * @hidden\n     */\n    public resetHighlight(e): void {\n        select(e).classed(constants.SELECTED_CLASS, false);\n        select(e).classed(constants.DESELECTED_CLASS, false);\n    }\n\n    /**\n     * This function is passed to d3 as the onClick handler for each chart. The default behavior is to\n     * filter on the clicked datum (passed to the callback) and redraw the chart group.\n     *\n     * This function can be replaced in order to change the click behavior (but first look at\n     * @example\n     * ```\n     * const oldHandler = chart.onClick;\n     * chart.onClick = function(datum) {\n     *   // use datum.\n     * }\n     * ```\n     *\n     * @category Ninja\n     */\n    public onClick(datum: any, i?: number): void {\n        const filter = this._conf.keyAccessor(datum);\n        events.trigger(() => {\n            this.filter(filter);\n            this.redrawGroup();\n        });\n    }\n\n    /**\n     * abstract function stub\n     *\n     * @hidden\n     */\n    protected _doRender(): this {\n        // do nothing in base, should be overridden by sub-function\n        return this;\n    }\n\n    /**\n     * abstract function stub\n     *\n     * @hidden\n     */\n    protected _doRedraw(): this {\n        // do nothing in base, should be overridden by sub-function\n        return this;\n    }\n\n    /**\n     * List of items that will show as legends.\n     * The charts implement this method.\n     *\n     * @category Ninja\n     */\n    public legendables(): LegendItem[] {\n        // do nothing in base, should be overridden by sub-function\n        return [];\n    }\n\n    /**\n     * Need to be public as legend methods are used by Composite Charts\n     *\n     * @hidden\n     */\n    public legendHighlight(d?: LegendItem) {\n        // do nothing in base, should be overridden by sub-function\n    }\n\n    /**\n     * Need to be public as legend methods are used by Composite Charts\n     *\n     * @hidden\n     */\n    public legendReset(d?: LegendItem) {\n        // do nothing in base, should be overridden by sub-function\n    }\n\n    /**\n     * Need to be public as legend methods are used by Composite Charts\n     *\n     * @hidden\n     */\n    public legendToggle(d?: LegendItem) {\n        // do nothing in base, should be overriden by sub-function\n    }\n\n    /**\n     * Need to be public as legend methods are used by Composite Charts\n     *\n     * @hidden\n     */\n    public isLegendableHidden(d?: LegendItem): boolean {\n        // do nothing in base, should be overridden by sub-function\n        return false;\n    }\n\n    /**\n     * Chart groups are rendered or redrawn\n     * together since it is expected they share the same underlying data set.\n     *\n     * chartGroup is passed to teh chart constructor.\n     * Setting it directly can have unintended consequences.\n     */\n    public chartGroup(): IChartGroup;\n    public chartGroup(chartGroup: ChartGroupType): this;\n    public chartGroup(chartGroup?) {\n        if (!arguments.length) {\n            return this._chartGroup;\n        }\n        if (!this._isChild) {\n            this._chartGroup.deregister(this);\n        }\n        this._chartGroup = this._getChartGroup(chartGroup);\n        if (!this._isChild) {\n            this._chartGroup.register(this);\n        }\n        return this;\n    }\n\n    /**\n     * Expire the internal chart cache. dc charts cache some data internally on a per chart basis to\n     * speed up rendering and avoid unnecessary calculation; however it might be useful to clear the\n     * cache if you have changed state which will affect rendering.  For example, if you invoke\n     * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_add | crossfilter.add}\n     * function or reset group or dimension after rendering, it is a good idea to\n     * clear the cache to make sure charts are rendered properly.\n     *\n     * TODO determine if it can be removed, does not seem to be used\n     * @category Ninja\n     */\n    protected expireCache(): this {\n        // do nothing in base, should be overridden by sub-function\n        return this;\n    }\n\n    /**\n     * Attach a Legend widget to this chart. The legend widget will automatically draw legend labels\n     * based on the color setting and names associated with each group.\n     *\n     * @example\n     * ```\n     * chart.legend(new Legend().x(400).y(10).itemHeight(13).gap(5))\n     * ```\n     */\n    public legend();\n    public legend(legend): this;\n    public legend(legend?) {\n        if (!arguments.length) {\n            return this._legend;\n        }\n        this._legend = legend;\n        this._legend.parent(this);\n        return this;\n    }\n\n    /**\n     * Returns the internal numeric ID of the chart.\n     *\n     * @category Intermediate\n     */\n    public chartID(): string {\n        return this.__dcFlag__;\n    }\n\n    /**\n     * Set chart options using a configuration object. Each key in the object will cause the method of\n     * the same name to be called with the value to set that attribute for the chart.\n     * TODO: With concept of conf, this is less relevant now, consider moving it to compat.\n     * @example\n     * ```\n     * chart.options({dimension: myDimension, group: myGroup});\n     * ```\n     * @category Ninja\n     */\n    public options(opts) {\n        const applyOptions = [\n            'anchor',\n            'group',\n            'xAxisLabel',\n            'yAxisLabel',\n            'stack',\n            'title',\n            'point',\n            'getColor',\n            'overlayGeoJson',\n        ];\n\n        for (const o in opts) {\n            if (typeof this[o] === 'function') {\n                if (opts[o] instanceof Array && applyOptions.indexOf(o) !== -1) {\n                    this[o].apply(this, opts[o]);\n                } else {\n                    this[o].call(this, opts[o]);\n                }\n            } else {\n                logger.debug(`Not a valid option setter name: ${o}`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * All dc chart instance supports the following listeners.\n     * Supports the following events:\n     * * `renderlet` - This listener function will be invoked after transitions after redraw and render. Replaces the\n     * deprecated {@link renderlet} method.\n     * * `pretransition` - Like `.on('renderlet', ...)` but the event is fired before transitions start.\n     * * `preRender` - This listener function will be invoked before chart rendering.\n     * * `postRender` - This listener function will be invoked after chart finish rendering including\n     * all renderlets' logic.\n     * * `preRedraw` - This listener function will be invoked before chart redrawing.\n     * * `postRedraw` - This listener function will be invoked after chart finish redrawing\n     * including all renderlets' logic.\n     * * `filtered` - This listener function will be invoked after a filter is applied, added or removed.\n     * * `zoomed` - This listener function will be invoked after a zoom is triggered.\n     * @see {@link https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on | d3.dispatch.on}\n     * @example\n     * ```\n     * .on('renderlet', function(chart, filter){...})\n     * .on('pretransition', function(chart, filter){...})\n     * .on('preRender', function(chart){...})\n     * .on('postRender', function(chart){...})\n     * .on('preRedraw', function(chart){...})\n     * .on('postRedraw', function(chart){...})\n     * .on('filtered', function(chart, filter){...})\n     * .on('zoomed', function(chart, filter){...})\n     * ```\n     * @category Intermediate\n     */\n    public on(event, listener): this {\n        this._listeners.on(event, listener);\n        return this;\n    }\n\n    /**\n     * A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added\n     * to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked\n     * right after the chart finishes its transitions, giving you a way to modify the SVGElements.\n     * Renderlet functions take the chart instance as the only input parameter and you can\n     * use the dc API or use raw d3 to achieve pretty much any effect.\n     *\n     * Use {@link on} with a 'renderlet' prefix.\n     * Generates a random key for the renderlet, which makes it hard to remove.\n     * @deprecated chart.renderlet has been deprecated. Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)\n     * @example\n     * ```\n     * // do this instead of .renderlet(function(chart) { ... })\n     * chart.on(\"renderlet\", function(chart){\n     *     // mix of dc API and d3 manipulation\n     *     chart.select('g.y').style('display', 'none');\n     *     // its a closure so you can also access other chart variable available in the closure scope\n     *     moveChart.filter(chart.filter());\n     * });\n     * ```\n     *\n     * TODO move to compat\n     */\n    public renderlet(renderletFunction): this {\n        logger.warnOnce(\n            'chart.renderlet has been deprecated. Please use chart.on(\"renderlet.<renderletKey>\", renderletFunction)'\n        );\n        this.on(`renderlet.${uniqueId()}`, renderletFunction);\n        return this;\n    }\n}\n","import {\n    BaseAccessor,\n    Constructor,\n    KeyAccessor,\n    LabelAccessor,\n    MinimalCFDimension,\n    MinimalCFGroup,\n    TitleAccessor,\n    ValueAccessor,\n} from '../../core/types';\n\nimport { BaseMixin as BaseMixinNeo } from '../../base/base-mixin';\n\nexport function BaseMixinExt<TBase extends Constructor<BaseMixinNeo>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n        /**\n         * Set or get the minimum width attribute of a chart. This only has effect when used with the default\n         * {@link BaseMixin.width width} function.\n         * @see {@link BaseMixin.width width}\n         */\n        public minWidth(): number;\n        public minWidth(minWidth: number): this;\n        public minWidth(minWidth?) {\n            if (!arguments.length) {\n                return this._conf.minWidth;\n            }\n            this.configure({ minWidth: minWidth });\n            return this;\n        }\n\n        /**\n         * Set or get the minimum height attribute of a chart. This only has effect when used with the default\n         * {@link BaseMixin.height height} function.\n         * @see {@link BaseMixin.height height}\n         * @param [minHeight=200]\n         */\n        public minHeight(): number;\n        public minHeight(minHeight: number): this;\n        public minHeight(minHeight?) {\n            if (!arguments.length) {\n                return this._conf.minHeight;\n            }\n            this.configure({ minHeight: minHeight });\n            return this;\n        }\n\n        /**\n         * Turn on/off using the SVG\n         * {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox `viewBox` attribute}.\n         * When enabled, `viewBox` will be set on the svg root element instead of `width` and `height`.\n         * Requires that the chart aspect ratio be defined using chart.width(w) and chart.height(h).\n         *\n         * This will maintain the aspect ratio while enabling the chart to resize responsively to the\n         * space given to the chart using CSS. For example, the chart can use `width: 100%; height:\n         * 100%` or absolute positioning to resize to its parent div.\n         *\n         * Since the text will be sized as if the chart is drawn according to the width and height, and\n         * will be resized if the chart is any other size, you need to set the chart width and height so\n         * that the text looks good. In practice, 600x400 seems to work pretty well for most charts.\n         *\n         * You can see examples of this resizing strategy in the [Chart Resizing\n         * Examples](http://dc-js.github.io/dc.js/resizing/); just add `?resize=viewbox` to any of the\n         * one-chart examples to enable `useViewBoxResizing`.\n         * @param [useViewBoxResizing=false]\n         */\n        public useViewBoxResizing(): boolean;\n        public useViewBoxResizing(useViewBoxResizing: boolean): this;\n        public useViewBoxResizing(useViewBoxResizing?) {\n            if (!arguments.length) {\n                return this._conf.useViewBoxResizing;\n            }\n            this.configure({ useViewBoxResizing: useViewBoxResizing });\n            return this;\n        }\n\n        /**\n         * **mandatory**\n         *\n         * Set or get the dimension attribute of a chart. In `dc`, a dimension can be any valid\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter dimension}\n         *\n         * If a value is given, then it will be used as the new dimension. If no value is specified then\n         * the current dimension will be returned.\n         * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension crossfilter.dimension}\n         * @example\n         * var index = crossfilter([]);\n         * var dimension = index.dimension(pluck('key'));\n         * chart.dimension(dimension);\n         */\n        public dimension(): MinimalCFDimension;\n        public dimension(dimension: MinimalCFDimension): this;\n        public dimension(dimension?) {\n            if (!arguments.length) {\n                return this.dataProvider().conf().dimension;\n            }\n            this.dataProvider().configure({ dimension: dimension });\n            this.expireCache();\n            return this;\n        }\n\n        /**\n         * **mandatory**\n         *\n         * Set or get the group attribute of a chart. In `dc` a group is a\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter group}.\n         * Usually the group should be created from the particular dimension associated with the same chart. If a value is\n         * given, then it will be used as the new group.\n         *\n         * If no value specified then the current group will be returned.\n         * If `name` is specified then it will be used to generate legend label.\n         * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n         * @example\n         * var index = crossfilter([]);\n         * var dimension = index.dimension(pluck('key'));\n         * chart.dimension(dimension);\n         * chart.group(dimension.group().reduceSum());\n         */\n        public group(): MinimalCFGroup;\n        public group(group: MinimalCFGroup, name?: string, accessor?: BaseAccessor<any>): this;\n        public group(group?, name?, accessor?) {\n            if (!arguments.length) {\n                return this._dataProvider.conf().group;\n            }\n            this._dataProvider.configure({ group, groupName: name });\n            this.expireCache();\n            return this;\n        }\n\n        /**\n         * Get or set an accessor to order ordinal dimensions.  The chart uses\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort Array.sort}\n         * to sort elements; this accessor returns the value to order on.\n         * @example\n         * // Default ordering accessor\n         * _chart.ordering(pluck('key'));\n         */\n        public ordering(): BaseAccessor<any>;\n        public ordering(orderFunction: BaseAccessor<any>): this;\n        public ordering(orderFunction?) {\n            if (!arguments.length) {\n                return this._dataProvider.conf().ordering;\n            }\n            this._dataProvider.configure({ ordering: orderFunction });\n            this.expireCache();\n            return this;\n        }\n\n        /**\n         * Set or get the filter printer function. The filter printer function is used to generate human\n         * friendly text for filter value(s) associated with the chart instance. The text will get shown\n         * in the `.filter element; see {@link BaseMixin.turnOnControls turnOnControls}.\n         *\n         * By default dc charts use a default filter printer {@link printers.filters printers.filters}\n         * that provides simple printing support for both single value and ranged filters.\n         * @example\n         * // for a chart with an ordinal brush, print the filters in upper case\n         * chart.filterPrinter(function(filters) {\n         *   return filters.map(function(f) { return f.toUpperCase(); }).join(', ');\n         * });\n         * // for a chart with a range brush, print the filter as start and extent\n         * chart.filterPrinter(function(filters) {\n         *   return 'start ' + printSingleValue(filters[0][0]) +\n         *     ' extent ' + printSingleValue(filters[0][1] - filters[0][0]);\n         * });\n         */\n        public filterPrinter();\n        public filterPrinter(filterPrinterFunction): this;\n        public filterPrinter(filterPrinterFunction?) {\n            if (!arguments.length) {\n                return this._conf.filterPrinter;\n            }\n            this.configure({ filterPrinter: filterPrinterFunction });\n            return this;\n        }\n\n        /**\n         * Set or get the animation transition duration (in milliseconds) for this chart instance.\n         */\n        public transitionDuration(): number;\n        public transitionDuration(duration: number): this;\n        public transitionDuration(duration?) {\n            if (!arguments.length) {\n                return this._conf.transitionDuration;\n            }\n            this.configure({ transitionDuration: duration });\n            return this;\n        }\n\n        /**\n         * Set or get the animation transition delay (in milliseconds) for this chart instance.\n         */\n        public transitionDelay(): number;\n        public transitionDelay(delay: number): this;\n        public transitionDelay(delay?) {\n            if (!arguments.length) {\n                return this._conf.transitionDelay;\n            }\n            this.configure({ transitionDelay: delay });\n            return this;\n        }\n\n        /**\n         * If set, use the `visibility` attribute instead of the `display` attribute for showing/hiding\n         * chart reset and filter controls, for less disruption to the layout.\n         */\n        public controlsUseVisibility(): boolean;\n        public controlsUseVisibility(controlsUseVisibility: boolean): this;\n        public controlsUseVisibility(controlsUseVisibility?) {\n            if (!arguments.length) {\n                return this._conf.controlsUseVisibility;\n            }\n            this.configure({ controlsUseVisibility: controlsUseVisibility });\n            return this;\n        }\n\n        /**\n         * Gets/sets the commit handler. If the chart has a commit handler, the handler will be called when\n         * the chart's filters have changed, in order to send the filter data asynchronously to a server.\n         *\n         * Unlike other functions in dc.js, the commit handler is asynchronous. It takes two arguments:\n         * a flag indicating whether this is a render (true) or a redraw (false), and a callback to be\n         * triggered once the commit is done. The callback has the standard node.js continuation signature\n         * with error first and result second.\n         */\n        public commitHandler(): () => void;\n        public commitHandler(commitHandler: () => void): this;\n        public commitHandler(commitHandler?) {\n            if (!arguments.length) {\n                return this._conf.commitHandler;\n            }\n            this.configure({ commitHandler: commitHandler });\n            return this;\n        }\n\n        /**\n         * Set or get the label function. The chart class will use this function to render labels for each\n         * child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every\n         * chart supports the label function, for example line chart does not use this function\n         * at all. By default, enables labels; pass false for the second parameter if this is not desired.\n         * @example\n         * // default label function just return the key\n         * chart.label(function(d) { return d.key; });\n         * // label function has access to the standard d3 data binding and can get quite complicated\n         * chart.label(function(d) { return d.data.key + '(' + Math.floor(d.data.value / all.value() * 100) + '%)'; });\n         * @param [enableLabels=true]\n         */\n        public label(): LabelAccessor;\n        public label(labelFunction: LabelAccessor, enableLabels?: boolean): this;\n        public label(labelFunction?, enableLabels?) {\n            if (!arguments.length) {\n                return this._conf.label;\n            }\n            this.configure({ label: labelFunction });\n            if (enableLabels === undefined || enableLabels) {\n                this.configure({ renderLabel: true });\n            }\n            return this;\n        }\n\n        /**\n         * Turn on/off label rendering\n         * @param [renderLabel=false]\n         */\n        public renderLabel(): boolean;\n        public renderLabel(renderLabel: boolean): this;\n        public renderLabel(renderLabel?) {\n            if (!arguments.length) {\n                return this._conf.renderLabel;\n            }\n            this.configure({ renderLabel: renderLabel });\n            return this;\n        }\n\n        /**\n         * Turn on/off title rendering, or return the state of the render title flag if no arguments are\n         * given.\n         * @param [renderTitle=true]\n         */\n        public renderTitle(): boolean;\n        public renderTitle(renderTitle: boolean): this;\n        public renderTitle(renderTitle?) {\n            if (!arguments.length) {\n                return this._conf.renderTitle;\n            }\n            this.configure({ renderTitle: renderTitle });\n            return this;\n        }\n\n        /**\n         * Set or get the title function. The chart class will use this function to render the SVGElement title\n         * (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice\n         * in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;\n         * however in grid coordinate charts you need to turn off the brush in order to see titles, because\n         * otherwise the brush layer will block tooltip triggering.\n         * @example\n         * // default title function shows \"key: value\"\n         * chart.title(function(d) { return d.key + ': ' + d.value; });\n         * // title function has access to the standard d3 data binding and can get quite complicated\n         * chart.title(function(p) {\n         *    return p.key.getFullYear()\n         *        + '\\n'\n         *        + 'Index Gain: ' + numberFormat(p.value.absGain) + '\\n'\n         *        + 'Index Gain in Percentage: ' + numberFormat(p.value.percentageGain) + '%\\n'\n         *        + 'Fluctuation / Index Ratio: ' + numberFormat(p.value.fluctuationPercentage) + '%';\n         * });\n         */\n        public title(): TitleAccessor;\n        public title(titleFunction: TitleAccessor): this;\n        public title(titleFunction?) {\n            if (!arguments.length) {\n                return this._conf.title;\n            }\n            this.configure({\n                title: titleFunction,\n            });\n            return this;\n        }\n\n        /**\n         * Set or get the key accessor function. The key accessor function is used to retrieve the key\n         * value from the crossfilter group. Key values are used differently in different charts, for\n         * example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.\n         * @example\n         * // default key accessor\n         * chart.keyAccessor(function(d) { return d.key; });\n         * // custom key accessor for a multi-value crossfilter reduction\n         * chart.keyAccessor(function(p) { return p.value.absGain; });\n         */\n        public keyAccessor(): KeyAccessor;\n        public keyAccessor(keyAccessor: KeyAccessor): this;\n        public keyAccessor(keyAccessor?) {\n            if (!arguments.length) {\n                return this._conf.keyAccessor;\n            }\n            this.configure({ keyAccessor: keyAccessor });\n            return this;\n        }\n\n        /**\n         * Set or get the value accessor function. The value accessor function is used to retrieve the\n         * value from the crossfilter group. Group values are used differently in different charts, for\n         * example values correspond to slice sizes in a pie chart and y axis positions in a grid\n         * coordinate chart.\n         * @example\n         * // default value accessor\n         * chart.valueAccessor(function(d) { return d.value; });\n         * // custom value accessor for a multi-value crossfilter reduction\n         * chart.valueAccessor(function(p) { return p.value.percentageGain; });\n         */\n        public valueAccessor(): ValueAccessor;\n        public valueAccessor(valueAccessor: ValueAccessor): this;\n        public valueAccessor(valueAccessor?) {\n            if (!arguments.length) {\n                return this.dataProvider().conf().valueAccessor;\n            }\n            this.dataProvider().configure({ valueAccessor: valueAccessor });\n            return this;\n        }\n    };\n}\n\nexport const BaseMixin = BaseMixinExt(BaseMixinNeo);\n\nexport const baseMixin = (parent, chartGroup) => new BaseMixin(parent, chartGroup);\n","import { descending, max, min } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\n\nimport { transition } from '../core/core';\nimport { events } from '../core/events';\nimport { Constructor, MinimalRadiusScale, SVGGElementSelection } from '../core/types';\nimport { IBubbleMixinConf } from './i-bubble-mixin-conf';\nimport { adaptHandler } from '../core/d3compat';\nimport { IBaseMixinConf } from './i-base-mixin-conf';\n\ninterface MinimalBase {\n    configure(conf: IBaseMixinConf);\n    data();\n    redrawGroup();\n    filter(filter: any);\n    selectAll(arg0: string);\n    hasFilter(f?);\n    /**\n     * @hidden\n     */\n    highlightSelected(e): void;\n    /**\n     * @hidden\n     */\n    fadeDeselected(e): void;\n    /**\n     * @hidden\n     */\n    resetHighlight(e): void;\n}\n\n/**\n * This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.\n */\n// tslint:disable-next-line:variable-name\nexport function BubbleMixin<TBase extends Constructor<MinimalBase>>(Base: TBase) {\n    // @ts-ignore\n    return class extends Base {\n        /**\n         * @hidden\n         */\n        public _conf: IBubbleMixinConf;\n\n        /**\n         * @hidden\n         */\n        public BUBBLE_NODE_CLASS: string;\n        /**\n         * @hidden\n         */\n        public BUBBLE_CLASS: string;\n        /**\n         * @hidden\n         */\n        public MIN_RADIUS: number;\n        /**\n         * @hidden\n         */\n        public _r: MinimalRadiusScale;\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.configure({\n                renderLabel: true,\n                maxBubbleRelativeSize: 0.3,\n                minRadiusWithLabel: 10,\n                sortBubbleSize: false,\n                elasticRadius: false,\n                excludeElasticZero: true,\n                radiusValueAccessor: d => d.r,\n            });\n\n            // These cane be used by derived classes as well, so member status\n            this.BUBBLE_NODE_CLASS = 'node';\n            this.BUBBLE_CLASS = 'bubble';\n            this.MIN_RADIUS = 10;\n\n            this._r = scaleLinear().domain([0, 100]);\n        }\n\n        /**\n         * @see {@link BaseMixin.configure}\n         */\n        public configure(conf: IBubbleMixinConf): this {\n            super.configure(conf);\n            return this;\n        }\n\n        /**\n         * @see {@link BaseMixin.conf}\n         */\n        public conf(): IBubbleMixinConf {\n            return this._conf;\n        }\n\n        /**\n         * @category Ninja\n         */\n        public data() {\n            const data = super.data();\n            if (this._conf.sortBubbleSize) {\n                // sort descending so smaller bubbles are on top\n                const radiusAccessor = this._conf.radiusValueAccessor;\n                data.sort((a, b) => descending(radiusAccessor(a), radiusAccessor(b)));\n            }\n            return data;\n        }\n\n        /**\n         * Get or set the bubble radius scale. By default the bubble chart uses\n         * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleLinear | d3.scaleLinear().domain([0, 100])}\n         * as its radius scale.\n         * @see {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale}\n         */\n        public r(): MinimalRadiusScale;\n        public r(bubbleRadiusScale: MinimalRadiusScale): this;\n        public r(bubbleRadiusScale?) {\n            if (!arguments.length) {\n                return this._r;\n            }\n            this._r = bubbleRadiusScale;\n            return this;\n        }\n\n        /**\n         * @hidden\n         */\n        public calculateRadiusDomain(): void {\n            if (this._conf.elasticRadius) {\n                this.r().domain([this.rMin(), this.rMax()]);\n            }\n        }\n\n        /**\n         * @hidden\n         */\n        public rMin(): number {\n            let values: number[] = this.data().map(this._conf.radiusValueAccessor);\n            if (this._conf.excludeElasticZero) {\n                values = values.filter(value => value > 0);\n            }\n            return min(values);\n        }\n\n        /**\n         * @hidden\n         */\n        public rMax(): number {\n            return max(this.data(), e => this._conf.radiusValueAccessor(e));\n        }\n\n        /**\n         * @hidden\n         */\n        public bubbleR(d): number {\n            const value = this._conf.radiusValueAccessor(d);\n            let r = this.r()(value);\n            if (isNaN(r) || value <= 0) {\n                r = 0;\n            }\n            return r;\n        }\n\n        /**\n         * @hidden\n         */\n        public _labelFunction(d): string | number {\n            return this._conf.label(d);\n        }\n\n        /**\n         * @hidden\n         */\n        public _shouldLabel(d): boolean {\n            return this.bubbleR(d) > this._conf.minRadiusWithLabel;\n        }\n\n        /**\n         * @hidden\n         */\n        public _labelOpacity(d): number {\n            return this._shouldLabel(d) ? 1 : 0;\n        }\n\n        /**\n         * @hidden\n         */\n        public _labelPointerEvent(d): string {\n            return this._shouldLabel(d) ? 'all' : 'none';\n        }\n\n        /**\n         * @hidden\n         */\n        public _doRenderLabel(bubbleGEnter): void {\n            if (this._conf.renderLabel) {\n                let label = bubbleGEnter.select('text');\n\n                if (label.empty()) {\n                    label = bubbleGEnter\n                        .append('text')\n                        .attr('text-anchor', 'middle')\n                        .attr('dy', '.3em')\n                        .on(\n                            'click',\n                            adaptHandler(d => this.onClick(d))\n                        );\n                }\n\n                label\n                    .attr('opacity', 0)\n                    .attr('pointer-events', d => this._labelPointerEvent(d))\n                    .text(d => this._labelFunction(d));\n                transition(\n                    label,\n                    this._conf.transitionDuration,\n                    this._conf.transitionDelay\n                ).attr('opacity', d => this._labelOpacity(d));\n            }\n        }\n\n        /**\n         * @hidden\n         */\n        public doUpdateLabels(bubbleGEnter): void {\n            if (this._conf.renderLabel) {\n                const labels = bubbleGEnter\n                    .select('text')\n                    .attr('pointer-events', d => this._labelPointerEvent(d))\n                    .text(d => this._labelFunction(d));\n                transition(\n                    labels,\n                    this._conf.transitionDuration,\n                    this._conf.transitionDelay\n                ).attr('opacity', d => this._labelOpacity(d));\n            }\n        }\n\n        /**\n         * @hidden\n         */\n        public _titleFunction(d): string | number {\n            return this._conf.title(d);\n        }\n\n        /**\n         * @hidden\n         */\n        public _doRenderTitles(g): void {\n            if (this._conf.renderTitle) {\n                const title = g.select('title');\n\n                if (title.empty()) {\n                    g.append('title').text(d => this._titleFunction(d));\n                }\n            }\n        }\n\n        /**\n         * @hidden\n         */\n        public doUpdateTitles(g): void {\n            if (this._conf.renderTitle) {\n                g.select('title').text(d => this._titleFunction(d));\n            }\n        }\n\n        /**\n         * Get or set the minimum radius. This will be used to initialize the radius scale's range.\n         */\n        public minRadius(): number;\n        public minRadius(radius: number);\n        public minRadius(radius?) {\n            if (!arguments.length) {\n                return this.MIN_RADIUS;\n            }\n            this.MIN_RADIUS = radius;\n            return this;\n        }\n\n        /**\n         * @hidden\n         */\n        public fadeDeselectedArea(selection: SVGGElementSelection): void {\n            if (this.hasFilter()) {\n                const chart = this;\n                this.selectAll(`g.${chart.BUBBLE_NODE_CLASS}`).each(function (d) {\n                    if (chart.isSelectedNode(d)) {\n                        chart.highlightSelected(this);\n                    } else {\n                        chart.fadeDeselected(this);\n                    }\n                });\n            } else {\n                const chart = this;\n                this.selectAll(`g.${chart.BUBBLE_NODE_CLASS}`).each(function () {\n                    chart.resetHighlight(this);\n                });\n            }\n        }\n\n        /**\n         * @hidden\n         */\n        public isSelectedNode(d: any) {\n            return this.hasFilter(d.key);\n        }\n\n        /**\n         * @category Ninja\n         * @see {@link BaseMixin.onClick}\n         */\n        public onClick(d: any) {\n            const filter = d.key;\n            events.trigger(() => {\n                this.filter(filter);\n                this.redrawGroup();\n            });\n        }\n    };\n}\n","import { Constructor, RValueAccessor } from '../../core/types';\nimport { BaseMixinExt } from './base-mixin';\nimport { BubbleMixin as BubbleMixinNeo } from '../../base/bubble-mixin';\nimport { BaseMixin as BaseMixinNeo } from '../../base/base-mixin';\n\nclass Intermediate extends BaseMixinExt(BubbleMixinNeo(BaseMixinNeo)) {}\n\nexport function BubbleMixinExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        /**\n         * Turn on or off the bubble sorting feature, or return the value of the flag. If enabled,\n         * bubbles will be sorted by their radius, with smaller bubbles in front.\n         * @param [sortBubbleSize=false]\n         */\n        public sortBubbleSize(): boolean;\n        public sortBubbleSize(sortBubbleSize: boolean);\n        public sortBubbleSize(sortBubbleSize?) {\n            if (!arguments.length) {\n                return this._conf.sortBubbleSize;\n            }\n            this.configure({ sortBubbleSize: sortBubbleSize });\n            return this;\n        }\n\n        /**\n         * Get or set the radius value accessor function. If set, the radius value accessor function will\n         * be used to retrieve a data value for each bubble. The data retrieved then will be mapped using\n         * the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble\n         * size.\n         */\n        public radiusValueAccessor(): RValueAccessor;\n        public radiusValueAccessor(radiusValueAccessor: RValueAccessor);\n        public radiusValueAccessor(radiusValueAccessor?) {\n            if (!arguments.length) {\n                return this._conf.radiusValueAccessor;\n            }\n            this.configure({ radiusValueAccessor: radiusValueAccessor });\n            return this;\n        }\n\n        /**\n         * Get or set the minimum radius for label rendering. If a bubble's radius is less than this value\n         * then no label will be rendered.\n         * @param [radius=10]\n         */\n        public minRadiusWithLabel(): number;\n        public minRadiusWithLabel(radius: number);\n        public minRadiusWithLabel(radius?) {\n            if (!arguments.length) {\n                return this._conf.minRadiusWithLabel;\n            }\n            this.configure({ minRadiusWithLabel: radius });\n            return this;\n        }\n\n        /**\n         * Get or set the maximum relative size of a bubble to the length of x axis. This value is useful\n         * when the difference in radius between bubbles is too great.\n         * @param [relativeSize=0.3]\n         */\n        public maxBubbleRelativeSize(): number;\n        public maxBubbleRelativeSize(relativeSize: number);\n        public maxBubbleRelativeSize(relativeSize?) {\n            if (!arguments.length) {\n                return this._conf.maxBubbleRelativeSize;\n            }\n            this.configure({ maxBubbleRelativeSize: relativeSize });\n            return this;\n        }\n\n        /**\n         * Turn on or off the elastic bubble radius feature, or return the value of the flag. If this\n         * feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.\n         * @param [elasticRadius=false]\n         */\n        public elasticRadius(): boolean;\n        public elasticRadius(elasticRadius: boolean);\n        public elasticRadius(elasticRadius?) {\n            if (!arguments.length) {\n                return this._conf.elasticRadius;\n            }\n            this.configure({ elasticRadius: elasticRadius });\n            return this;\n        }\n\n        /**\n         * Should the chart exclude zero when calculating elastic bubble radius?\n         * @param [excludeZero=true]\n         */\n        public excludeElasticZero(): boolean;\n        public excludeElasticZero(excludeZero: boolean);\n        public excludeElasticZero(excludeZero?) {\n            if (!arguments.length) {\n                return this._conf.excludeElasticZero;\n            }\n            this.configure({ excludeElasticZero: excludeZero });\n            return this;\n        }\n    };\n}\n","import { CFSimpleAdapter, ICFSimpleAdapterConf } from './c-f-simple-adapter';\nimport { sum } from 'd3-array';\nimport { sortBy } from '../core/utils';\n\nexport interface ICFDataCapHelperConf extends ICFSimpleAdapterConf {\n    readonly othersGrouper?: (topItems, restItems) => any;\n    readonly othersLabel?: string;\n    readonly takeFront?: boolean;\n    readonly cap?: number;\n}\n\nexport class CFDataCapHelper extends CFSimpleAdapter {\n    protected _conf: ICFDataCapHelperConf;\n    private _restKeys: string[];\n\n    constructor(conf: ICFDataCapHelperConf = {}) {\n        const defaultOthersGrouper = (topItems, restItems) => {\n            // @ts-ignore\n            const restItemsSum = sum(restItems, d => d._value);\n\n            if (restItemsSum > 0) {\n                return topItems.concat([\n                    {\n                        others: true,\n                        key: this._conf.othersLabel,\n                        _value: restItemsSum,\n                    },\n                ]);\n            }\n            return topItems;\n        };\n\n        super({\n            cap: Infinity,\n            takeFront: true,\n            othersLabel: 'Others',\n            othersGrouper: defaultOthersGrouper,\n            ordering: kv => -kv.value, // emulate old group.top(N) ordering\n            ...conf,\n        });\n    }\n\n    public configure(conf: ICFDataCapHelperConf): this {\n        return super.configure(conf);\n    }\n\n    public conf(): ICFDataCapHelperConf {\n        return super.conf();\n    }\n\n    public data() {\n        let items = sortBy(super.data(), this._conf.ordering);\n\n        if (this._conf.cap === Infinity) {\n            return items;\n        }\n\n        // return N \"top\" groups, where N is the cap, sorted by baseMixin.ordering\n        // whether top means front or back depends on takeFront\n        let rest;\n\n        if (this._conf.cap) {\n            if (this._conf.takeFront) {\n                rest = items.slice(this._conf.cap);\n                items = items.slice(0, this._conf.cap);\n            } else {\n                const start = Math.max(0, items.length - this._conf.cap);\n                rest = items.slice(0, start);\n                items = items.slice(start);\n            }\n        }\n\n        if (this._conf.othersGrouper) {\n            this._restKeys = rest.map(d => d.key);\n            return this._conf.othersGrouper(items, rest);\n        }\n\n        return items;\n    }\n\n    public filter();\n    public filter(filter): this;\n    public filter(filter?) {\n        if (!arguments.length) {\n            return super.filter();\n        }\n\n        if (filter === this._conf.othersLabel) {\n            // We have an interesting situation here. Cross filter expects lists of keys to filtered, while the chart needs\n            // to see 'Others' also as part of the filters in order to fade that slice\n            // A hack is to include all underlying keys as well as 'Others' to the filters.\n            const filters = [...this._restKeys, this._conf.othersLabel];\n            return super.filter([filters]);\n        }\n\n        return super.filter(filter);\n    }\n}\n","import { Constructor } from '../../core/types';\nimport { BaseMixinExt } from './base-mixin';\nimport { BaseMixin as BaseMixinNeo } from '../../base/base-mixin';\nimport { CFDataCapHelper } from '../../data/c-f-data-cap-helper';\n\nclass Intermediate extends BaseMixinExt(BaseMixinNeo) {}\n\nexport function CapMixinExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.dataProvider(new CFDataCapHelper());\n        }\n\n        /**\n         * Get or set the count of elements to that will be included in the cap. If there is an\n         * {@link CapMixin.othersGrouper othersGrouper}, any further elements will be combined in an\n         * extra element with its name determined by {@link CapMixin.othersLabel othersLabel}.\n         *\n         * As of dc.js 2.1 and onward, the capped charts use\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_all group.all()}\n         * and {@link BaseMixin.ordering BaseMixin.ordering()} to determine the order of\n         * elements. Then `cap` and {@link CapMixin.takeFront takeFront} determine how many elements\n         * to keep, from which end of the resulting array.\n         *\n         * **Migration note:** Up through dc.js 2.0.*, capping used\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_top group.top(N)},\n         * which selects the largest items according to\n         * {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group_order group.order()}.\n         * The chart then sorted the items according to {@link BaseMixin.ordering baseMixin.ordering()}.\n         * So the two values essentially had to agree, but if the `group.order()` was incorrect (it's\n         * easy to forget about), the wrong rows or slices would be displayed, in the correct order.\n         *\n         * If your chart previously relied on `group.order()`, use `chart.ordering()` instead. As of\n         * 2.1.5, the ordering defaults to sorting from greatest to least like `group.top(N)` did.\n         *\n         * If you want to cap by one ordering but sort by another, you can still do this by\n         * specifying your own {@link BaseMixin.data `.data()`} callback. For details, see the example\n         * {@link https://dc-js.github.io/dc.js/examples/cap-and-sort-differently.html Cap and Sort Differently}.\n         * @param [count=Infinity]\n         */\n        public cap();\n        public cap(count): this;\n        public cap(count?) {\n            if (!arguments.length) {\n                // @ts-ignore\n                return this._dataProvider.conf().cap;\n            }\n            // @ts-ignore\n            this._dataProvider.configure({ cap: count });\n            return this;\n        }\n\n        /**\n         * Get or set the direction of capping. If set, the chart takes the first\n         * {@link CapMixin.cap cap} elements from the sorted array of elements; otherwise\n         * it takes the last `cap` elements.\n         * @param [takeFront=true]\n         */\n        public takeFront();\n        public takeFront(takeFront): this;\n        public takeFront(takeFront?) {\n            if (!arguments.length) {\n                // @ts-ignore\n                return this._dataProvider.conf().takeFront;\n            }\n            // @ts-ignore\n            this._dataProvider.configure({ takeFront: takeFront });\n            return this;\n        }\n\n        /**\n         * Get or set the label for *Others* slice when slices cap is specified.\n         * @param [label=\"Others\"]\n         */\n        public othersLabel();\n        public othersLabel(label): this;\n        public othersLabel(label?) {\n            if (!arguments.length) {\n                // @ts-ignore\n                return this._dataProvider.conf().othersLabel;\n            }\n            // @ts-ignore\n            this._dataProvider.configure({ othersLabel: label });\n            return this;\n        }\n\n        /**\n         * Get or set the grouper function that will perform the insertion of data for the *Others* slice\n         * if the slices cap is specified. If set to a falsy value, no others will be added.\n         *\n         * The grouper function takes an array of included (\"top\") items, and an array of the rest of\n         * the items. By default the grouper function computes the sum of the rest.\n         * @example\n         * // Do not show others\n         * chart.othersGrouper(null);\n         * // Default others grouper\n         * chart.othersGrouper(function (topItems, restItems) {\n         *     var restItemsSum = d3.sum(restItems, _chart.valueAccessor()),\n         *         restKeys = restItems.map(_chart.keyAccessor());\n         *     if (restItemsSum > 0) {\n         *         return topItems.concat([{\n         *             others: restKeys,\n         *             key: _chart.othersLabel(),\n         *             value: restItemsSum\n         *         }]);\n         *     }\n         *     return topItems;\n         * });\n         */\n        public othersGrouper();\n        public othersGrouper(grouperFunction): this;\n        public othersGrouper(grouperFunction?) {\n            if (!arguments.length) {\n                // @ts-ignore\n                return this._dataProvider.conf().othersGrouper;\n            }\n            // @ts-ignore\n            this._dataProvider.configure({ othersGrouper: grouperFunction });\n            return this;\n        }\n    };\n}\n\nexport function CapMixin<TBase extends Constructor<BaseMixinNeo>>(Base: TBase) {\n    return class extends CapMixinExt(BaseMixinExt(Base)) {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { BaseAccessor } from '../../core/types';\n\nexport class AbstractColorHelper {\n    /**\n     * Set or the get color accessor function.\n     * Chart will assign this, not assigned in user code.\n     *\n     * @category Intermediate\n     */\n    public colorAccessor: BaseAccessor<string>;\n\n    /**\n     * Charts call this method to lookup actual colors.\n     * Rarely called in user code.\n     *\n     * @category Intermediate\n     */\n    public getColor(d, i?: number): string {\n        return undefined;\n    }\n\n    /**\n     * Composite charts need the same underlying scale, however, with a different {@link colorAccessor}.\n     * It is unlikely that it will be used directly.\n     *\n     * @category Ninja\n     */\n    public share(colorAccessor: BaseAccessor<string>): AbstractColorHelper {\n        return this;\n    }\n}\n","import { AbstractColorHelper } from './abstract-color-helper';\nimport { BaseAccessor } from '../../core/types';\n\nexport class ColorScaleHelper extends AbstractColorHelper {\n    public colorAccessor: BaseAccessor<string>;\n    public colorScale: BaseAccessor<string>;\n\n    constructor(colorScale: BaseAccessor<string>) {\n        super();\n        this.colorScale = colorScale;\n    }\n\n    getColor(d, i?: number): string {\n        return this.colorScale(this.colorAccessor(d, i));\n    }\n\n    /**\n     * It is unlikely that it will be used directly.\n     *\n     * @category Ninja\n     * @see {@link AbstractColorHelper.share}\n     */\n    share(colorAccessor: BaseAccessor<string>): AbstractColorHelper {\n        const clonedScale = new ColorScaleHelper(this.colorScale);\n        clonedScale.colorAccessor = colorAccessor;\n        return clonedScale;\n    }\n}\n","import { ColorScaleHelper } from './color-scale-helper';\nimport { scaleOrdinal } from 'd3-scale';\n\n/**\n * Provide colors based on {@link https://github.com/d3/d3-scale#scaleOrdinal | d3.scaleOrdinal}.\n *\n * This is most used option in `dc` charts and it is the default.\n * It needs a list of colors which can be any CSS accepted color values.\n *\n * Occasionally you would use one of the d3 supplied colors or color scales.\n * Please see {@link https://github.com/d3/d3-scale-chromatic}, any of the schemes may be used as\n * ordinal colors.\n *\n * ```\n * // TODO example\n * ```\n *\n * If a domain is set explicitly it maps the colors in sequence.\n *\n * ```\n * // TODO example\n * ```\n *\n * However, it is not mandatory to set a domain explicitly.\n * If domain is not explicitly provided it keeps getting built as the scale is queried for new domain values.\n *\n * ```\n * // TODO example\n * ```\n */\nexport class OrdinalColors extends ColorScaleHelper {\n    constructor(colors: readonly string[]) {\n        const scale = scaleOrdinal<any, string>().range(colors);\n        super(scale);\n    }\n}\n","import { extent } from 'd3-array';\n\nimport { config } from '../core/config';\nimport { Constructor, MinimalColorScale } from '../core/types';\nimport { IColorMixinConf } from './i-color-mixin-conf';\nimport { AbstractColorHelper } from './colors/abstract-color-helper';\nimport { ColorScaleHelper } from './colors/color-scale-helper';\nimport { OrdinalColors } from './colors/ordinal-colors';\nimport { IBaseMixinConf } from './i-base-mixin-conf';\n\ninterface MinimalBase {\n    configure(conf: IBaseMixinConf);\n    data();\n}\n\n/**\n * The Color Mixin is an abstract chart functional class providing universal coloring support\n * as a mix-in for any concrete chart implementation.\n */\n// tslint:disable-next-line:variable-name\nexport function ColorMixin<TBase extends Constructor<MinimalBase>>(Base: TBase) {\n    return class extends Base {\n        /**\n         * @hidden\n         */\n        public _conf: IColorMixinConf;\n\n        /**\n         * @hidden\n         */\n        public _colorHelper: AbstractColorHelper;\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.configure({\n                colorAccessor: (d, i?) => this._conf.keyAccessor(d),\n            });\n\n            this.colorHelper(new OrdinalColors(config.defaultColors()));\n        }\n\n        public configure(conf: IColorMixinConf): this {\n            super.configure(conf);\n            if ('colorAccessor' in conf && this._colorHelper) {\n                this._colorHelper.colorAccessor = conf.colorAccessor;\n            }\n            return this;\n        }\n\n        public conf(): IColorMixinConf {\n            return this._conf;\n        }\n\n        /**\n         * `dc` charts use on the ColorHelpers for color.\n         * To color chart elements (like Pie slice, a row, a bar, etc.), typically\n         * the underlying data element will be used to determine the color.\n         * In most of the cases output of {@linkcode colorAccessor | colorAccessor(d, i)} will be used to determine the color.\n         *\n         * Different implementations of ColorAccessors provide different functionality:\n         *\n         * * {@link OrdinalColors} - this is the default. It needs fixed list of colors.\n         * * {@link LinearColors} - it provides interpolated colors.\n         * * {@link ColorScaleHelper} - it allows any of {@link https://github.com/d3/d3-scale | d3-scales} to be used.\n         *   {@link OrdinalColors} and {@link LinearColors} are specialization of this.\n         * * {@link ColorCalculator} - It allows skipping {@link colorAccessor} while computing the color.\n         *   It ignores even if a {@link colorAccessor} is provided.\n         *\n         * ```\n         * // TODO example\n         * ```\n         */\n        public colorHelper(): AbstractColorHelper;\n        public colorHelper(colorHelper: AbstractColorHelper): this;\n        public colorHelper(colorHelper?) {\n            if (!arguments.length) {\n                return this._colorHelper;\n            }\n            this._colorHelper = colorHelper;\n            this._colorHelper.colorAccessor = this._conf.colorAccessor;\n            return this;\n        }\n\n        /**\n         * Ordinal colors are used most commonly in `dc` charts.\n         * This call is a shorthand for using an {@linkcode OrdinalColors} instance\n         * as {@linkcode colorHelper}.\n         *\n         * ```\n         * chart.ordinalColors(colorList); // same as chart.colorHelper(new OrdinalColors(colorList));\n         * ```\n         *\n         * @see {@link OrdinalColors}\n         * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales}\n         */\n        public ordinalColors(colorList: string[]): this {\n            this.colorHelper(new OrdinalColors(colorList));\n            return this;\n        }\n\n        /**\n         * Set the domain by determining the min and max values as retrieved by\n         * {@link IColorMixinConf.colorAccessor | .colorAccessor} over the chart's dataset.\n         *\n         * This is useful only for certain type of color scales.\n         * In particular it will not work with {@linkcode ordinalColors}.\n         *\n         * @category Intermediate\n         */\n        public calculateColorDomain(): this {\n            const scale: MinimalColorScale = (this._colorHelper as ColorScaleHelper)\n                .colorScale as MinimalColorScale;\n\n            if (scale && scale.domain) {\n                scale.domain(extent(this.data(), this._conf.colorAccessor));\n            }\n\n            return this;\n        }\n    };\n}\n","import { AbstractColorHelper } from './abstract-color-helper';\nimport { BaseAccessor } from '../../core/types';\n\n/**\n * Overrides the color selection algorithm, replacing it with a simple function.\n *\n * Normally colors will be determined by calling the {@linkcode AbstractColorHelper.colorAccessor | colorAccessor}\n * to get a value, and then passing that value through the {@linkcode ColorScaleHelper.colorScale | colorScale}.\n *\n * But sometimes it is difficult to get a color scale to produce the desired effect. The `colorCalculator`\n * takes the datum and index and returns a color directly.\n */\nexport class ColorCalculator extends AbstractColorHelper {\n    public colorAccessor: BaseAccessor<string>;\n    public getColor: BaseAccessor<string>;\n\n    /**\n     * Create a new instance\n     */\n    constructor(colorCalculator: BaseAccessor<string>) {\n        super();\n        this.getColor = colorCalculator;\n    }\n}\n","import { ColorScaleHelper } from './color-scale-helper';\nimport { scaleLinear } from 'd3-scale';\nimport { interpolateHcl } from 'd3-interpolate';\n\nexport class LinearColors extends ColorScaleHelper {\n    constructor(range: [string, string]) {\n        const scale = scaleLinear<any, string>().range(range).interpolate(interpolateHcl);\n        super(scale);\n    }\n}\n","import { BaseAccessor, ColorAccessor, Constructor, MinimalColorScale } from '../../core/types';\nimport { BaseMixinExt } from './base-mixin';\nimport { ColorMixin as ColorMixinNeo } from '../../base/color-mixin';\nimport { BaseMixin as BaseMixinNeo } from '../../base/base-mixin';\nimport { ColorCalculator } from '../../base/colors/color-calculator';\nimport { ColorScaleHelper } from '../../base/colors/color-scale-helper';\nimport { scaleQuantize } from 'd3-scale';\nimport { OrdinalColors } from '../../base/colors/ordinal-colors';\nimport { LinearColors } from '../../base/colors/linear-colors';\n\nclass Intermediate extends BaseMixinExt(ColorMixinNeo(BaseMixinNeo)) {}\n\nexport function ColorMixinExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        /**\n         * Set or the get color accessor function. This function will be used to map a data point in a\n         * crossfilter group to a color value on the color scale. The default function uses the key\n         * accessor.\n         * @example\n         * // default index based color accessor\n         * .colorAccessor(function (d, i){return i;})\n         * // color accessor for a multi-value crossfilter reduction\n         * .colorAccessor(function (d){return d.value.absGain;})\n         */\n        public colorAccessor(): ColorAccessor;\n        public colorAccessor(colorAccessor: ColorAccessor): this;\n        public colorAccessor(colorAccessor?) {\n            if (!arguments.length) {\n                return this._conf.colorAccessor;\n            }\n            this.configure({ colorAccessor: colorAccessor });\n            return this;\n        }\n\n        /**\n         * Overrides the color selection algorithm, replacing it with a simple function.\n         *\n         * Normally colors will be determined by calling the `colorAccessor` to get a value, and then passing that\n         * value through the `colorScale`.\n         *\n         * But sometimes it is difficult to get a color scale to produce the desired effect. The `colorCalculator`\n         * takes the datum and index and returns a color directly.\n         */\n        public colorCalculator(): ColorAccessor;\n        public colorCalculator(colorCalculator: ColorAccessor): this;\n        public colorCalculator(colorCalculator?) {\n            if (!arguments.length) {\n                return this.colorHelper().getColor;\n            }\n            this.colorHelper(new ColorCalculator(colorCalculator));\n            return this;\n        }\n\n        /**\n         * Retrieve current color scale or set a new color scale. This methods accepts any function that\n         * operates like a d3 scale.\n         * @see {@link https://github.com/d3/d3-scale/blob/master/README.md d3.scale}\n         * @example\n         * // alternate categorical scale\n         * chart.colors(d3.scale.category20b());\n         * // ordinal scale\n         * chart.colors(d3.scaleOrdinal().range(['red','green','blue']));\n         * // convenience method, the same as above\n         * chart.ordinalColors(['red','green','blue']);\n         * // set a linear scale\n         * chart.linearColors([\"#4575b4\", \"#ffffbf\", \"#a50026\"]);\n         */\n        public colors(): BaseAccessor<string>;\n        public colors(colorScale: BaseAccessor<string>): this;\n        public colors(colorScale?) {\n            if (!arguments.length) {\n                return (this.colorHelper() as ColorScaleHelper).colorScale;\n            }\n            let newScale;\n            if (colorScale instanceof Array) {\n                newScale = scaleQuantize<string>().range(colorScale); // deprecated legacy support, note: this fails for ordinal domains\n            } else {\n                newScale = typeof colorScale === 'function' ? colorScale : () => colorScale;\n            }\n\n            this.colorHelper(new ColorScaleHelper(newScale));\n            return this;\n        }\n\n        /**\n         * Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.\n         */\n        public linearColors(r: [string, string]): this {\n            this.colorHelper(new LinearColors(r));\n            return this;\n        }\n\n        /**\n         * Set or get the current domain for the color mapping function. The domain must be supplied as an\n         * array.\n         *\n         * Note: previously this method accepted a callback function. Instead you may use a custom scale\n         * set by {@link ColorMixin.colors .colors}.\n         */\n        public colorDomain(): string[];\n        public colorDomain(domain: string[]): this;\n        public colorDomain(domain?) {\n            const scale = (this.colorHelper() as ColorScaleHelper).colorScale as MinimalColorScale;\n            if (!arguments.length) {\n                return scale.domain();\n            }\n            scale.domain(domain);\n            return this;\n        }\n    };\n}\n\nexport function ColorMixin<TBase extends Constructor<BaseMixinNeo>>(Base: TBase) {\n    return class extends ColorMixinExt(ColorMixinNeo(BaseMixinExt(Base))) {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { BaseMixin } from './base-mixin';\nimport { ChartGroupType, ChartParentType, Margins } from '../core/types';\nimport { IMarginMixinConf } from './i-margin-mixin-conf';\n\n/**\n * Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid\n * Charts.\n */\nexport class MarginMixin extends BaseMixin {\n    /**\n     * @hidden\n     */\n    protected _conf: IMarginMixinConf;\n\n    private _margins: Margins;\n\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this._margins = { top: 10, right: 50, bottom: 30, left: 30 };\n    }\n\n    public configure(conf: IMarginMixinConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IMarginMixinConf {\n        return this._conf;\n    }\n\n    /**\n     * Get or set the margins for a particular coordinate grid chart instance. The margins is stored as\n     * an associative Javascript array.\n     * @example\n     * ```\n     * let leftMargin = chart.margins().left; // 30 by default\n     * chart.margins().left = 50;\n     * leftMargin = chart.margins().left; // now 50\n     * ```\n     */\n    public margins(): Margins;\n    public margins(margins: Margins): this;\n    public margins(margins?) {\n        if (!arguments.length) {\n            return this._margins;\n        }\n        this._margins = margins;\n        return this;\n    }\n\n    /**\n     * Effective width of the chart excluding margins (in pixels).\n     *\n     * @category Intermediate\n     */\n    public effectiveWidth(): number {\n        return this.width() - this.margins().left - this.margins().right;\n    }\n\n    /**\n     * Effective height of the chart excluding margins (in pixels).\n     *\n     * @category Intermediate\n     */\n    public effectiveHeight(): number {\n        return this.height() - this.margins().top - this.margins().bottom;\n    }\n}\n","import { schemeCategory10 } from 'd3-scale-chromatic';\nimport { timeDay } from 'd3-time';\nimport { max, min } from 'd3-array';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { Axis, axisBottom, axisLeft, axisRight } from 'd3-axis';\nimport { zoom, ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3-zoom';\nimport { BrushBehavior, brushX } from 'd3-brush';\nimport { Selection } from 'd3-selection';\n\nimport { ColorMixin } from './color-mixin';\nimport { MarginMixin } from './margin-mixin';\nimport { optionalTransition, transition } from '../core/core';\nimport { UnitsInteger, UnitsOrdinal } from '../core/units';\nimport { constants } from '../core/constants';\nimport { add, appendOrSelect, arraysEqual, subtract } from '../core/utils';\nimport { logger } from '../core/logger';\nimport { events } from '../core/events';\nimport {\n    ChartGroupType,\n    ChartParentType,\n    DCBrushSelection,\n    MinimalXYScale,\n    SVGGElementSelection,\n} from '../core/types';\nimport { ICoordinateGridMixinConf } from './i-coordinate-grid-mixin-conf';\nimport { OrdinalColors } from './colors/ordinal-colors';\nimport { adaptHandler } from '../core/d3compat';\nimport { RangedFilter } from '../core/filters/ranged-filter';\n\nconst GRID_LINE_CLASS = 'grid-line';\nconst HORIZONTAL_CLASS = 'horizontal';\nconst VERTICAL_CLASS = 'vertical';\nconst Y_AXIS_LABEL_CLASS = 'y-axis-label';\nconst X_AXIS_LABEL_CLASS = 'x-axis-label';\nconst CUSTOM_BRUSH_HANDLE_CLASS = 'custom-brush-handle';\nconst DEFAULT_AXIS_LABEL_PADDING = 12;\n\n/**\n * Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based\n * concrete chart types, e.g. bar chart, line chart, and bubble chart.\n */\nexport class CoordinateGridMixin extends ColorMixin(MarginMixin) {\n    /**\n     * @hidden\n     */\n    public _conf: ICoordinateGridMixinConf;\n\n    private _parent: Selection<SVGElement, any, any, any>;\n    private _g: SVGGElementSelection;\n    private _chartBodyG: SVGGElementSelection;\n    private _x: MinimalXYScale;\n    private _origX: MinimalXYScale;\n    private _xOriginalDomain: [number, number];\n    private _xAxis: Axis<any>; // TODO: can we do better\n    private _xAxisLabel: string;\n    private _xAxisLabelPadding: number;\n    private _lastXDomain: [number, number];\n    private _y: MinimalXYScale;\n    private _yAxis: Axis<any>; // TODO: can we do better\n    private _yAxisLabel: string;\n    private _yAxisLabelPadding: number;\n    private _brush: BrushBehavior<unknown>;\n    /**\n     * @hidden\n     */\n    protected _gBrush: SVGGElementSelection;\n    /**\n     * @hidden\n     */\n    protected _ignoreBrushEvents: boolean; // needed by ScatterPlot\n    private _resizing: boolean;\n    private _unitCount: number;\n    private _zoom: ZoomBehavior<Element, unknown>;\n    private _nullZoom: ZoomBehavior<Element, unknown>;\n    private _hasBeenMouseZoomable: boolean;\n    private _ignoreZoomEvents: boolean;\n    private _fOuterRangeBandPadding: number;\n    private _fRangeBandPadding: number;\n\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.colorHelper(new OrdinalColors(schemeCategory10));\n        this._mandatoryAttributes().push('x');\n        this._parent = undefined;\n        this._g = undefined;\n        this._chartBodyG = undefined;\n\n        this.configure({\n            xUnits: UnitsInteger,\n            xAxisPadding: 0,\n            xAxisPaddingUnit: timeDay,\n            elasticX: false,\n            yAxisPadding: 0,\n            elasticY: false,\n            round: undefined,\n            renderHorizontalGridLines: false,\n            renderVerticalGridLines: false,\n            zoomScale: [1, Infinity],\n            zoomOutRestrict: true,\n            mouseZoomable: false,\n            autoFocus: false,\n            clipPadding: 0,\n            useRightYAxis: false,\n            brushOn: true,\n            parentBrushOn: false,\n        });\n\n        this._x = undefined;\n        this._origX = undefined; // Will hold original scale in case of zoom\n        this._xOriginalDomain = undefined;\n        this._xAxis = axisBottom(undefined);\n        // TODO: xAxisLabel and xAxisLabelPadding are linked to the same function, in addition the call updates margins\n        // TODO: recheck in next iteration\n        this._xAxisLabel = undefined;\n        this._xAxisLabelPadding = 0;\n\n        this._lastXDomain = undefined;\n\n        this._y = undefined;\n        this._yAxis = null;\n\n        // TODO: see remarks for xAxisLabel and xAxisLabelPadding\n        this._yAxisLabel = undefined;\n        this._yAxisLabelPadding = 0;\n\n        this._brush = brushX();\n\n        this._gBrush = undefined;\n        this._ignoreBrushEvents = false; // ignore when carrying out programmatic brush operations\n\n        this._resizing = false;\n        this._unitCount = undefined;\n\n        this._zoom = zoom().on(\n            'zoom',\n            adaptHandler((d, evt) => this._onZoom(evt))\n        );\n        this._nullZoom = zoom().on('zoom', null);\n        this._hasBeenMouseZoomable = false;\n        this._ignoreZoomEvents = false; // ignore when carrying out programmatic zoom operations\n\n        this.on('filtered._coordinate', () => {\n            this._onFilterChange();\n        });\n\n        // TODO: These two parameters have been exposed differently in BarChart and BoxPlot. In addition _gap in BoxPlot\n        // TODO: also interact with these. Need to change consistently\n        this._fOuterRangeBandPadding = 0.5;\n        this._fRangeBandPadding = 0;\n    }\n\n    public configure(conf: ICoordinateGridMixinConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): ICoordinateGridMixinConf {\n        return this._conf;\n    }\n\n    /**\n     * When changing the domain of the x or y scale, it is necessary to tell the chart to recalculate\n     * and redraw the axes. (`.rescale()` is called automatically when the x or y scale is replaced\n     * with {@link CoordinateGridMixin.x | .x()} or {@link CoordinateGridMixin.y | .y()}, and has\n     * no effect on elastic scales.)\n     *\n     * @category Intermediate\n     */\n    public rescale(): this {\n        this._unitCount = undefined;\n        this._resizing = true;\n        return this;\n    }\n\n    /**\n     * Get or set if the chart is currently resizing.\n     *\n     * @category Intermediate\n     */\n    public resizing(): boolean;\n    public resizing(resizing: boolean): this;\n    public resizing(resizing?) {\n        if (!arguments.length) {\n            return this._resizing;\n        }\n        this._resizing = resizing;\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _generateG(parent?: Selection<SVGElement, any, any, any>): SVGGElementSelection {\n        if (parent === undefined) {\n            this._parent = this.svg();\n        } else {\n            this._parent = parent;\n        }\n\n        const href = window.location.href.split('#')[0];\n\n        this._g = this._parent.append('g');\n\n        this._chartBodyG = this._g\n            .append('g')\n            .attr('class', 'chart-body')\n            .attr('transform', `translate(${this.margins().left}, ${this.margins().top})`)\n            .attr('clip-path', `url(${href}#${this._getClipPathId()})`);\n\n        return this._g;\n    }\n\n    /**\n     * Get or set the root g element. This method is usually used to retrieve the g element in order to\n     * overlay custom svg drawing programatically. **Caution**: The root g element is usually generated\n     * by dc.js internals, and resetting it might produce unpredictable result.\n     *\n     * @category Ninja\n     */\n    public g(): SVGGElementSelection;\n    public g(gElement: SVGGElementSelection): this;\n    public g(gElement?) {\n        if (!arguments.length) {\n            return this._g;\n        }\n        this._g = gElement;\n        return this;\n    }\n\n    /**\n     * Retrieve the svg group for the chart body.\n     *\n     * @category Ninja\n     */\n    public chartBodyG(); // TODO: figure out correct type\n    public chartBodyG(chartBodyG): this;\n    public chartBodyG(chartBodyG?) {\n        if (!arguments.length) {\n            return this._chartBodyG;\n        }\n        this._chartBodyG = chartBodyG;\n        return this;\n    }\n\n    /**\n     * **mandatory**\n     *\n     * Get or set the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale} or\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#ordinal-scales | ordinal scale}\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale}\n     * @example\n     * ```\n     * // set x to a linear scale\n     * chart.x(d3.scaleLinear().domain([-2500, 2500]))\n     * // set x to a time scale to generate histogram\n     * chart.x(d3.scaleTime().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))\n     * ```\n     */\n    public x(): MinimalXYScale;\n    public x(xScale: MinimalXYScale): this;\n    public x(xScale?) {\n        if (!arguments.length) {\n            return this._x;\n        }\n        this._x = xScale;\n        this._xOriginalDomain = this._x.domain();\n        this.rescale();\n        return this;\n    }\n\n    /**\n     * TODO the return value needs correction\n     *\n     * @hidden\n     */\n    public xOriginalDomain(): [number, number] {\n        return this._xOriginalDomain;\n    }\n\n    /**\n     * Set or get the x axis used by a particular coordinate grid chart instance. This function is most\n     * useful when x axis customization is required. The x axis in dc.js is an instance of a\n     * {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom | d3 bottom axis object};\n     * therefore it supports any valid d3 axisBottom manipulation.\n     *\n     * **Caution**: The x axis is usually generated internally by dc; resetting it may cause\n     * unexpected results. Note also that when used as a getter, this function is not chainable:\n     * it returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.xAxis()` will fail}.\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisBottom | d3.axisBottom}\n     * @example\n     * ```\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function(v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * ```\n     *\n     * @category Intermediate\n     */\n    public xAxis(): Axis<any>;\n    public xAxis(xAxis: Axis<any>): this;\n    public xAxis(xAxis?) {\n        if (!arguments.length) {\n            return this._xAxis;\n        }\n        this._xAxis = xAxis;\n        return this;\n    }\n\n    /**\n     * Returns the number of units displayed on the x axis. If the x axis is ordinal (`xUnits` is\n     * `UnitsOrdinal`), this is the number of items in the domain of the x scale. Otherwise, the\n     * x unit count is calculated using the {@link ICoordinateGridMixinConf.xUnits | xUnits} function.\n     *\n     * @category Intermediate\n     */\n    public xUnitCount() {\n        if (this._unitCount === undefined) {\n            if (this.isOrdinal()) {\n                // In this case it number of items in domain\n                this._unitCount = this.x().domain().length;\n            } else {\n                const [first, second] = this.x().domain();\n                const unitCount = this._conf.xUnits(first, second);\n\n                // Sometimes xUnits() may return an array while sometimes directly the count\n                this._unitCount = unitCount instanceof Array ? unitCount.length : unitCount;\n            }\n        }\n\n        return this._unitCount;\n    }\n\n    /**\n     * Returns true if the chart is using ordinal xUnits ({@link UnitsOrdinal}, or false\n     * otherwise. Most charts behave differently with ordinal data and use the result of this method to\n     * trigger the appropriate logic.\n     *\n     * @category Intermediate\n     */\n    public isOrdinal(): boolean {\n        return this._conf.xUnits === UnitsOrdinal;\n    }\n\n    /**\n     * @hidden\n     */\n    public _useOuterPadding(): boolean {\n        return true;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _ordinalXDomain(): any[] {\n        const groups = this._computeOrderedGroups(this.data());\n        return groups.map(this._conf.keyAccessor);\n    }\n\n    private _prepareXAxis(g: SVGGElementSelection, render: boolean) {\n        if (!this.isOrdinal()) {\n            if (this._conf.elasticX) {\n                this._x.domain([this.xAxisMin(), this.xAxisMax()]);\n            }\n        } else {\n            // self._chart.isOrdinal()\n            // D3v4 - Ordinal charts would need scaleBand\n            // bandwidth is a method in scaleBand\n            // (https://github.com/d3/d3-scale/blob/master/README.md#scaleBand)\n            if (!this._x.bandwidth) {\n                // If self._x is not a scaleBand create a new scale and\n                // copy the original domain to the new scale\n                logger.warn(\n                    'For compatibility with d3v4+, dc.js d3.0 ordinal bar/line/bubble charts need ' +\n                        'd3.scaleBand() for the x scale, instead of d3.scaleOrdinal(). ' +\n                        'Replacing .x() with a d3.scaleBand with the same domain - ' +\n                        'make the same change in your code to avoid this warning!'\n                );\n                this._x = scaleBand().domain(this._x.domain());\n            }\n\n            if (this._conf.elasticX || this._x.domain().length === 0) {\n                this._x.domain(this._ordinalXDomain());\n            }\n        }\n\n        // has the domain changed?\n        const xdom = this._x.domain();\n        if (render || !arraysEqual(this._lastXDomain, xdom)) {\n            this.rescale();\n        }\n        this._lastXDomain = xdom;\n\n        // please can't we always use rangeBands for bar charts?\n        if (this.isOrdinal()) {\n            this._x\n                .range([0, this._xAxisLength()])\n                .paddingInner(this._fRangeBandPadding)\n                .paddingOuter(this._useOuterPadding() ? this._fOuterRangeBandPadding : 0);\n        } else {\n            this._x.range([0, this._xAxisLength()]);\n        }\n\n        this._xAxis = this._xAxis.scale(this.x());\n\n        this._renderVerticalGridLines(g);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _renderXAxis(g: SVGGElementSelection): void {\n        let axisXG = g.select('g.x');\n\n        if (axisXG.empty()) {\n            axisXG = g\n                .append('g')\n                .attr('class', 'axis x')\n                .attr('transform', `translate(${this.margins().left},${this._xAxisY()})`);\n        }\n\n        let axisXLab = g.select(`text.${X_AXIS_LABEL_CLASS}`);\n        if (axisXLab.empty() && this.xAxisLabel()) {\n            axisXLab = g\n                .append('text')\n                .attr('class', X_AXIS_LABEL_CLASS)\n                .attr(\n                    'transform',\n                    `translate(${this.margins().left + this._xAxisLength() / 2},${\n                        this.height() - this._xAxisLabelPadding\n                    })`\n                )\n                .attr('text-anchor', 'middle');\n        }\n        if (this.xAxisLabel() && axisXLab.text() !== this.xAxisLabel()) {\n            axisXLab.text(this.xAxisLabel());\n        }\n\n        transition(axisXG, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('transform', `translate(${this.margins().left},${this._xAxisY()})`)\n            .call(this._xAxis);\n        transition(axisXLab, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n            'transform',\n            `translate(${this.margins().left + this._xAxisLength() / 2},${\n                this.height() - this._xAxisLabelPadding\n            })`\n        );\n    }\n\n    private _renderVerticalGridLines(g: SVGGElementSelection) {\n        let gridLineG = g.select(`g.${VERTICAL_CLASS}`);\n\n        if (this._conf.renderVerticalGridLines) {\n            if (gridLineG.empty()) {\n                gridLineG = g\n                    .insert('g', ':first-child')\n                    .attr('class', `${GRID_LINE_CLASS} ${VERTICAL_CLASS}`)\n                    .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\n            }\n\n            let ticks;\n            if (this._xAxis.tickValues()) {\n                ticks = this._xAxis.tickValues();\n            } else if (typeof this._x.ticks === 'function') {\n                ticks = this._x.ticks.apply(this._x, this._xAxis.tickArguments());\n            } else {\n                ticks = this._x.domain();\n            }\n\n            const lines = gridLineG.selectAll('line').data(ticks);\n\n            // enter\n            const linesGEnter = lines\n                .enter()\n                .append('line')\n                .attr('x1', d => this._x(d))\n                .attr('y1', this._xAxisY() - this.margins().top)\n                .attr('x2', d => this._x(d))\n                .attr('y2', 0)\n                .attr('opacity', 0);\n            transition(linesGEnter, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n                'opacity',\n                0.5\n            );\n\n            // update\n            transition(lines, this._conf.transitionDuration, this._conf.transitionDelay)\n                .attr('x1', d => this._x(d))\n                .attr('y1', this._xAxisY() - this.margins().top)\n                .attr('x2', d => this._x(d))\n                .attr('y2', 0);\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    }\n\n    private _xAxisY(): number {\n        return this.height() - this.margins().bottom;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _xAxisLength(): number {\n        return this.effectiveWidth();\n    }\n\n    /**\n     * Set or get the x axis label. If setting the label, you may optionally include additional padding to\n     * the margin to make room for the label. By default the padded is set to 12 to accommodate the text height.\n     */\n    public xAxisLabel(): string;\n    public xAxisLabel(labelText: string, padding?: number): this;\n    public xAxisLabel(labelText?, padding?) {\n        if (!arguments.length) {\n            return this._xAxisLabel;\n        }\n        this._xAxisLabel = labelText;\n        this.margins().bottom -= this._xAxisLabelPadding;\n        this._xAxisLabelPadding = padding === undefined ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        this.margins().bottom += this._xAxisLabelPadding;\n        return this;\n    }\n\n    private _createYAxis(): Axis<undefined> {\n        return this._conf.useRightYAxis ? axisRight(undefined) : axisLeft(undefined);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _prepareYAxis(g: SVGGElementSelection) {\n        if (this._y === undefined || this._conf.elasticY) {\n            if (this._y === undefined) {\n                this._y = scaleLinear();\n            }\n            const _min = this.yAxisMin() || 0;\n            const _max = this.yAxisMax() || 0;\n            this._y.domain([_min, _max]).rangeRound([this._yAxisHeight(), 0]);\n        }\n\n        this._y.range([this._yAxisHeight(), 0]);\n\n        if (!this._yAxis) {\n            this._yAxis = this._createYAxis();\n        }\n\n        this._yAxis.scale(this._y);\n\n        this._renderHorizontalGridLinesForAxis(g, this._y, this._yAxis);\n    }\n\n    /**\n     * Composite chart needs it, hence public\n     *\n     * @hidden\n     */\n    public _renderYAxisLabel(\n        axisClass: string,\n        text: string,\n        rotation: number,\n        labelXPosition?: number\n    ): void {\n        labelXPosition = labelXPosition || this._yAxisLabelPadding;\n\n        let axisYLab = this.g().select(`text.${Y_AXIS_LABEL_CLASS}.${axisClass}-label`);\n        const labelYPosition = this.margins().top + this._yAxisHeight() / 2;\n        if (axisYLab.empty() && text) {\n            axisYLab = this.g()\n                .append('text')\n                .attr(\n                    'transform',\n                    `translate(${labelXPosition},${labelYPosition}),rotate(${rotation})`\n                )\n                .attr('class', `${Y_AXIS_LABEL_CLASS} ${axisClass}-label`)\n                .attr('text-anchor', 'middle')\n                .text(text);\n        }\n        if (text && axisYLab.text() !== text) {\n            axisYLab.text(text);\n        }\n        transition(axisYLab, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n            'transform',\n            `translate(${labelXPosition},${labelYPosition}),rotate(${rotation})`\n        );\n    }\n\n    /**\n     * Composite chart needs it, hence public\n     *\n     * @hidden\n     */\n    public _renderYAxisAt(axisClass: string, axis: Axis<any>, position: number): void {\n        let axisYG: SVGGElementSelection = this.g().select(`g.${axisClass}`);\n        if (axisYG.empty()) {\n            axisYG = this.g()\n                .append('g')\n                .attr('class', `axis ${axisClass}`)\n                .attr('transform', `translate(${position},${this.margins().top})`);\n        }\n\n        transition(axisYG, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('transform', `translate(${position},${this.margins().top})`)\n            .call(axis);\n    }\n\n    /**\n     * Composite chart needs it, hence public\n     *\n     * @hidden\n     */\n    public _renderYAxis() {\n        const axisPosition: number = this._conf.useRightYAxis\n            ? this.width() - this.margins().right\n            : this._yAxisX();\n        this._renderYAxisAt('y', this._yAxis, axisPosition);\n        const labelPosition: number = this._conf.useRightYAxis\n            ? this.width() - this._yAxisLabelPadding\n            : this._yAxisLabelPadding;\n        const rotation: number = this._conf.useRightYAxis ? 90 : -90;\n        this._renderYAxisLabel('y', this.yAxisLabel(), rotation, labelPosition);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _renderHorizontalGridLinesForAxis(\n        g: SVGGElementSelection,\n        scale: MinimalXYScale,\n        axis: Axis<any>\n    ) {\n        let gridLineG: SVGGElementSelection = g.select(`g.${HORIZONTAL_CLASS}`);\n\n        if (this._conf.renderHorizontalGridLines) {\n            // see https://github.com/d3/d3-axis/blob/master/src/axis.js#L48\n            let ticks: any;\n            if (axis.tickValues()) {\n                ticks = axis.tickValues();\n            } else if (scale.ticks) {\n                ticks = scale.ticks.apply(scale, axis.tickArguments());\n            } else {\n                ticks = scale.domain();\n            }\n\n            if (gridLineG.empty()) {\n                gridLineG = g\n                    .insert('g', ':first-child')\n                    .attr('class', `${GRID_LINE_CLASS} ${HORIZONTAL_CLASS}`)\n                    .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\n            }\n\n            const lines = gridLineG.selectAll('line').data(ticks);\n\n            // enter\n            const linesGEnter = lines\n                .enter()\n                .append('line')\n                .attr('x1', 1)\n                .attr('y1', d => scale(d))\n                .attr('x2', this._xAxisLength())\n                .attr('y2', d => scale(d))\n                .attr('opacity', 0);\n            transition(linesGEnter, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n                'opacity',\n                0.5\n            );\n\n            // update\n            transition(lines, this._conf.transitionDuration, this._conf.transitionDelay)\n                .attr('x1', 1)\n                .attr('y1', d => scale(d))\n                .attr('x2', this._xAxisLength())\n                .attr('y2', d => scale(d));\n\n            // exit\n            lines.exit().remove();\n        } else {\n            gridLineG.selectAll('line').remove();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _yAxisX(): number {\n        return this._conf.useRightYAxis ? this.width() - this.margins().right : this.margins().left;\n    }\n\n    /**\n     * Set or get the y axis label. If setting the label, you may optionally include additional padding\n     * to the margin to make room for the label. By default the padding is set to 12 to accommodate the\n     * text height.\n     */\n    public yAxisLabel(): string;\n    public yAxisLabel(labelText: string, padding?: number): this;\n    public yAxisLabel(labelText?, padding?) {\n        if (!arguments.length) {\n            return this._yAxisLabel;\n        }\n        this._yAxisLabel = labelText;\n        this.margins().left -= this._yAxisLabelPadding;\n        this._yAxisLabelPadding = padding === undefined ? DEFAULT_AXIS_LABEL_PADDING : padding;\n        this.margins().left += this._yAxisLabelPadding;\n        return this;\n    }\n\n    /**\n     * Get or set the y scale. The y scale is typically automatically determined by the chart implementation.\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale}\n     */\n    public y(): MinimalXYScale;\n    public y(yScale: MinimalXYScale): this;\n    public y(yScale?) {\n        if (!arguments.length) {\n            return this._y;\n        }\n        this._y = yScale;\n        this.rescale();\n        return this;\n    }\n\n    /**\n     * Set or get the y axis used by the coordinate grid chart instance. This function is most useful\n     * when y axis customization is required. Depending on `useRightYAxis` the y axis in dc.js is an instance of\n     * either [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft) or\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight); therefore it supports any\n     * valid d3 axis manipulation.\n     *\n     * **Caution**: The y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * In addition, depending on whether you are going to use the axis on left or right\n     * you need to appropriately pass [d3.axisLeft](https://github.com/d3/d3-axis/blob/master/README.md#axisLeft)\n     * or [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight)\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md | d3.axis}\n     * @example\n     * ```\n     * // customize y axis tick format\n     * chart.yAxis().tickFormat(function(v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.yAxis().tickValues([0, 100, 200, 300]);\n     * ```\n     *\n     * @category Intermediate\n     */\n    public yAxis(): Axis<any>;\n    public yAxis(yAxis: Axis<any>): this;\n    public yAxis(yAxis?) {\n        if (!arguments.length) {\n            if (!this._yAxis) {\n                this._yAxis = this._createYAxis();\n            }\n            return this._yAxis;\n        }\n        this._yAxis = yAxis;\n        return this;\n    }\n\n    /**\n     * Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.\n     *\n     * @category Intermediate\n     */\n    public xAxisMin() {\n        // TODO: can these be anything other than number and Date\n        const m = min(this.data(), e => this._conf.keyAccessor(e));\n        return subtract(m, this._conf.xAxisPadding, this._conf.xAxisPaddingUnit);\n    }\n\n    /**\n     * Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.\n     *\n     * @category Intermediate\n     */\n    public xAxisMax() {\n        // TODO: can these be anything other than number and Date\n        const m = max(this.data(), e => this._conf.keyAccessor(e));\n        return add(m, this._conf.xAxisPadding, this._conf.xAxisPaddingUnit);\n    }\n\n    /**\n     * Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.\n     *\n     * @category Intermediate\n     */\n    public yAxisMin() {\n        // TODO: can these be anything other than number\n        // @ts-ignore\n        const m = min(this.data(), e => e._value);\n        return subtract(m, this._conf.yAxisPadding);\n    }\n\n    /**\n     * Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.\n     *\n     * @category Intermediate\n     */\n    public yAxisMax() {\n        // TODO: can these be anything other than number\n        // @ts-ignore\n        const m = max(this.data(), e => e._value);\n        return add(m, this._conf.yAxisPadding);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _yAxisHeight() {\n        return this.effectiveHeight();\n    }\n\n    /**\n     * TODO rename to rangeBandPadding and add documentation, check if it can be moved to conf\n     */\n    public _rangeBandPadding(): number;\n    public _rangeBandPadding(_: number): this;\n    public _rangeBandPadding(_?) {\n        if (!arguments.length) {\n            return this._fRangeBandPadding;\n        }\n        this._fRangeBandPadding = _;\n        return this;\n    }\n\n    /**\n     * TODO rename to outerRangeBandPadding and add documentation, check if it can be moved to conf\n     */\n    public _outerRangeBandPadding(): number;\n    public _outerRangeBandPadding(_: number): this;\n    public _outerRangeBandPadding(_?) {\n        if (!arguments.length) {\n            return this._fOuterRangeBandPadding;\n        }\n        this._fOuterRangeBandPadding = _;\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _onFilterChange() {\n        const currentFilter = this.filter();\n        this._redrawBrush(currentFilter, false);\n\n        if (this._conf.autoFocus) {\n            this._updateUIforZoom(currentFilter, true);\n        }\n    }\n\n    /**\n     * Get or set the brush. Brush must be an instance of d3 brushes\n     * https://github.com/d3/d3-brush/blob/master/README.md\n     * You will use this only if you are writing a new chart type that supports brushing.\n     *\n     * **Caution**: dc creates and manages brushes internally. Go through and understand the source code\n     * if you want to pass a new brush object. Even if you are only using the getter,\n     * the brush object may not behave the way you expect.\n     *\n     * @category Ninja\n     */\n    public brush();\n    public brush(_): this;\n    public brush(_?) {\n        if (!arguments.length) {\n            return this._brush;\n        }\n        this._brush = _;\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _renderBrush(g: SVGGElementSelection, doTransition: boolean) {\n        if (this._conf.brushOn) {\n            this._brush.on(\n                'start brush end',\n                adaptHandler((d, evt) => this._brushing(evt))\n            );\n\n            // To retrieve selection we need self._gBrush\n            this._gBrush = g\n                .append('g')\n                .attr('class', 'brush')\n                .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\n\n            this._setBrushExtents(doTransition);\n\n            this._createBrushHandlePaths(this._gBrush, doTransition);\n\n            this._redrawBrush(this.filter(), doTransition);\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _createBrushHandlePaths(gBrush: SVGGElementSelection, doTransition: boolean) {\n        let brushHandles: Selection<SVGPathElement, any, SVGGElement, any> = gBrush\n            .selectAll<SVGPathElement, any>(`path.${CUSTOM_BRUSH_HANDLE_CLASS}`)\n            .data([{ type: 'w' }, { type: 'e' }]);\n\n        brushHandles = brushHandles\n            .enter()\n            .append('path')\n            .attr('class', CUSTOM_BRUSH_HANDLE_CLASS)\n            .merge(brushHandles);\n\n        brushHandles.attr('d', d => this._resizeHandlePath(d));\n    }\n\n    /**\n     * @hidden\n     */\n    protected _extendBrush(brushSelection: DCBrushSelection) {\n        if (brushSelection && this._conf.round) {\n            brushSelection[0] = this._conf.round(brushSelection[0]);\n            brushSelection[1] = this._conf.round(brushSelection[1]);\n        }\n        return brushSelection;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _brushIsEmpty(brushSelection: DCBrushSelection) {\n        return !brushSelection || brushSelection[1] <= brushSelection[0];\n    }\n\n    /**\n     * @hidden\n     */\n    protected _brushing(evt): void {\n        if (this._ignoreBrushEvents) {\n            return;\n        }\n\n        const rawBrushSelection = evt.selection;\n        let brushSelection: DCBrushSelection;\n\n        if (rawBrushSelection) {\n            brushSelection = rawBrushSelection.map(this.x().invert);\n        }\n\n        brushSelection = this._extendBrush(brushSelection);\n\n        this._redrawBrush(brushSelection, false);\n\n        const rangedFilter = this._brushIsEmpty(brushSelection)\n            ? null\n            : new RangedFilter(brushSelection[0], brushSelection[1]);\n\n        events.trigger(() => {\n            this._applyBrushSelection(rangedFilter);\n        }, constants.EVENT_DELAY);\n    }\n\n    private _applyBrushSelection(rangedFilter): void {\n        this.replaceFilter(rangedFilter);\n        this.redrawGroup();\n    }\n\n    /**\n     * @hidden\n     */\n    protected _withoutBrushEvents(closure) {\n        const oldValue = this._ignoreBrushEvents;\n        this._ignoreBrushEvents = true;\n\n        try {\n            closure();\n        } finally {\n            this._ignoreBrushEvents = oldValue;\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _setBrushExtents(doTransition: boolean): void {\n        this._withoutBrushEvents(() => {\n            // Set boundaries of the brush, must set it before applying to self._gBrush\n            this._brush.extent([\n                [0, 0],\n                [this.effectiveWidth(), this.effectiveHeight()],\n            ]);\n        });\n\n        this._gBrush.call(this._brush);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _redrawBrush(brushSelection: DCBrushSelection, doTransition: boolean): void {\n        if (this._conf.brushOn && this._gBrush) {\n            if (this._resizing) {\n                this._setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                this._withoutBrushEvents(() => {\n                    this._gBrush.call(this._brush.move, null);\n                });\n\n                this._gBrush.selectAll(`path.${CUSTOM_BRUSH_HANDLE_CLASS}`).attr('display', 'none');\n            } else {\n                const scaledSelection = [this._x(brushSelection[0]), this._x(brushSelection[1])];\n\n                const gBrush = optionalTransition(\n                    doTransition,\n                    this._conf.transitionDuration,\n                    this._conf.transitionDelay\n                )(this._gBrush);\n\n                this._withoutBrushEvents(() => {\n                    gBrush.call(this._brush.move, scaledSelection);\n                });\n\n                gBrush\n                    .selectAll(`path.${CUSTOM_BRUSH_HANDLE_CLASS}`)\n                    .attr('display', null)\n                    .attr('transform', (d, i) => `translate(${this._x(brushSelection[i])}, 0)`)\n                    .attr('d', d => this._resizeHandlePath(d));\n            }\n        }\n        this.fadeDeselectedArea(brushSelection);\n    }\n\n    /**\n     * Composite chart needs it, hence public.\n     *\n     * @hidden\n     */\n    public fadeDeselectedArea(brushSelection: DCBrushSelection): void {\n        // do nothing, sub-chart should override this function\n    }\n\n    private _resizeHandlePath(d): string {\n        d = d.type;\n        const e = +(d === 'e');\n        const x = e ? 1 : -1;\n        const y = this.effectiveHeight() / 3;\n\n        // TODO: revisit to see if + can be omitted\n        return (\n            `M${0.5 * x},${y}A6,6 0 0 ${e} ${6.5 * x},${y + 6}V${2 * y - 6}A6,6 0 0 ${e} ${\n                0.5 * x\n            },${2 * y}Z` + `M${2.5 * x},${y + 8}V${2 * y - 8}M${4.5 * x},${y + 8}V${2 * y - 8}`\n        );\n    }\n\n    private _getClipPathId(): string {\n        return `${this.anchorName().replace(/[ .#=\\[\\]\"]/g, '-')}-clip`;\n    }\n\n    private _generateClipPath(): void {\n        const defs = appendOrSelect(this._parent, 'defs');\n        // cannot select <clippath> elements; bug in WebKit, must select by id\n        // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n        const id = this._getClipPathId();\n        const chartBodyClip = appendOrSelect(defs, `#${id}`, 'clipPath').attr('id', id);\n\n        const padding = this._conf.clipPadding * 2;\n\n        appendOrSelect(chartBodyClip, 'rect')\n            .attr('width', this._xAxisLength() + padding)\n            .attr('height', this._yAxisHeight() + padding)\n            .attr('transform', `translate(-${this._conf.clipPadding}, -${this._conf.clipPadding})`);\n    }\n\n    /**\n     * @hidden\n     */\n    protected _preprocessData(): void {}\n\n    /**\n     * @hidden\n     */\n    protected _doRender(): this {\n        this.resetSvg();\n\n        this._preprocessData();\n\n        this._generateG();\n        this._generateClipPath();\n\n        this._drawChart(true);\n\n        this._configureMouseZoom();\n\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _doRedraw(): this {\n        this._preprocessData();\n\n        this._drawChart(false);\n        this._generateClipPath();\n\n        return this;\n    }\n\n    private _drawChart(render: boolean): void {\n        if (this.isOrdinal()) {\n            this.configure({ brushOn: false });\n        }\n\n        this._prepareXAxis(this.g(), render);\n        this._prepareYAxis(this.g());\n\n        this.plotData();\n\n        if (this._conf.elasticX || this._resizing || render) {\n            this._renderXAxis(this.g());\n        }\n\n        if (this._conf.elasticY || this._resizing || render) {\n            this._renderYAxis();\n        }\n\n        if (render) {\n            this._renderBrush(this.g(), false);\n        } else {\n            // Animate the brush only while resizing\n            this._redrawBrush(this.filter(), this._resizing);\n        }\n        this.fadeDeselectedArea(this.filter());\n        this.resizing(false);\n    }\n\n    /**\n     * Implemented by derived charts. Composite chart needs it, hence public.\n     *\n     * @hidden\n     */\n    public plotData(): void {\n        // To be implemented in derived class\n        throw new Error('Method not implemented.');\n    }\n\n    private _configureMouseZoom(): void {\n        // Save a copy of original x scale\n        this._origX = this._x.copy();\n\n        if (this._conf.mouseZoomable) {\n            this._enableMouseZoom();\n        } else if (this._hasBeenMouseZoomable) {\n            this._disableMouseZoom();\n        }\n    }\n\n    private _enableMouseZoom() {\n        this._hasBeenMouseZoomable = true;\n\n        const extent: [[number, number], [number, number]] = [\n            [0, 0],\n            [this.effectiveWidth(), this.effectiveHeight()],\n        ];\n\n        this._zoom\n            .scaleExtent(this._conf.zoomScale)\n            .extent(extent)\n            .duration(this._conf.transitionDuration);\n\n        if (this._conf.zoomOutRestrict) {\n            // Ensure minimum zoomScale is at least 1\n            const zoomScaleMin = Math.max(this._conf.zoomScale[0], 1);\n            this._zoom.translateExtent(extent).scaleExtent([zoomScaleMin, this._conf.zoomScale[1]]);\n        }\n\n        this.root().call(this._zoom);\n\n        // Tell D3 zoom our current zoom/pan status\n        this._updateD3zoomTransform();\n    }\n\n    private _disableMouseZoom() {\n        this.root().call(this._nullZoom);\n    }\n\n    private _updateUIforZoom(newDomain, noRaiseEvents: boolean) {\n        if (newDomain instanceof Array && newDomain.length > 1) {\n            this.x().domain(newDomain);\n        } else {\n            this.x().domain(this._xOriginalDomain);\n        }\n\n        this.rescale();\n        this.redraw();\n        this._updateD3zoomTransform();\n\n        if (!noRaiseEvents) {\n            this._invokeZoomedListener();\n            events.trigger(() => {\n                this.redrawGroup();\n            }, constants.EVENT_DELAY);\n        }\n    }\n\n    // event.transform.rescaleX(self._origX).domain() should give back newDomain\n    private _domainToZoomTransform(newDomain, origDomain, xScale): ZoomTransform {\n        const k = (origDomain[1] - origDomain[0]) / (newDomain[1] - newDomain[0]);\n        const xt = -1 * xScale(newDomain[0]);\n\n        return zoomIdentity.scale(k).translate(xt, 0);\n    }\n\n    // If we changing zoom status (for example by calling focus), tell D3 zoom about it\n    private _updateD3zoomTransform(): void {\n        if (this._zoom) {\n            this._withoutZoomEvents(() => {\n                this._zoom.transform(\n                    this.root(),\n                    this._domainToZoomTransform(\n                        this.x().domain(),\n                        this._xOriginalDomain,\n                        this._origX\n                    )\n                );\n            });\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    protected _withoutZoomEvents(closure) {\n        const oldValue = this._ignoreZoomEvents;\n        this._ignoreZoomEvents = true;\n\n        try {\n            closure();\n        } finally {\n            this._ignoreZoomEvents = oldValue;\n        }\n    }\n\n    private _onZoom(evt): void {\n        // ignore zoom events if it was caused by a programmatic change\n        if (this._ignoreZoomEvents) {\n            return;\n        }\n\n        const newDomain = evt.transform.rescaleX(this._origX).domain();\n        this.focus(newDomain);\n    }\n\n    // TODO: come back for return type, currently forced, but generics may help\n    private _checkExtents(ext: DCBrushSelection, outerLimits: DCBrushSelection): DCBrushSelection {\n        if (!ext || ext.length !== 2 || !outerLimits || outerLimits.length !== 2) {\n            return ext;\n        }\n\n        if (ext[0] > outerLimits[1] || ext[1] < outerLimits[0]) {\n            console.warn('Could not intersect extents, will reset');\n        }\n        // Math.max does not work (as the values may be dates as well)\n        return [\n            ext[0] > outerLimits[0] ? ext[0] : outerLimits[0],\n            ext[1] < outerLimits[1] ? ext[1] : outerLimits[1],\n        ] as DCBrushSelection;\n    }\n\n    /**\n     * Zoom this chart to focus on the given range. The given range should be an array containing only\n     * 2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set\n     * to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;\n     * otherwise focus will be ignored.\n     *\n     * To avoid ping-pong volley of events between a pair of range and focus charts please set\n     * `noRaiseEvents` to `true`. In that case it will update this chart but will not fire `zoom` event\n     * and not try to update back the associated range chart.\n     * If you are calling it manually - typically you will leave it to `false` (the default).\n     *\n     * Starting with v5, this method is unlikely to be invoked directly.\n     * A chart that needs to be focused should have {@linkcode ICoordinateGridMixinConf.autoFocus | autoFocus} set.\n     * Such charts will focus when a {@linkcode filter} is applied.\n     *\n     * A {@linkcode ICoordinateGridMixinConf.mouseZoomable | mouseZoomable} chart focuses itself when zoomed.\n     *\n     * @example\n     * ```\n     * chart.focus([5, 10]);\n     * // reset focus\n     * chart.focus(null);\n     * ```\n     *\n     * @see {@link filter}\n     * @see {@link ICoordinateGridMixinConf.autoFocus}\n     * @see {@link ICoordinateGridMixinConf.mouseZoomable}\n     *\n     * @category Intermediate\n     */\n    public focus(range: DCBrushSelection): void {\n        if (this._conf.zoomOutRestrict) {\n            // ensure range is within self._xOriginalDomain\n            range = this._checkExtents(range, this._xOriginalDomain);\n        }\n\n        let domFilter;\n        if (range instanceof Array && range.length > 1) {\n            domFilter = new RangedFilter(range[0], range[1]);\n        } else {\n            domFilter = null;\n        }\n        this.replaceFilter(domFilter);\n\n        this._updateUIforZoom(range, false);\n    }\n\n    /**\n     * Check if the chart has been focused.\n     *\n     * @see {@link focus}\n     * @see {@link ICoordinateGridMixinConf.autoFocus}\n     *\n     * @category Intermediate\n     */\n    public refocused(): boolean {\n        return !arraysEqual(this.x().domain(), this._xOriginalDomain);\n    }\n}\n","import { Constructor } from '../../core/types';\nimport { BaseMixinExt } from './base-mixin';\nimport { MarginMixin as MarginMixinNeo } from '../../base/margin-mixin';\n\nclass Intermediate extends BaseMixinExt(MarginMixinNeo) {}\n\nexport function MarginMixinExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { Constructor, IUnits, RoundFn } from '../../core/types';\nimport { BaseMixinExt } from './base-mixin';\nimport { CoordinateGridMixin as CoordinateGridMixinNeo } from '../../base/coordinate-grid-mixin';\nimport { MarginMixinExt } from './margin-mixin';\nimport { ColorMixinExt } from './color-mixin';\nimport { CountableTimeInterval } from 'd3-time';\nimport { logger } from '../core/logger';\n\nclass Intermediate extends MarginMixinExt(BaseMixinExt(CoordinateGridMixinNeo)) {}\n\nexport function CoordinateGridMixinExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        private _rangeChart: typeof CoordinateGridMixin;\n        private _focusChart: typeof CoordinateGridMixin;\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this._rangeChart = undefined;\n            this._focusChart = undefined;\n        }\n\n        /**\n         * Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate\n         * the number of data projections on the x axis such as the number of bars for a bar chart or the\n         * number of dots for a line chart.\n         *\n         * This function is expected to return a Javascript array of all data points on the x axis, or\n         * the number of points on the axis. d3 time range functions [d3.timeDays, d3.timeMonths, and\n         * d3.timeYears](https://github.com/d3/d3-time/blob/master/README.md#intervals) are all valid\n         * xUnits functions.\n         *\n         * dc.js also provides a few units function, see the {@link units Units Namespace} for\n         * a list of built-in units functions.\n         *\n         * Note that as of dc.js 3.0, `units.ordinal` is not a real function, because it is not\n         * possible to define this function compliant with the d3 range functions. It was already a\n         * magic value which caused charts to behave differently, and now it is completely so.\n         * @example\n         * // set x units to count days\n         * chart.xUnits(d3.timeDays);\n         * // set x units to count months\n         * chart.xUnits(d3.timeMonths);\n         *\n         * // A custom xUnits function can be used as long as it follows the following interface:\n         * // units in integer\n         * function(start, end) {\n         *      // simply calculates how many integers in the domain\n         *      return Math.abs(end - start);\n         * }\n         *\n         * // fixed units\n         * function(start, end) {\n         *      // be aware using fixed units will disable the focus/zoom ability on the chart\n         *      return 1000;\n         * }\n         * @param [xUnits=units.integers]\n         */\n        public xUnits(): IUnits;\n        public xUnits(xUnits: IUnits): this;\n        public xUnits(xUnits?) {\n            if (!arguments.length) {\n                return this._conf.xUnits;\n            }\n            this.configure({ xUnits: xUnits });\n            return this;\n        }\n\n        /**\n         * Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x\n         * axis if elasticX is turned on; otherwise it is ignored.\n         *\n         * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n         * number or date x axes.  When padding a date axis, an integer represents number of units being padded\n         * and a percentage string will be treated the same as an integer. The unit will be determined by the\n         * xAxisPaddingUnit variable.\n         * @param [padding=0]\n         */\n        public xAxisPadding(): number;\n        public xAxisPadding(padding: number): this;\n        public xAxisPadding(padding?) {\n            if (!arguments.length) {\n                return this._conf.xAxisPadding;\n            }\n            this.configure({ xAxisPadding: padding });\n            return this;\n        }\n\n        /**\n         * Set or get x axis padding unit for the elastic x axis. The padding unit will determine which unit to\n         * use when applying xAxis padding if elasticX is turned on and if x-axis uses a time dimension;\n         * otherwise it is ignored.\n         *\n         * The padding unit should be a\n         * [d3 time interval](https://github.com/d3/d3-time/blob/master/README.md#self._interval).\n         * For backward compatibility with dc.js 2.0, it can also be the name of a d3 time interval\n         * ('day', 'hour', etc). Available arguments are the\n         * [d3 time intervals](https://github.com/d3/d3-time/blob/master/README.md#intervals d3.timeInterval).\n         * @param [unit=d3.timeDay]\n         */\n        public xAxisPaddingUnit(): string | CountableTimeInterval;\n        public xAxisPaddingUnit(unit: string | CountableTimeInterval): this;\n        public xAxisPaddingUnit(unit?) {\n            if (!arguments.length) {\n                return this._conf.xAxisPaddingUnit;\n            }\n            this.configure({ xAxisPaddingUnit: unit });\n            return this;\n        }\n\n        /**\n         * Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will\n         * attempt to recalculate the x axis range whenever a redraw event is triggered.\n         * @param [elasticX=false]\n         */\n        public elasticX(): boolean;\n        public elasticX(elasticX: boolean): this;\n        public elasticX(elasticX?) {\n            if (!arguments.length) {\n                return this._conf.elasticX;\n            }\n            this.configure({ elasticX });\n            return this;\n        }\n\n        /**\n         * Set or get y axis padding for the elastic y axis. The padding will be added to the top and\n         * bottom of the y axis if elasticY is turned on; otherwise it is ignored.\n         *\n         * Padding can be an integer or percentage in string (e.g. '10%'). Padding can be applied to\n         * number or date axes. When padding a date axis, an integer represents number of days being padded\n         * and a percentage string will be treated the same as an integer.\n         * @param [padding=0]\n         */\n        public yAxisPadding(): number;\n        public yAxisPadding(padding: number): this;\n        public yAxisPadding(padding?) {\n            if (!arguments.length) {\n                return this._conf.yAxisPadding;\n            }\n            this.configure({ yAxisPadding: padding });\n            return this;\n        }\n\n        /**\n         * Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will\n         * attempt to recalculate the y axis range whenever a redraw event is triggered.\n         * @param [elasticY=false]\n         */\n        public elasticY(): boolean;\n        public elasticY(elasticY: boolean): this;\n        public elasticY(elasticY?) {\n            if (!arguments.length) {\n                return this._conf.elasticY;\n            }\n            this.configure({ elasticY });\n            return this;\n        }\n\n        /**\n         * Set or get the rounding function used to quantize the selection when brushing is enabled.\n         * @example\n         * // set x unit round to by month, this will make sure range selection brush will\n         * // select whole months\n         * chart.round(d3.timeMonth.round);\n         */\n        public round(): RoundFn;\n        public round(round: RoundFn): this;\n        public round(round?) {\n            if (!arguments.length) {\n                return this._conf.round;\n            }\n            this.configure({ round: round });\n            return this;\n        }\n\n        /**\n         * Turn on/off horizontal grid lines.\n         * @param [renderHorizontalGridLines=false]\n         */\n        public renderHorizontalGridLines(): boolean;\n        public renderHorizontalGridLines(renderHorizontalGridLines: boolean): this;\n        public renderHorizontalGridLines(renderHorizontalGridLines?) {\n            if (!arguments.length) {\n                return this._conf.renderHorizontalGridLines;\n            }\n            this.configure({ renderHorizontalGridLines: renderHorizontalGridLines });\n            return this;\n        }\n\n        /**\n         * Turn on/off vertical grid lines.\n         * @param [renderVerticalGridLines=false]\n         */\n        public renderVerticalGridLines(): boolean;\n        public renderVerticalGridLines(renderVerticalGridLines: boolean): this;\n        public renderVerticalGridLines(renderVerticalGridLines?) {\n            if (!arguments.length) {\n                return this._conf.renderVerticalGridLines;\n            }\n            this.configure({ renderVerticalGridLines: renderVerticalGridLines });\n            return this;\n        }\n\n        /**\n         * Get or set the scale extent for mouse zooms. See https://github.com/d3/d3-zoom#zoom_scaleExtent.\n         *\n         */\n        public zoomScale(): [number, number];\n        public zoomScale(extent: [number, number]): this;\n        public zoomScale(extent?) {\n            if (!arguments.length) {\n                return this._conf.zoomScale;\n            }\n            this.configure({ zoomScale: extent });\n            return this;\n        }\n\n        /**\n         * Get or set the zoom restriction for the chart. If true limits the zoom to original domain of the chart.\n         * @param [zoomOutRestrict=true]\n         */\n        public zoomOutRestrict(): boolean;\n        public zoomOutRestrict(zoomOutRestrict: boolean): this;\n        public zoomOutRestrict(zoomOutRestrict?) {\n            if (!arguments.length) {\n                return this._conf.zoomOutRestrict;\n            }\n            this.configure({ zoomOutRestrict: zoomOutRestrict });\n            return this;\n        }\n\n        /**\n         * Set or get mouse zoom capability flag (default: false). When turned on the chart will be\n         * zoomable using the mouse wheel. If the range selector chart is attached zooming will also update\n         * the range selection brush on the associated range selector chart.\n         * @param [mouseZoomable=false]\n         */\n        public mouseZoomable(): boolean;\n        public mouseZoomable(mouseZoomable: boolean): this;\n        public mouseZoomable(mouseZoomable?) {\n            if (!arguments.length) {\n                return this._conf.mouseZoomable;\n            }\n            this.configure({ mouseZoomable: mouseZoomable });\n            return this;\n        }\n\n        /**\n         * Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to\n         * the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area\n         * will be exactly the chart body area minus the margins.\n         * @param [padding=5]\n         */\n        public clipPadding(): number;\n        public clipPadding(padding: number): this;\n        public clipPadding(padding?) {\n            if (!arguments.length) {\n                return this._conf.clipPadding;\n            }\n            this.configure({ clipPadding: padding });\n            return this;\n        }\n\n        /**\n         * Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When\n         * used with a chart in a composite chart, allows both left and right Y axes to be shown on a\n         * chart.\n         * @param [useRightYAxis=false]\n         */\n        public useRightYAxis(): boolean;\n        public useRightYAxis(useRightYAxis: boolean): this;\n        public useRightYAxis(useRightYAxis?) {\n            if (!arguments.length) {\n                return this._conf.useRightYAxis;\n            }\n\n            // We need to warn if value is changing after self._yAxis was created\n            // @ts-ignore, _yAxis is private in CoordinateGridMixin\n            if (this._conf.useRightYAxis !== useRightYAxis && this._yAxis) {\n                logger.warn(\n                    'Value of useRightYAxis has been altered, after yAxis was created. ' +\n                        'You might get unexpected yAxis behavior. ' +\n                        'Make calls to useRightYAxis sooner in your chart creation process.'\n                );\n            }\n\n            this.configure({ useRightYAxis: useRightYAxis });\n            return this;\n        }\n\n        /**\n         * Get or set the range selection chart associated with this instance. Setting the range selection\n         * chart using this function will automatically update its selection brush when the current chart\n         * zooms in. In return the given range chart will also automatically attach this chart as its focus\n         * chart hence zoom in when range brush updates.\n         *\n         * Usually the range and focus charts will share a dimension. The range chart will set the zoom\n         * boundaries for the focus chart, so its dimension values must be compatible with the domain of\n         * the focus chart.\n         *\n         * See the [Nasdaq 100 Index](http://dc-js.github.com/dc.js/) example for this effect in action.\n         */\n        public rangeChart(): typeof CoordinateGridMixin;\n        public rangeChart(rangeChart: typeof CoordinateGridMixin): this;\n        public rangeChart(rangeChart?) {\n            if (!arguments.length) {\n                return this._rangeChart;\n            }\n            this._rangeChart = rangeChart;\n            this.configure({ autoFocus: true });\n            // @ts-ignore\n            this._rangeChart.focusChart(this);\n            return this;\n        }\n\n        public focusChart(): typeof CoordinateGridMixin;\n        public focusChart(c: typeof CoordinateGridMixin): this;\n        public focusChart(c?) {\n            if (!arguments.length) {\n                return this._focusChart;\n            }\n            this._focusChart = c;\n            return this;\n        }\n\n        /**\n         * Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse\n         * across a chart with a quantitative scale to perform range filtering based on the extent of the\n         * brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and\n         * un-filter them. However turning on the brush filter will disable other interactive elements on\n         * the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible\n         * if enabled, but only via scrolling (panning will be disabled.)\n         * @param [brushOn=true]\n         */\n        public brushOn(): boolean;\n        public brushOn(brushOn: boolean): this;\n        public brushOn(brushOn?) {\n            if (!arguments.length) {\n                return this._conf.brushOn;\n            }\n            this.configure({ brushOn });\n            return this;\n        }\n\n        /**\n         * This will be internally used by composite chart onto children. Please do not invoke directly.\n         *\n         * @protected\n         * @param [brushOn=false]\n         */\n        public parentBrushOn(): boolean;\n        public parentBrushOn(brushOn: boolean): this;\n        public parentBrushOn(brushOn?) {\n            if (!arguments.length) {\n                return this._conf.parentBrushOn;\n            }\n            this.configure({ parentBrushOn: brushOn });\n            return this;\n        }\n    };\n}\n\n// @ts-ignore\nexport const CoordinateGridMixin = CoordinateGridMixinExt(\n    ColorMixinExt(MarginMixinExt(BaseMixinExt(CoordinateGridMixinNeo)))\n);\n","import { MinimalCFGroup, ValueAccessor } from '../core/types';\nimport { CFSimpleAdapter, ICFSimpleAdapterConf } from './c-f-simple-adapter';\n\nexport interface LayerSpec {\n    name?: string;\n    group?: MinimalCFGroup;\n    valueAccessor?: ValueAccessor;\n}\n\nexport interface ICFMultiAdapterConf extends ICFSimpleAdapterConf {\n    readonly layers?: LayerSpec[];\n}\n\nexport class CFMultiAdapter extends CFSimpleAdapter {\n    protected _conf: ICFMultiAdapterConf;\n\n    constructor(conf: ICFMultiAdapterConf = {}) {\n        super({\n            layers: [],\n            valueAccessor: d => d.value,\n            ...conf,\n        });\n    }\n\n    public configure(conf: ICFMultiAdapterConf): this {\n        return super.configure(conf);\n    }\n\n    public conf(): ICFMultiAdapterConf {\n        return super.conf();\n    }\n\n    // TODO: better typing\n    public data(): any {\n        // Two level defensive copy\n        return this.layers().map(layer => {\n            const valueAccessor = layer.valueAccessor || this._conf.valueAccessor;\n            // Two level defensive copy\n            const rawData = layer.group.all().map(val => ({ ...val, _value: valueAccessor(val) }));\n\n            return { name: layer.name, rawData };\n        });\n    }\n\n    public layers(): LayerSpec[] {\n        if (this._conf.group) {\n            // if a stack configuration includes a `group` as well, that become the first layer\n            const firstLayer: LayerSpec = { name: this._conf.groupName, group: this._conf.group };\n\n            return [firstLayer].concat(this._conf.layers);\n        }\n        return this._conf.layers;\n    }\n\n    public layerByName(name: string): LayerSpec {\n        return this._conf.layers.find(l => l.name === name);\n    }\n}\n","import { Stack, stack } from 'd3-shape';\nimport { max, min } from 'd3-array';\n\nimport { add, subtract } from '../core/utils';\nimport { CoordinateGridMixin } from './coordinate-grid-mixin';\nimport { ChartGroupType, ChartParentType, LegendItem, TitleAccessor } from '../core/types';\nimport { IStackMixinConf } from './i-stack-mixin-conf';\nimport { CFMultiAdapter } from '../data/c-f-multi-adapter';\n\n/**\n * Stack Mixin is an mixin that provides cross-chart support of stackability using d3.stack.\n */\nexport class StackMixin extends CoordinateGridMixin {\n    /**\n     * @hidden\n     */\n    public _conf: IStackMixinConf;\n\n    private _stackLayout: Stack<any, { [p: string]: number }, string>;\n    private _hiddenStacks;\n\n    protected _dataProvider: CFMultiAdapter;\n\n    /**\n     * Create a new instance.\n     *\n     * @see {@link BaseMixin.constructor}\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            colorAccessor: d => d.name,\n            hidableStacks: false,\n            evadeDomainFilter: false,\n        });\n\n        this.dataProvider(new CFMultiAdapter());\n\n        this._stackLayout = stack();\n\n        this._hiddenStacks = {};\n    }\n\n    /**\n     * @see {@link BaseMixin.configure}\n     */\n    public configure(conf: IStackMixinConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    /**\n     * @see {@link BaseMixin.conf}\n     */\n    public conf(): IStackMixinConf {\n        return this._conf;\n    }\n\n    /**\n     * Stack based charts need specialized data provider that can provide more than one series\n     *\n     * @see {@link BaseMixin.dataProvider}.\n     */\n    public dataProvider(): CFMultiAdapter;\n    public dataProvider(dataProvider): this;\n    public dataProvider(dataProvider?) {\n        if (!arguments.length) {\n            return super.dataProvider();\n        }\n        return super.dataProvider(dataProvider);\n    }\n\n    /**\n     * @category Ninja\n     * @see {@link BaseMixin.data}\n     */\n    public data() {\n        let layers: any[] = this.dataProvider().data();\n        layers = layers.filter(l => this._isLayerVisible(l.name));\n\n        if (!layers.length) {\n            return [];\n        }\n\n        layers.forEach(l => {\n            const allValues = l.rawData.map((d, i) => ({\n                x: this._conf.keyAccessor(d, i),\n                y: d._value,\n                data: d,\n                name: l.name,\n            }));\n\n            l.domainValues = allValues.filter(layer => this._domainFilter()(layer));\n            l.values = this._conf.evadeDomainFilter ? allValues : l.domainValues;\n        });\n\n        const v4data = layers[0].values.map((v, i) => {\n            const col = { x: v.x };\n            layers.forEach(layer => {\n                col[layer.name] = layer.values[i].y;\n            });\n            return col;\n        });\n        const keys = layers.map(layer => layer.name);\n        const v4result = this.stackLayout().keys(keys)(v4data);\n        v4result.forEach((series, i) => {\n            series.forEach((ys, j) => {\n                layers[i].values[j].y0 = ys[0];\n                layers[i].values[j].y1 = ys[1];\n            });\n        });\n        return layers;\n    }\n\n    private _domainFilter() {\n        if (!this.x()) {\n            return () => true;\n        }\n        const xDomain = this.x().domain();\n        if (this.isOrdinal()) {\n            // TODO #416\n            // var domainSet = d3.set(xDomain);\n            return () => true; // domainSet.has(p.x);\n        }\n        if (this._conf.elasticX) {\n            return () => true;\n        }\n        return p => p.x >= xDomain[0] && p.x <= xDomain[xDomain.length - 1];\n    }\n\n    /**\n     * Hide the stack with the given name.\n     * The chart must be re-rendered for this change to appear.\n     *\n     * @category Intermediate\n     */\n    public hideStack(stackName) {\n        this._hiddenStacks[stackName] = true;\n        return this;\n    }\n\n    /**\n     * Make stack with the given name visible.\n     * The chart must be re-rendered for this change to appear.\n     *\n     * @category Intermediate\n     */\n    public showStack(stackName) {\n        this._hiddenStacks[stackName] = false;\n        return this;\n    }\n\n    private _isLayerVisible(layerName) {\n        return !this._hiddenStacks[layerName];\n    }\n\n    /**\n     * @see {@link CoordinateGridMixin.yAxisMin}\n     *\n     * @category Intermediate\n     */\n    public yAxisMin() {\n        const m = min(this._flattenStack(), p => (p.y < 0 ? p.y + p.y0 : p.y0));\n        return subtract(m, this._conf.yAxisPadding);\n    }\n\n    /**\n     * @see {@link CoordinateGridMixin.yAxisMax}\n     *\n     * @category Intermediate\n     */\n    public yAxisMax() {\n        const m = max(this._flattenStack(), p => (p.y > 0 ? p.y + p.y0 : p.y0));\n        return add(m, this._conf.yAxisPadding);\n    }\n\n    // TODO: better types\n    private _flattenStack(): any[] {\n        // @ts-ignore     // TODO: better types\n        return this.data().flatMap(layer => layer.domainValues);\n    }\n\n    /**\n     * @see {@link CoordinateGridMixin.xAxisMin}\n     *\n     * @category Intermediate\n     */\n    public xAxisMin() {\n        const m = min(this._flattenStack(), d => d.x);\n        return subtract(m, this._conf.xAxisPadding, this._conf.xAxisPaddingUnit);\n    }\n\n    /**\n     * @see {@link CoordinateGridMixin.xAxisMax}\n     *\n     * @category Intermediate\n     */\n    public xAxisMax() {\n        const m = max(this._flattenStack(), d => d.x);\n        return add(m, this._conf.xAxisPadding, this._conf.xAxisPaddingUnit);\n    }\n\n    /**\n     * @hidden\n     */\n    protected titleFn(stackName: string): TitleAccessor {\n        return (this._conf.titles && this._conf.titles[stackName]) || this._conf.title;\n    }\n\n    /**\n     * Gets or sets the stack layout algorithm, which computes a baseline for each stack and\n     * propagates it to the next.\n     * @see {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md | d3.stackD3v3}\n     *\n     * @category Ninja\n     */\n    public stackLayout();\n    public stackLayout(_stack): this;\n    public stackLayout(_stack?) {\n        if (!arguments.length) {\n            return this._stackLayout;\n        }\n        this._stackLayout = _stack;\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _ordinalXDomain() {\n        const flat = this._flattenStack().map(d => d.data);\n        const ordered = this._computeOrderedGroups(flat);\n        return ordered.map(this._conf.keyAccessor);\n    }\n\n    /**\n     * @see {@link BaseMixin.legendables}\n     */\n    public legendables(): LegendItem[] {\n        return this.dataProvider()\n            .layers()\n            .map((layer, i) => ({\n                chart: this,\n                name: layer.name,\n                hidden: !this._isLayerVisible(layer.name),\n                color: this._colorHelper.getColor(layer, i),\n            }));\n    }\n\n    /**\n     * @hidden\n     */\n    public isLegendableHidden(d: LegendItem) {\n        return !this._isLayerVisible(d.name);\n    }\n\n    /**\n     * @hidden\n     */\n    public legendToggle(d: LegendItem) {\n        if (this._conf.hidableStacks) {\n            if (this.isLegendableHidden(d)) {\n                this.showStack(d.name);\n            } else {\n                this.hideStack(d.name);\n            }\n            // _chart.redraw();\n            this.renderGroup();\n        }\n    }\n}\n","import { BaseAccessor, Constructor, MinimalCFGroup, TitleAccessor } from '../../core/types';\nimport { BaseMixinExt } from './base-mixin';\nimport { StackMixin as StackMixinNeo } from '../../base/stack-mixin';\nimport { MarginMixinExt } from './margin-mixin';\nimport { ColorMixinExt } from './color-mixin';\nimport { CoordinateGridMixinExt } from './coordinate-grid-mixin';\nimport { ICFMultiAdapterConf, LayerSpec } from '../../data';\n\nclass Intermediate extends CoordinateGridMixinExt(MarginMixinExt(BaseMixinExt(StackMixinNeo))) {}\n\nexport function StackMixinExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        /**\n         * Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks\n         * in the same chart will share the same key accessor and therefore the same set of keys.\n         *\n         * For example, in a stacked bar chart, the bars of each stack will be positioned using the same set\n         * of keys on the x axis, while stacked vertically. If name is specified then it will be used to\n         * generate the legend label.\n         * @see {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#group-map-reduce crossfilter.group}\n         * @example\n         * // stack group using default accessor\n         * chart.stack(valueSumGroup)\n         * // stack group using custom accessor\n         * .stack(avgByDayGroup, function(d){return d.value.avgByDay;});\n         */\n        public stack();\n        public stack(group, name?, accessor?): this;\n        public stack(group?, name?, accessor?) {\n            if (!arguments.length) {\n                return this._dataProvider.layers();\n            }\n\n            const stack = (this._dataProvider.conf() as ICFMultiAdapterConf).layers;\n\n            if (arguments.length <= 2) {\n                accessor = name;\n            }\n\n            name = typeof name === 'string' ? name : String(stack.length);\n            const layer: LayerSpec = { group, name };\n            if (typeof accessor === 'function') {\n                layer.valueAccessor = accessor;\n            }\n\n            stack.push(layer);\n\n            return this;\n        }\n\n        public group(): MinimalCFGroup;\n        public group(g: MinimalCFGroup, n?: string, f?: BaseAccessor<any>): this;\n        public group(g?, n?, f?) {\n            if (!arguments.length) {\n                return super.group();\n            }\n            this._dataProvider.configure({\n                layers: [],\n            });\n            this.configure({\n                titles: {},\n            });\n            if (f) {\n                this._dataProvider.configure({ valueAccessor: f });\n            }\n            return super.group(g, n);\n        }\n\n        /**\n         * Set or get the title function. Chart class will use this function to render svg title (usually interpreted by\n         * browser as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart.\n         * Almost every chart supports title function however in grid coordinate chart you need to turn off brush in order to\n         * use title otherwise the brush layer will block tooltip trigger.\n         *\n         * If the first argument is a stack name, the title function will get or set the title for that stack. If stackName\n         * is not provided, the first stack is implied.\n         * @example\n         * // set a title function on 'first stack'\n         * chart.title('first stack', function(d) { return d.key + ': ' + d.value; });\n         * // get a title function from 'second stack'\n         * var secondTitleFunction = chart.title('second stack');\n         */\n        public title(): TitleAccessor;\n        public title(stackName); // TODO: actually TitleAccessor, however conflicts with base class signature\n        public title(stackName, titleAccessor): this;\n        public title(stackName?, titleAccessor?) {\n            if (!stackName) {\n                return super.title();\n            }\n\n            if (typeof stackName === 'function') {\n                return super.title(stackName);\n            }\n            if (\n                stackName === this.dataProvider().conf().groupName &&\n                typeof titleAccessor === 'function'\n            ) {\n                return super.title(titleAccessor);\n            }\n\n            if (typeof titleAccessor !== 'function') {\n                return this._conf.titles[stackName] || super.title();\n            }\n\n            this._conf.titles[stackName] = titleAccessor;\n\n            return this;\n        }\n\n        /**\n         * Allow named stacks to be hidden or shown by clicking on legend items.\n         * This does not affect the behavior of hideStack or showStack.\n         * @param [hidableStacks=false]\n         */\n        public hidableStacks(hidableStacks) {\n            if (!arguments.length) {\n                return this._conf.hidableStacks;\n            }\n            this.configure({ hidableStacks: hidableStacks });\n            return this;\n        }\n\n        /**\n         * Since dc.js 2.0, there has been {@link https://github.com/dc-js/dc.js/issues/949 an issue}\n         * where points are filtered to the current domain. While this is a useful optimization, it is\n         * incorrectly implemented: the next point outside the domain is required in order to draw lines\n         * that are clipped to the bounds, as well as bars that are partly clipped.\n         *\n         * A fix will be included in dc.js 2.1.x, but a workaround is needed for dc.js 2.0 and until\n         * that fix is published, so set this flag to skip any filtering of points.\n         *\n         * Once the bug is fixed, this flag will have no effect, and it will be deprecated.\n         * @param [evadeDomainFilter=false]\n         */\n        public evadeDomainFilter();\n        public evadeDomainFilter(evadeDomainFilter): this;\n        public evadeDomainFilter(evadeDomainFilter?) {\n            if (!arguments.length) {\n                return this._conf.evadeDomainFilter;\n            }\n            this.configure({ evadeDomainFilter: evadeDomainFilter });\n            return this;\n        }\n    };\n}\n\nexport const StackMixin = StackMixinExt(\n    CoordinateGridMixinExt(ColorMixinExt(MarginMixinExt(BaseMixinExt(StackMixinNeo))))\n);\n","import { select, Selection } from 'd3-selection';\n\nimport { StackMixin } from '../base/stack-mixin';\nimport { transition } from '../core/core';\nimport { constants } from '../core/constants';\nimport { logger } from '../core/logger';\nimport { pluck2, printSingleValue, safeNumber } from '../core/utils';\nimport {\n    ChartGroupType,\n    ChartParentType,\n    DCBrushSelection,\n    SVGGElementSelection,\n} from '../core/types';\nimport { IBarChartConf } from './i-bar-chart-conf';\nimport { adaptHandler } from '../core/d3compat';\n\nconst MIN_BAR_WIDTH = 1;\nconst DEFAULT_GAP_BETWEEN_BARS = 2;\nconst LABEL_PADDING = 3;\n\n/**\n * Concrete bar chart/histogram implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html | Canadian City Crime Stats}\n */\nexport class BarChart extends StackMixin {\n    public _conf: IBarChartConf;\n\n    private _gap: number;\n    private _barWidth: number;\n\n    /**\n     * Create a Bar Chart\n     *\n     * TODO: update example for chartGroup\n     *\n     * @example\n     * ```\n     * // create a bar chart under #chart-container1 element using the default global chart group\n     * var chart1 = new BarChart('#chart-container1');\n     * // create a bar chart under #chart-container2 element using chart group A\n     * var chart2 = new BarChart('#chart-container2', 'chartGroupA');\n     * // create a sub-chart under a composite parent chart\n     * var chart3 = new BarChart(compositeChart);\n     * {@link https://github.com/d3/d3-selection/blob/master/README.md#select | d3 single selector}\n     * specifying a dom block element such as a div; or a dom element or d3 selection.  If the bar\n     * chart is a sub-chart in a {@link CompositeChart | Composite Chart} then pass in the parent\n     * composite chart instance instead.\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            label: d => printSingleValue(d.y0 + d.y),\n            renderLabel: false,\n            centerBar: false,\n            alwaysUseRounding: false,\n        });\n\n        this._gap = DEFAULT_GAP_BETWEEN_BARS; // TODO: after untangling it with outer/inner paddings try to move to conf\n\n        this._barWidth = undefined;\n    }\n\n    public configure(conf: IBarChartConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IBarChartConf {\n        return this._conf;\n    }\n\n    /**\n     * Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.\n     * Will pad the width by `padding * barWidth` on each side of the chart.\n     */\n    public outerPadding(): number;\n    public outerPadding(padding: number): this;\n    public outerPadding(padding?) {\n        if (!arguments.length) {\n            return this._outerRangeBandPadding();\n        }\n        return this._outerRangeBandPadding(padding);\n    }\n\n    public rescale(): this {\n        super.rescale();\n        this._barWidth = undefined;\n        return this;\n    }\n\n    public render(): this {\n        if (this._conf.round && this._conf.centerBar && !this._conf.alwaysUseRounding) {\n            logger.warn(\n                'By default, brush rounding is disabled if bars are centered. ' +\n                    'See dc.js bar chart API documentation for details.'\n            );\n        }\n\n        return super.render();\n    }\n\n    public plotData(): void {\n        let layers: SVGGElementSelection = this.chartBodyG().selectAll('g.stack').data(this.data());\n\n        this._calculateBarWidth();\n\n        layers = layers\n            .enter()\n            .append('g')\n            .attr('class', (d, i) => `stack _${i}`)\n            .merge(layers);\n\n        const last = layers.size() - 1;\n        {\n            const chart = this;\n            layers.each(function (d, i) {\n                const layer = select(this);\n\n                chart._renderBars(layer, i, d);\n\n                if (chart._conf.renderLabel && last === i) {\n                    chart._renderLabels(layer, i, d);\n                }\n            });\n        }\n    }\n\n    private _barHeight(d): number {\n        return safeNumber(Math.abs(this.y()(d.y + d.y0) - this.y()(d.y0)));\n    }\n\n    private _labelXPos(d): number {\n        let x = this.x()(d.x);\n        if (!this._conf.centerBar) {\n            x += this._barWidth / 2;\n        }\n        if (this.isOrdinal() && this._gap !== undefined) {\n            x += this._gap / 2;\n        }\n        return safeNumber(x);\n    }\n\n    private _labelYPos(d): number {\n        let y = this.y()(d.y + d.y0);\n\n        if (d.y < 0) {\n            y -= this._barHeight(d);\n        }\n\n        return safeNumber(y - LABEL_PADDING);\n    }\n\n    private _renderLabels(layer: SVGGElementSelection, layerIndex: number, data): void {\n        const labels: Selection<SVGTextElement, unknown, SVGGElement, any> = layer\n            .selectAll<SVGTextElement, any>('text.barLabel')\n            .data(data.values, d => d.x);\n\n        const labelsEnterUpdate: Selection<SVGTextElement, unknown, SVGGElement, any> = labels\n            .enter()\n            .append('text')\n            .attr('class', 'barLabel')\n            .attr('text-anchor', 'middle')\n            .attr('x', d => this._labelXPos(d))\n            .attr('y', d => this._labelYPos(d))\n            .merge(labels);\n\n        if (this.isOrdinal()) {\n            labelsEnterUpdate.on(\n                'click',\n                adaptHandler(d => this.onClick(d))\n            );\n            labelsEnterUpdate.attr('cursor', 'pointer');\n        }\n\n        transition(labelsEnterUpdate, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('x', d => this._labelXPos(d))\n            .attr('y', d => this._labelYPos(d))\n            .text(d => this._conf.label(d));\n\n        transition(labels.exit(), this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('height', 0)\n            .remove();\n    }\n\n    private _barXPos(d): number {\n        let x: number = this.x()(d.x);\n        if (this._conf.centerBar) {\n            x -= this._barWidth / 2;\n        }\n        if (this.isOrdinal() && this._gap !== undefined) {\n            x += this._gap / 2;\n        }\n        return safeNumber(x);\n    }\n\n    private _renderBars(layer: SVGGElementSelection, layerIndex: number, data): void {\n        const bars: Selection<SVGRectElement, any, SVGGElement, any> = layer\n            .selectAll<SVGRectElement, any>('rect.bar')\n            .data<any>(data.values, d => d.x);\n\n        const enter: Selection<SVGRectElement, any, SVGGElement, any> = bars\n            .enter()\n            .append('rect')\n            .attr('class', 'bar')\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .attr('x', d => this._barXPos(d))\n            .attr('y', this._yAxisHeight())\n            .attr('height', 0);\n\n        // prettier-ignore\n        const barsEnterUpdate: Selection<SVGRectElement, unknown, SVGGElement, any> = enter.merge(bars);\n\n        if (this._conf.renderTitle) {\n            enter.append('title').text(pluck2('data', this.titleFn(data.name)));\n        }\n\n        if (this.isOrdinal()) {\n            barsEnterUpdate.on(\n                'click',\n                adaptHandler(d => this.onClick(d))\n            );\n        }\n\n        transition(barsEnterUpdate, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('x', d => this._barXPos(d))\n            .attr('y', d => {\n                let y = this.y()(d.y + d.y0);\n\n                if (d.y < 0) {\n                    y -= this._barHeight(d);\n                }\n\n                return safeNumber(y);\n            })\n            .attr('width', this._barWidth)\n            .attr('height', d => this._barHeight(d))\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .select('title')\n            .text(pluck2('data', this.titleFn(data.name)));\n\n        transition(bars.exit(), this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('x', d => this.x()(d.x))\n            .attr('width', this._barWidth * 0.9)\n            .remove();\n    }\n\n    public _calculateBarWidth(): void {\n        if (this._barWidth === undefined) {\n            const numberOfBars = this.xUnitCount();\n\n            // please can't we always use rangeBands for bar charts?\n            if (this.isOrdinal() && this._gap === undefined) {\n                this._barWidth = Math.floor(this.x().bandwidth());\n            } else if (this._gap) {\n                this._barWidth = Math.floor(\n                    (this._xAxisLength() - (numberOfBars - 1) * this._gap) / numberOfBars\n                );\n            } else {\n                this._barWidth = Math.floor(\n                    this._xAxisLength() / (1 + this.barPadding()) / numberOfBars\n                );\n            }\n\n            if (\n                this._barWidth === Infinity ||\n                isNaN(this._barWidth) ||\n                this._barWidth < MIN_BAR_WIDTH\n            ) {\n                this._barWidth = MIN_BAR_WIDTH;\n            }\n        }\n    }\n\n    public fadeDeselectedArea(brushSelection: DCBrushSelection): void {\n        // prettier-ignore\n        const bars: Selection<SVGRectElement, any, SVGGElement, any> = this.chartBodyG().selectAll('rect.bar');\n\n        if (this.isOrdinal()) {\n            if (this.hasFilter()) {\n                bars.classed(constants.SELECTED_CLASS, d => this.hasFilter(d.x));\n                bars.classed(constants.DESELECTED_CLASS, d => !this.hasFilter(d.x));\n            } else {\n                bars.classed(constants.SELECTED_CLASS, false);\n                bars.classed(constants.DESELECTED_CLASS, false);\n            }\n        } else if (this._conf.brushOn || this._conf.parentBrushOn) {\n            if (!this._brushIsEmpty(brushSelection)) {\n                const start = brushSelection[0];\n                const end = brushSelection[1];\n\n                bars.classed(constants.DESELECTED_CLASS, d => d.x < start || d.x >= end);\n            } else {\n                bars.classed(constants.DESELECTED_CLASS, false);\n            }\n        }\n    }\n\n    public onClick(d, i?): void {\n        super.onClick(d.data, i);\n    }\n\n    /**\n     * Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.\n     * Setting this value will also remove any previously set {@link BarChart.gap | gap}. See the\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand | d3 docs}\n     * for a visual description of how the padding is applied.\n     */\n    public barPadding(): number;\n    public barPadding(barPadding: number): this;\n    public barPadding(barPadding?) {\n        if (!arguments.length) {\n            return this._rangeBandPadding();\n        }\n        this._rangeBandPadding(barPadding);\n        this._gap = undefined;\n        return this;\n    }\n\n    public _useOuterPadding(): boolean {\n        return this._gap === undefined;\n    }\n\n    /**\n     * Manually set fixed gap (in px) between bars instead of relying on the default auto-generated\n     * gap.  By default the bar chart implementation will calculate and set the gap automatically\n     * based on the number of data points and the length of the x axis.\n     */\n    public gap(): number;\n    public gap(gap: number): this;\n    public gap(gap?) {\n        if (!arguments.length) {\n            return this._gap;\n        }\n        this._gap = gap;\n        return this;\n    }\n\n    public _extendBrush(brushSelection) {\n        if (\n            brushSelection &&\n            this._conf.round &&\n            (!this._conf.centerBar || this._conf.alwaysUseRounding)\n        ) {\n            brushSelection[0] = this._conf.round(brushSelection[0]);\n            brushSelection[1] = this._conf.round(brushSelection[1]);\n        }\n        return brushSelection;\n    }\n\n    public legendHighlight(d): void {\n        const colorFilter = (color, inv?) =>\n            function () {\n                const item = select(this);\n                const match = item.attr('fill') === color;\n                return inv ? !match : match;\n            };\n\n        if (!this.isLegendableHidden(d)) {\n            this.g()\n                .selectAll('rect.bar')\n                .classed('highlight', colorFilter(d.color))\n                .classed('fadeout', colorFilter(d.color, true));\n        }\n    }\n\n    public legendReset(): void {\n        this.g().selectAll('rect.bar').classed('highlight', false).classed('fadeout', false);\n    }\n\n    public xAxisMax(): Date | number {\n        let max = super.xAxisMax();\n        if ('resolution' in this._conf.xUnits) {\n            const res = this._conf.xUnits.resolution;\n            max = (max as number) + res; // max can be date as well, this case refers when xUnits is floating point\n        }\n        return max;\n    }\n}\n","import { BarChart as BarChartNeo } from '../../charts/bar-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\nimport { StackMixinExt } from '../base/stack-mixin';\n\nexport class BarChart extends StackMixinExt(\n    CoordinateGridMixinExt(ColorMixinExt(MarginMixinExt(BaseMixinExt(BarChartNeo))))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Whether the bar chart will render each bar centered around the data position on the x-axis.\n     * @param [centerBar=false]\n     */\n    public centerBar(): boolean;\n    public centerBar(centerBar: boolean): this;\n    public centerBar(centerBar?) {\n        if (!arguments.length) {\n            return this._conf.centerBar;\n        }\n        this.configure({ centerBar: centerBar });\n        return this;\n    }\n\n    /**\n     * Set or get whether rounding is enabled when bars are centered. If false, using\n     * rounding with centered bars will result in a warning and rounding will be ignored.  This flag\n     * has no effect if bars are not {@link BarChart.centerBar centered}.\n     * When using standard d3.js rounding methods, the brush often doesn't align correctly with\n     * centered bars since the bars are offset.  The rounding function must add an offset to\n     * compensate, such as in the following example.\n     * @example\n     * chart.round(function(n) { return Math.floor(n) + 0.5; });\n     * @param [alwaysUseRounding=false]\n     */\n    public alwaysUseRounding(): boolean;\n    public alwaysUseRounding(alwaysUseRounding: boolean): this;\n    public alwaysUseRounding(alwaysUseRounding?) {\n        if (!arguments.length) {\n            return this._conf.alwaysUseRounding;\n        }\n        this.configure({ alwaysUseRounding: alwaysUseRounding });\n        return this;\n    }\n}\n\nexport const barChart = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new BarChart(parent, chartGroup);\n","import { scaleBand } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport { max, min } from 'd3-array';\n\nimport { d3Box } from '../base/d3.box';\nimport { CoordinateGridMixin } from '../base/coordinate-grid-mixin';\nimport { transition } from '../core/core';\nimport { UnitsOrdinal } from '../core/units';\nimport { add, subtract } from '../core/utils';\nimport {\n    BoxWidthFn,\n    ChartGroupType,\n    ChartParentType,\n    DCBrushSelection,\n    SVGGElementSelection,\n} from '../core/types';\nimport { IBoxPlotConf } from './i-box-plot-conf';\nimport { adaptHandler } from '../core/d3compat';\n\n// Returns a function to compute the interquartile range.\nfunction defaultWhiskersIQR(k: number): (d) => [number, number] {\n    return d => {\n        const q1 = d.quartiles[0];\n        const q3 = d.quartiles[2];\n        const iqr = (q3 - q1) * k;\n\n        let i = -1;\n        let j = d.length;\n\n        do {\n            ++i;\n        } while (d[i] < q1 - iqr);\n\n        do {\n            --j;\n        } while (d[j] > q3 + iqr);\n\n        return [i, j];\n    };\n}\n\n/**\n * A box plot is a chart that depicts numerical data via their quartile ranges.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-basic.html | Boxplot Basic example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-enhanced.html | Boxplot Enhanced example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-render-data.html | Boxplot Render Data example}\n * - {@link http://dc-js.github.io/dc.js/examples/boxplot-time.html | Boxplot time example}\n */\nexport class BoxPlot extends CoordinateGridMixin {\n    public _conf: IBoxPlotConf;\n\n    private readonly _whiskers: (d) => [number, number];\n    private readonly _box;\n    private _boxWidth: BoxWidthFn;\n\n    /**\n     * Create a BoxPlot.\n     *\n     * TODO: update example\n     * @example\n     * ```\n     * // create a box plot under #chart-container1 element using the default global chart group\n     * var boxPlot1 = new BoxPlot('#chart-container1');\n     * // create a box plot under #chart-container2 element using chart group A\n     * var boxPlot2 = new BoxPlot('#chart-container2', 'chartGroupA');\n     * @param parent - Any valid {@link https://github.com/d3/d3-selection/blob/master/README.md#select | d3 single selector} specifying\n     * a dom block element such as a div; or a dom element or d3 selection.\n     * @param chartGroup - The name of the chart group this chart instance should be placed in.\n     * Interaction with a chart will only trigger events and redraws within the chart's group.\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        const whiskerIqrFactor = 1.5;\n        this._whiskers = defaultWhiskersIQR(whiskerIqrFactor);\n\n        this._box = d3Box();\n        this.configure({\n            xUnits: UnitsOrdinal,\n            tickFormat: null,\n            renderDataPoints: false,\n            dataOpacity: 0.3,\n            dataWidthPortion: 0.8,\n            showOutliers: true,\n            boldOutlier: false,\n\n            // Used in yAxisMin and yAxisMax to add padding in pixel coordinates\n            // so the min and max data points/whiskers are within the chart\n            yRangePadding: 8,\n        });\n\n        this._boxWidth = (innerChartWidth, xUnits) => {\n            if (this.isOrdinal()) {\n                return this.x().bandwidth();\n            } else {\n                return innerChartWidth / (1 + this.boxPadding()) / xUnits;\n            }\n        };\n\n        // default to ordinal\n        this.x(scaleBand());\n\n        this.boxPadding(0.8);\n        this.outerPadding(0.5);\n    }\n\n    public configure(conf: IBoxPlotConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IBoxPlotConf {\n        return this._conf;\n    }\n\n    public data() {\n        // valueAccessor should return an array of values that can be coerced into numbers\n        // or if data is overloaded for a static array of arrays, it should be `Number`.\n        // Empty arrays are not included.\n        return super\n            .data()\n            .map(d => {\n                d.map = accessor => accessor.call(d, d);\n                return d;\n            })\n            .filter(d => {\n                const values = d._value;\n                return values.length !== 0;\n            });\n    }\n    /**\n     * Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.\n     * See the {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand | d3 docs}\n     * for a visual description of how the padding is applied.\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md#scaleBand | d3.scaleBand}\n     * @param {Number} [padding=0.8]\n     */\n    public boxPadding(): number;\n    public boxPadding(padding: number): this;\n    public boxPadding(padding?) {\n        if (!arguments.length) {\n            return this._rangeBandPadding();\n        }\n        return this._rangeBandPadding(padding);\n    }\n\n    /**\n     * Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts\n     * or on charts with a custom {@link BoxPlot.boxWidth | .boxWidth}. Will pad the width by\n     * `padding * barWidth` on each side of the chart.\n     * @param {Number} [padding=0.5]\n     */\n    public outerPadding(): number;\n    public outerPadding(padding: number): this;\n    public outerPadding(padding?) {\n        if (!arguments.length) {\n            return this._outerRangeBandPadding();\n        }\n        return this._outerRangeBandPadding(padding);\n    }\n\n    /**\n     * Get or set the numerical width of the boxplot box. The width may also be a function taking as\n     * parameters the chart width excluding the right and left margins, as well as the number of x\n     * units.\n     *\n     * Default boxWidth is 0.5.\n     *\n     * @example\n     * ```\n     * // Using numerical parameter\n     * chart.boxWidth(10);\n     * // Using function\n     * chart.boxWidth((innerChartWidth, xUnits) { ... });\n     * ```\n     */\n    public boxWidth(): BoxWidthFn;\n    public boxWidth(boxWidth: BoxWidthFn): this;\n    public boxWidth(boxWidth?) {\n        if (!arguments.length) {\n            return this._boxWidth;\n        }\n        this._boxWidth = typeof boxWidth === 'function' ? boxWidth : () => boxWidth;\n        return this;\n    }\n\n    public _boxTransform(d, i: number): string {\n        const xOffset = this.x()(this._conf.keyAccessor(d, i));\n        return `translate(${xOffset}, 0)`;\n    }\n\n    protected _preprocessData(): void {\n        if (this._conf.elasticX) {\n            this.x().domain([]);\n        }\n    }\n\n    public plotData(): void {\n        const calculatedBoxWidth: number = this._boxWidth(this.effectiveWidth(), this.xUnitCount());\n\n        this._box\n            .whiskers(this._whiskers)\n            .width(calculatedBoxWidth)\n            .height(this.effectiveHeight())\n            .value(d => d._value)\n            .domain(this.y().domain())\n            .duration(this._conf.transitionDuration)\n            .tickFormat(this._conf.tickFormat)\n            .renderDataPoints(this._conf.renderDataPoints)\n            .dataOpacity(this._conf.dataOpacity)\n            .dataWidthPortion(this._conf.dataWidthPortion)\n            .renderTitle(this._conf.renderTitle)\n            .showOutliers(this._conf.showOutliers)\n            .boldOutlier(this._conf.boldOutlier);\n\n        const boxesG: SVGGElementSelection = this.chartBodyG()\n            .selectAll('g.box')\n            .data(this.data(), this._conf.keyAccessor);\n\n        const boxesGEnterUpdate: SVGGElementSelection = this._renderBoxes(boxesG);\n        this._updateBoxes(boxesGEnterUpdate);\n        this._removeBoxes(boxesG);\n\n        this.fadeDeselectedArea(this.filter());\n    }\n\n    public _renderBoxes(boxesG: SVGGElementSelection) {\n        const boxesGEnter: SVGGElementSelection = boxesG.enter().append('g');\n\n        boxesGEnter\n            .attr('class', 'box')\n            .attr('transform', (d, i) => this._boxTransform(d, i))\n            .call(this._box)\n            .on(\n                'click',\n                adaptHandler(d => {\n                    this.filter(this._conf.keyAccessor(d));\n                    this.redrawGroup();\n                })\n            );\n        return boxesGEnter.merge(boxesG);\n    }\n\n    public _updateBoxes(boxesG: SVGGElementSelection) {\n        const chart = this;\n        transition(boxesG, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('transform', (d, i) => this._boxTransform(d, i))\n            .call(this._box)\n            .each(function (d) {\n                const color = chart._colorHelper.getColor(d, 0);\n                select(this).select('rect.box').attr('fill', color);\n                select(this).selectAll('circle.data').attr('fill', color);\n            });\n    }\n\n    public _removeBoxes(boxesG: SVGGElementSelection): void {\n        boxesG.exit().remove().call(this._box);\n    }\n\n    public _minDataValue(): number {\n        // @ts-ignore\n        return min(this.data(), e => min<number>(e._value));\n    }\n\n    public _maxDataValue(): number {\n        // @ts-ignore\n        return max(this.data(), e => max<number>(e._value));\n    }\n\n    public _yAxisRangeRatio(): number {\n        return (this._maxDataValue() - this._minDataValue()) / this.effectiveHeight();\n    }\n\n    public fadeDeselectedArea(brushSelection: DCBrushSelection): void {\n        const chart = this;\n        if (this.hasFilter()) {\n            if (this.isOrdinal()) {\n                this.g()\n                    .selectAll('g.box')\n                    .each(function (d) {\n                        if (chart.isSelectedNode(d)) {\n                            chart.highlightSelected(this);\n                        } else {\n                            chart.fadeDeselected(this);\n                        }\n                    });\n            } else {\n                if (!(this._conf.brushOn || this._conf.parentBrushOn)) {\n                    return;\n                }\n                const start = brushSelection[0];\n                const end = brushSelection[1];\n                this.g()\n                    .selectAll('g.box')\n                    .each(function (d) {\n                        const key = chart._conf.keyAccessor(d);\n                        if (key < start || key >= end) {\n                            chart.fadeDeselected(this);\n                        } else {\n                            chart.highlightSelected(this);\n                        }\n                    });\n            }\n        } else {\n            this.g()\n                .selectAll('g.box')\n                .each(function () {\n                    chart.resetHighlight(this);\n                });\n        }\n    }\n\n    public isSelectedNode(d): boolean {\n        return this.hasFilter(this._conf.keyAccessor(d));\n    }\n\n    public yAxisMin(): number {\n        const padding = this._conf.yRangePadding * this._yAxisRangeRatio();\n        return subtract(this._minDataValue() - padding, this._conf.yAxisPadding) as number;\n    }\n\n    public yAxisMax(): number {\n        const padding = this._conf.yRangePadding * this._yAxisRangeRatio();\n        return add(this._maxDataValue() + padding, this._conf.yAxisPadding) as number;\n    }\n}\n","import { BoxPlot as BoxPlotNeo } from '../../charts/box-plot';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType, NumberFormatFn } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\n\nexport class BoxPlot extends CoordinateGridMixinExt(\n    ColorMixinExt(MarginMixinExt(BaseMixinExt(BoxPlotNeo)))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the numerical format of the boxplot median, whiskers and quartile labels. Defaults\n     * to integer formatting.\n     * @example\n     * // format ticks to 2 decimal places\n     * chart.tickFormat(d3.format('.2f'));\n     */\n    public tickFormat(): NumberFormatFn;\n    public tickFormat(tickFormat: NumberFormatFn): this;\n    public tickFormat(tickFormat?) {\n        if (!arguments.length) {\n            return this._conf.tickFormat;\n        }\n        this.configure({ tickFormat: tickFormat });\n        return this;\n    }\n\n    /**\n     * Get or set whether individual data points will be rendered.\n     * @example\n     * // Enable rendering of individual data points\n     * chart.renderDataPoints(true);\n     * @param [show=false]\n     */\n    public renderDataPoints(): boolean;\n    public renderDataPoints(show: boolean): this;\n    public renderDataPoints(show?) {\n        if (!arguments.length) {\n            return this._conf.renderDataPoints;\n        }\n        this.configure({ renderDataPoints: show });\n        return this;\n    }\n\n    /**\n     * Get or set the opacity when rendering data.\n     * @example\n     * // If individual data points are rendered increase the opacity.\n     * chart.dataOpacity(0.7);\n     * @param [opacity=0.3]\n     */\n    public dataOpacity(): number;\n    public dataOpacity(opacity: number): this;\n    public dataOpacity(opacity?) {\n        if (!arguments.length) {\n            return this._conf.dataOpacity;\n        }\n        this.configure({ dataOpacity: opacity });\n        return this;\n    }\n\n    /**\n     * Get or set the amount of padding to add, in pixel coordinates, to the top and\n     * bottom of the chart to accommodate box/whisker labels.\n     * @example\n     * // allow more space for a bigger whisker font\n     * chart.yRangePadding(12);\n     * @param [yRangePadding = 8]\n     */\n    public yRangePadding(): number;\n    public yRangePadding(yRangePadding: number): this;\n    public yRangePadding(yRangePadding?) {\n        if (!arguments.length) {\n            return this._conf.yRangePadding;\n        }\n        this.configure({ yRangePadding: yRangePadding });\n        return this;\n    }\n\n    /**\n     * Get or set the portion of the width of the box to show data points.\n     * @example\n     * // If individual data points are rendered increase the data box.\n     * chart.dataWidthPortion(0.9);\n     * @param [percentage=0.8]\n     */\n    public dataWidthPortion(): number;\n    public dataWidthPortion(percentage: number): this;\n    public dataWidthPortion(percentage?) {\n        if (!arguments.length) {\n            return this._conf.dataWidthPortion;\n        }\n        this.configure({ dataWidthPortion: percentage });\n        return this;\n    }\n\n    /**\n     * Get or set whether outliers will be rendered.\n     * @example\n     * // Disable rendering of outliers\n     * chart.showOutliers(false);\n     * @param [show=true]\n     */\n    public showOutliers(): boolean;\n    public showOutliers(show: boolean): this;\n    public showOutliers(show?) {\n        if (!arguments.length) {\n            return this._conf.showOutliers;\n        }\n        this.configure({ showOutliers: show });\n        return this;\n    }\n\n    /**\n     * Get or set whether outliers will be drawn bold.\n     * @example\n     * // If outliers are rendered display as bold\n     * chart.boldOutlier(true);\n     * @param [show=false]\n     */\n    public boldOutlier(): boolean;\n    public boldOutlier(show: boolean): this;\n    public boldOutlier(show?) {\n        if (!arguments.length) {\n            return this._conf.boldOutlier;\n        }\n        this.configure({ boldOutlier: show });\n        return this;\n    }\n}\n\nexport const boxPlot = (parent, chartGroup) => new BoxPlot(parent, chartGroup);\n","import { BubbleMixin } from '../base/bubble-mixin';\nimport { CoordinateGridMixin } from '../base/coordinate-grid-mixin';\nimport { transition } from '../core/core';\nimport {\n    BaseAccessor,\n    ChartGroupType,\n    ChartParentType,\n    DCBrushSelection,\n    SVGGElementSelection,\n} from '../core/types';\nimport { adaptHandler } from '../core/d3compat';\n\n/**\n * A concrete implementation of a general purpose bubble chart that allows data visualization using the\n * following dimensions:\n * - x axis position\n * - y axis position\n * - bubble radius\n * - color\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/vc/index.html | US Venture Capital Landscape 2011}\n */\nexport class BubbleChart extends BubbleMixin(CoordinateGridMixin) {\n    private _bubbleLocator: BaseAccessor<string>;\n\n    /**\n     * Create a Bubble Chart.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a bubble chart under #chart-container1 element using the default global chart group\n     * var bubbleChart1 = new BubbleChart('#chart-container1');\n     * // create a bubble chart under #chart-container2 element using chart group A\n     * var bubbleChart2 = new BubbleChart('#chart-container2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            // TODO: move following two to Mixin, BubbleOverlay has exactly same setup\n            transitionDuration: 750,\n            transitionDelay: 0,\n        });\n\n        this._bubbleLocator = d => `translate(${this._bubbleX(d)},${this._bubbleY(d)})`;\n    }\n\n    /**\n     * hidden\n     */\n    public plotData(): void {\n        this.calculateRadiusDomain();\n        this.r().range([this.MIN_RADIUS, this._xAxisLength() * this._conf.maxBubbleRelativeSize]);\n\n        const data = this.data();\n        let bubbleG: SVGGElementSelection = this.chartBodyG()\n            .selectAll(`g.${this.BUBBLE_NODE_CLASS}`)\n            .data(data, d => d.key);\n        if (this._conf.sortBubbleSize) {\n            // update dom order based on sort\n            bubbleG.order();\n        }\n\n        this._removeNodes(bubbleG);\n\n        bubbleG = this._renderNodes(bubbleG);\n\n        this._updateNodes(bubbleG);\n\n        this.fadeDeselectedArea(this.filter());\n    }\n\n    private _renderNodes(bubbleG: SVGGElementSelection): SVGGElementSelection {\n        const bubbleGEnter = bubbleG.enter().append('g');\n\n        bubbleGEnter\n            .attr('class', this.BUBBLE_NODE_CLASS)\n            .attr('transform', d => this._bubbleLocator(d))\n            .append('circle')\n            .attr('class', (d, i) => `${this.BUBBLE_CLASS} _${i}`)\n            .on(\n                'click',\n                adaptHandler(d => this.onClick(d))\n            )\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .attr('r', 0);\n\n        bubbleG = bubbleGEnter.merge(bubbleG);\n\n        transition(bubbleG, this._conf.transitionDuration, this._conf.transitionDelay)\n            .select(`circle.${this.BUBBLE_CLASS}`)\n            .attr('r', d => this.bubbleR(d))\n            .attr('opacity', d => (this.bubbleR(d) > 0 ? 1 : 0));\n\n        this._doRenderLabel(bubbleGEnter);\n\n        this._doRenderTitles(bubbleGEnter);\n\n        return bubbleG;\n    }\n\n    private _updateNodes(bubbleG: SVGGElementSelection): void {\n        transition(bubbleG, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('transform', d => this._bubbleLocator(d))\n            .select(`circle.${this.BUBBLE_CLASS}`)\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .attr('r', d => this.bubbleR(d))\n            .attr('opacity', d => (this.bubbleR(d) > 0 ? 1 : 0));\n\n        this.doUpdateLabels(bubbleG);\n        this.doUpdateTitles(bubbleG);\n    }\n\n    private _removeNodes(bubbleG: SVGGElementSelection): void {\n        bubbleG.exit().remove();\n    }\n\n    private _bubbleX(d): number {\n        let x = this.x()(this._conf.keyAccessor(d));\n        if (isNaN(x) || !isFinite(x)) {\n            x = 0;\n        }\n        return x;\n    }\n\n    private _bubbleY(d): number {\n        let y = this.y()(d._value);\n        if (isNaN(y) || !isFinite(y)) {\n            y = 0;\n        }\n        return y;\n    }\n\n    /**\n     * @hidden\n     */\n    public renderBrush(): void {\n        // override default x axis brush from parent chart\n    }\n\n    /**\n     * @hidden\n     */\n    public redrawBrush(brushSelection: DCBrushSelection, doTransition: boolean): void {\n        // override default x axis brush from parent chart\n        this.fadeDeselectedArea(brushSelection);\n    }\n}\n","import { BubbleChart as BubbleChartNeo } from '../../charts/bubble-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\nimport { BubbleMixinExt } from '../base/bubble-mixin';\n\nexport class BubbleChart extends BubbleMixinExt(\n    // @ts-ignore\n    CoordinateGridMixinExt(ColorMixinExt(MarginMixinExt(BaseMixinExt(BubbleChartNeo))))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n}\n\nexport const bubbleChart = (parent, chartGroup) => new BubbleChart(parent, chartGroup);\n","import { mouse, Selection } from 'd3-selection';\n\nimport { BaseMixin } from '../base/base-mixin';\nimport { BubbleMixin } from '../base/bubble-mixin';\nimport { transition } from '../core/core';\nimport { constants } from '../core/constants';\nimport { nameToId } from '../core/utils';\nimport { ColorMixin } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType, SVGGElementSelection } from '../core/types';\nimport { IBubbleOverlayConf } from './i-bubble-overlay-conf';\nimport { adaptHandler } from '../core/d3compat';\n\nconst BUBBLE_OVERLAY_CLASS = 'bubble-overlay';\nconst BUBBLE_NODE_CLASS = 'node';\nconst BUBBLE_CLASS = 'bubble';\n\n/**\n * The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay\n * chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the\n * typical x and y positioning while retaining the capability to visualize data using bubble radius\n * and coloring.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/crime/index.html | Canadian City Crime Stats}\n */\nexport class BubbleOverlay extends BubbleMixin(ColorMixin(BaseMixin)) {\n    /**\n     * @hidden\n     */\n    public _conf: IBubbleOverlayConf;\n\n    private _g: Selection<SVGGElement, any, any, any>;\n\n    /**\n     * Create a Bubble Overlay.\n     * Unlike other dc charts this chart will not generate a svg\n     * element; therefore the bubble overlay chart will not work if svg is not explicitly set.\n     * If the underlying image is a bitmap, then an empty svg will need to be created on top of the image.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a bubble overlay chart on top of the '#chart-container1 svg' element using the default global chart group\n     * var bubbleChart1 = new BubbleOverlay('#chart-container1').svg(d3.select('#chart-container1 svg'));\n     * // create a bubble overlay chart on top of the '#chart-container2 svg' element using chart group A\n     * var bubbleChart2 = new BubbleOverlay('#chart-container2', 'chartGroupA').svg(d3.select('#chart-container2 svg'));\n     * ```\n     *\n     * @see {@link BaseMixin.constructor}\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            points: [],\n        });\n\n        this._g = undefined;\n\n        this.configure({\n            // TODO: move following two to Mixin, BubbleChart has exactly same setup\n            transitionDuration: 750,\n            transitionDelay: 0,\n            radiusValueAccessor: d => d.value,\n        });\n    }\n\n    /**\n     * @see {@link BaseMixin.configure}\n     */\n    public configure(conf: IBubbleOverlayConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    /**\n     * @see {@link BaseMixin.conf}\n     */\n    public conf(): IBubbleOverlayConf {\n        return this._conf;\n    }\n\n    /**\n     * Usually generating an SVG Element is handled handled by dc internally.\n     * This chart, however, needs an SVG Element to be passed explicitly.\n     *\n     * @example\n     * ```\n     *   const caChart = new dc.BubbleOverlay(\"#ca-chart\").svg(d3.select(\"#ca-chart svg\"));\n     * ```\n     */\n    public svg(): Selection<SVGElement, any, any, any>;\n    public svg(svgElement): this;\n    public svg(svgElement?) {\n        if (!arguments.length) {\n            return super.svg();\n        }\n        super.svg(svgElement);\n        return this;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _doRender(): this {\n        this._g = this._initOverlayG();\n\n        this.r().range([this.MIN_RADIUS, this.width() * this._conf.maxBubbleRelativeSize]);\n\n        this._initializeBubbles();\n\n        this.fadeDeselectedArea(this.filter());\n\n        return this;\n    }\n\n    private _initOverlayG(): Selection<SVGGElement, any, any, any> {\n        this._g = this.select<SVGGElement>(`g.${BUBBLE_OVERLAY_CLASS}`);\n        if (this._g.empty()) {\n            this._g = this.svg().append('g').attr('class', BUBBLE_OVERLAY_CLASS);\n        }\n        return this._g;\n    }\n\n    private _initializeBubbles() {\n        const data = this._mapData();\n        this.calculateRadiusDomain();\n\n        this._conf.points.forEach(point => {\n            const nodeG = this._getNodeG(point, data);\n\n            let circle = nodeG.select(`circle.${BUBBLE_CLASS}`);\n\n            if (circle.empty()) {\n                circle = nodeG\n                    .append('circle')\n                    .attr('class', BUBBLE_CLASS)\n                    .attr('r', 0)\n                    .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n                    .on(\n                        'click',\n                        adaptHandler(d => this.onClick(d))\n                    );\n            }\n\n            transition(circle, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n                'r',\n                d => this.bubbleR(d)\n            );\n\n            this._doRenderLabel(nodeG);\n\n            this._doRenderTitles(nodeG);\n        });\n    }\n\n    private _mapData() {\n        const data = {};\n        this.data().forEach(datum => {\n            data[this._conf.keyAccessor(datum)] = datum;\n        });\n        return data;\n    }\n\n    private _getNodeG(point: { name: string; x: number; y: number }, data): SVGGElementSelection {\n        const bubbleNodeClass = `${BUBBLE_NODE_CLASS} ${nameToId(point.name)}`;\n\n        let nodeG: SVGGElementSelection = this._g.select(`g.${nameToId(point.name)}`);\n\n        if (nodeG.empty()) {\n            nodeG = this._g\n                .append('g')\n                .attr('class', bubbleNodeClass)\n                .attr('transform', `translate(${point.x},${point.y})`);\n        }\n\n        nodeG.datum(data[point.name]);\n\n        return nodeG;\n    }\n\n    /**\n     * @hidden\n     */\n    protected _doRedraw(): this {\n        this._updateBubbles();\n\n        this.fadeDeselectedArea(this.filter());\n\n        return this;\n    }\n\n    private _updateBubbles(): void {\n        const data = this._mapData();\n        this.calculateRadiusDomain();\n\n        this._conf.points.forEach(point => {\n            const nodeG = this._getNodeG(point, data);\n\n            const circle = nodeG.select(`circle.${BUBBLE_CLASS}`);\n\n            transition(circle, this._conf.transitionDuration, this._conf.transitionDelay)\n                .attr('r', d => this.bubbleR(d))\n                .attr('fill', (d, i) => this._colorHelper.getColor(d, i));\n\n            this.doUpdateLabels(nodeG);\n\n            this.doUpdateTitles(nodeG);\n        });\n    }\n\n    /**\n     * While creating a new chart, sometimes it may be tricky to find intended coordinates\n     * of the bubbles.\n     * Calling this method with `true` will enable displaying x/y coordinates on mouse move.\n     *\n     * It is intended to be used only during development.\n     */\n    public debug(flag: boolean = false): this {\n        if (flag) {\n            let debugG: SVGGElementSelection = this.select(`g.${constants.DEBUG_GROUP_CLASS}`);\n\n            if (debugG.empty()) {\n                debugG = this.svg().append('g').attr('class', constants.DEBUG_GROUP_CLASS);\n            }\n\n            const debugText = debugG.append('text').attr('x', 10).attr('y', 20);\n\n            debugG\n                .append('rect')\n                .attr('width', this.width())\n                .attr('height', this.height())\n                .on('mousemove', () => {\n                    const position = mouse(debugG.node());\n                    const msg = `${position[0]}, ${position[1]}`;\n                    debugText.text(msg);\n                });\n        } else {\n            this.selectAll('.debug').remove();\n        }\n\n        return this;\n    }\n}\n","import { BubbleOverlay as BubbleOverlayNeo } from '../../charts/bubble-overlay';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\nimport { BubbleMixinExt } from '../base/bubble-mixin';\n\nexport class BubbleOverlay extends BubbleMixinExt(ColorMixinExt(BaseMixinExt(BubbleOverlayNeo))) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * **mandatory**\n     *\n     * Set up a data point on the overlay. The name of a data point should match a specific 'key' among\n     * data groups generated using keyAccessor.  If a match is found (point name <-> data group key)\n     * then a bubble will be generated at the position specified by the function. x and y\n     * value specified here are relative to the underlying svg.\n     */\n    public point(name: string, x: number, y: number): this {\n        this._conf.points.push({ name, x, y });\n        return this;\n    }\n}\n\nexport const bubbleOverlay = (parent, chartGroup) => new BubbleOverlay(parent, chartGroup);\n","import { select, Selection } from 'd3-selection';\n\nimport { events } from '../core/events';\nimport { BaseMixin } from '../base/base-mixin';\nimport { uniqueId } from '../core/utils';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { ICboxMenuConf } from './i-cbox-menu-conf';\nimport { ascending } from 'd3-array';\nimport { adaptHandler } from '../core/d3compat';\n\nconst GROUP_CSS_CLASS = 'dc-cbox-group';\nconst ITEM_CSS_CLASS = 'dc-cbox-item';\n\n/**\n * The CboxMenu is a simple widget designed to filter a dimension by\n * selecting option(s) from a set of HTML `<input />` elements. The menu can be\n * made into a set of radio buttons (single select) or checkboxes (multiple).\n */\nexport class CboxMenu extends BaseMixin {\n    protected _conf: ICboxMenuConf;\n\n    private _cbox: Selection<HTMLElement, any, HTMLElement, any>;\n    private _uniqueId: number;\n\n    /**\n     * Create a Cbox Menu.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a cboxMenu under #cbox-container using the default global chart group\n     * const cbox = new CboxMenu('#cbox-container')\n     *                .dimension(states)\n     *                .group(stateGroup);\n     * // the option text can be set via the title() function\n     * // by default the option text is '`key`: `value`'\n     * cbox.title(function (d){\n     *     return 'STATE: ' + d.key;\n     * })\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            multiple: false,\n            promptText: 'Select all',\n            promptValue: null,\n            filterDisplayed: d => d._value > 0,\n            order: (a, b) => ascending(this._conf.keyAccessor(a), this._conf.keyAccessor(b)),\n        });\n\n        this._cbox = undefined;\n\n        this._uniqueId = uniqueId();\n    }\n\n    public configure(conf: ICboxMenuConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): ICboxMenuConf {\n        return this._conf;\n    }\n\n    public data() {\n        return super.data().filter(this._conf.filterDisplayed);\n    }\n\n    protected _doRender(): this {\n        return this._doRedraw();\n    }\n\n    protected _doRedraw(): this {\n        this.select('ul').remove();\n        this._cbox = this.root().append('ul').classed(GROUP_CSS_CLASS, true);\n        this._renderOptions();\n\n        if (this.hasFilter() && this._conf.multiple) {\n            this._cbox\n                .selectAll('input')\n                // adding `false` avoids failing test cases in phantomjs\n                .property(\n                    'checked',\n                    d =>\n                        (d && this.filters().indexOf(String(this._conf.keyAccessor(d))) >= 0) ||\n                        false\n                );\n        } else if (this.hasFilter()) {\n            this._cbox.selectAll('input').property('checked', d => {\n                if (!d) {\n                    return false;\n                }\n                return this._conf.keyAccessor(d) === this.filter();\n            });\n        }\n        return this;\n    }\n\n    private _renderOptions() {\n        const inputType = this._conf.multiple ? 'checkbox' : 'radio';\n\n        let options: Selection<HTMLLIElement, unknown, HTMLElement, any> = this._cbox\n            .selectAll<HTMLLIElement, any>(`li.${ITEM_CSS_CLASS}`)\n            .data(this.data(), d => this._conf.keyAccessor(d));\n\n        options.exit().remove();\n\n        options = options.enter().append('li').classed(ITEM_CSS_CLASS, true).merge(options);\n\n        options\n            .append('input')\n            .attr('type', inputType)\n            .attr('value', d => this._conf.keyAccessor(d))\n            .attr('name', `domain_${this._uniqueId}`)\n            .attr('id', (d, i) => `input_${this._uniqueId}_${i}`);\n        options\n            .append('label')\n            .attr('for', (d, i) => `input_${this._uniqueId}_${i}`)\n            .text(this._conf.title);\n\n        const chart = this;\n        // 'all' option\n        if (this._conf.multiple) {\n            this._cbox\n                .append('li')\n                .append('input')\n                .attr('type', 'reset')\n                .text(this._conf.promptText)\n                .on(\n                    'click',\n                    adaptHandler(function (d, evt) {\n                        return chart._onChange(d, evt, this);\n                    })\n                );\n        } else {\n            const li = this._cbox.append('li');\n            li.append('input')\n                .attr('type', inputType)\n                .attr('value', this._conf.promptValue)\n                .attr('name', `domain_${this._uniqueId}`)\n                .attr('id', (d, i) => `input_${this._uniqueId}_all`)\n                .property('checked', true);\n            li.append('label')\n                .attr('for', (d, i) => `input_${this._uniqueId}_all`)\n                .text(this._conf.promptText);\n        }\n\n        this._cbox.selectAll(`li.${ITEM_CSS_CLASS}`).sort(this._conf.order);\n\n        this._cbox.on(\n            'change',\n            adaptHandler(function (d, evt) {\n                return chart._onChange(d, evt, this);\n            })\n        );\n        return options;\n    }\n\n    private _onChange(d, evt, element: HTMLElement) {\n        let values;\n        const target = select(evt.target);\n        let options: Selection<HTMLInputElement, unknown, HTMLElement, unknown>;\n\n        if (!target.datum()) {\n            values = this._conf.promptValue || null;\n        } else {\n            options = select(element)\n                .selectAll<HTMLInputElement, any>('input')\n                .filter(function (o) {\n                    if (o) {\n                        return this.checked;\n                    }\n                });\n            values = options.nodes().map(option => option.value);\n            // check if only prompt option is selected\n            if (!this._conf.multiple && values.length === 1) {\n                values = values[0];\n            }\n        }\n        this.onChange(values);\n    }\n\n    // TODO: come back for better typing, probably generics\n    public onChange(val) {\n        if (val && this._conf.multiple) {\n            this.replaceFilter([val]);\n        } else if (val) {\n            this.replaceFilter(val);\n        } else {\n            this.filterAll();\n        }\n        events.trigger(() => {\n            this.redrawGroup();\n        });\n    }\n}\n","import { CboxMenu as CboxMenuNeo } from '../../charts/cbox-menu';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType, CompareFn } from '../../core/types';\n\nexport class CboxMenu extends BaseMixinExt(CboxMenuNeo) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * cbox menu. By default options are ordered by the group key in ascending\n     * order.\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     */\n    public order(): CompareFn;\n    public order(order: CompareFn): this;\n    public order(order?) {\n        if (!arguments.length) {\n            return this._conf.order;\n        }\n        this.configure({ order: order });\n        return this;\n    }\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @param [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     */\n    public promptText(): string;\n    public promptText(promptText: string): this;\n    public promptText(promptText?) {\n        if (!arguments.length) {\n            return this._conf.promptText;\n        }\n        this.configure({ promptText: promptText });\n        return this;\n    }\n\n    /**\n     * Get or set the function that filters options prior to display. By default only options\n     * with a value > 0 are displayed.\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     */\n    public filterDisplayed(): (d) => boolean;\n    public filterDisplayed(filterDisplayed: (d) => boolean): this;\n    public filterDisplayed(filterDisplayed?) {\n        if (!arguments.length) {\n            return this._conf.filterDisplayed;\n        }\n        this.configure({ filterDisplayed: filterDisplayed });\n        return this;\n    }\n\n    /**\n     * Controls the type of input element. Setting it to true converts\n     * the HTML `input` tags from radio buttons to checkboxes.\n     * @param [multiple=false]\n     * @example\n     * chart.multiple(true);\n     */\n    public multiple(): boolean;\n    public multiple(multiple: boolean): this;\n    public multiple(multiple?) {\n        if (!arguments.length) {\n            return this._conf.multiple;\n        }\n        this.configure({ multiple: multiple });\n        return this;\n    }\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     */\n    public promptValue();\n    public promptValue(promptValue): this;\n    public promptValue(promptValue?) {\n        if (!arguments.length) {\n            return this._conf.promptValue;\n        }\n        this.configure({ promptValue: promptValue });\n\n        return this;\n    }\n}\n\nexport const cboxMenu = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new CboxMenu(parent, chartGroup);\n","import { max, min } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\nimport { Axis, axisRight } from 'd3-axis';\n\nimport { add, subtract } from '../core/utils';\nimport { CoordinateGridMixin } from '../base/coordinate-grid-mixin';\nimport {\n    ChartGroupType,\n    ChartParentType,\n    Margins,\n    MinimalXYScale,\n    SVGGElementSelection,\n} from '../core/types';\nimport { ICompositeChartConf } from './i-composite-chart-conf';\n\nconst SUB_CHART_CLASS = 'sub';\nconst DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;\n\n/**\n * Composite charts are a special kind of chart that render multiple charts on the same Coordinate\n * Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to\n * achieve some quite flexible charting effects.\n */\nexport class CompositeChart extends CoordinateGridMixin {\n    public _conf: ICompositeChartConf;\n\n    private _children: CoordinateGridMixin[];\n    private _childOptions; // TODO: it is conf for children, revisit after creating concept of conf\n    private _alignYAxes: boolean;\n    private _rightYAxis: Axis<any>;\n    private _rightYAxisLabel: string;\n    private _rightYAxisLabelPadding: number;\n    private _rightY: MinimalXYScale;\n    private _rightAxisGridLines: boolean;\n\n    /**\n     * Create a Composite Chart.\n     *\n     * TODO update example\n     * @example\n     * ```\n     * // create a composite chart under #chart-container1 element using the default global chart group\n     * var compositeChart1 = new CompositeChart('#chart-container1');\n     * // create a composite chart under #chart-container2 element using chart group A\n     * var compositeChart2 = new CompositeChart('#chart-container2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            transitionDuration: 500,\n            transitionDelay: 0,\n            shareColors: false,\n            shareTitle: true,\n        });\n\n        this._children = [];\n\n        this._childOptions = {};\n\n        this._alignYAxes = false; // TODO: the setter calls rescale, check in detail later\n\n        this._rightYAxis = axisRight(undefined);\n        this._rightYAxisLabel = undefined;\n        this._rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING;\n        this._rightY = undefined;\n        this._rightAxisGridLines = false;\n\n        this._mandatoryAttributes([]);\n\n        this.on('filtered.dcjs-composite-chart', chart => {\n            // Propagate the filters onto the children\n            // Notice that on children the call is .replaceFilter and not .filter\n            //   the reason is that _chart.filter() returns the entire current set of filters not just the last added one\n            this._children.forEach(child => {\n                // Go defensive - the shareFilter option may have already set the correct filters\n                if (child.filter() !== this.filter()) {\n                    child.replaceFilter(this.filter());\n                }\n            });\n        });\n    }\n\n    public configure(conf: ICompositeChartConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): ICompositeChartConf {\n        return this._conf;\n    }\n\n    public _generateG(): SVGGElementSelection {\n        const g = super._generateG();\n\n        for (let i = 0; i < this._children.length; ++i) {\n            const child: CoordinateGridMixin = this._children[i];\n\n            this._generateChildG(child, i);\n\n            if (!child.dataProvider().conf().dimension) {\n                child.dataProvider().configure({ dimension: this.dataProvider().conf().dimension });\n            }\n            if (!child.dataProvider().conf().group) {\n                child.dataProvider().configure({ group: this.dataProvider().conf().group });\n            }\n            child\n                .dataProvider()\n                .configure({ shareFilters: this.dataProvider().conf().shareFilters });\n\n            child.configure({\n                xUnits: this._conf.xUnits,\n                transitionDuration: this._conf.transitionDuration,\n                transitionDelay: this._conf.transitionDelay,\n                renderTitle: this._conf.renderTitle,\n                elasticX: this._conf.elasticX,\n            });\n\n            child.chartGroup(this.chartGroup());\n            child.svg(this.svg());\n            child.configure({\n                parentBrushOn: this._conf.brushOn,\n                brushOn: false,\n            });\n        }\n\n        return g;\n    }\n\n    public rescale() {\n        super.rescale();\n\n        this._children.forEach(child => {\n            child.rescale();\n        });\n\n        return this;\n    }\n\n    public resizing(): boolean;\n    public resizing(resizing: boolean): this;\n    public resizing(resizing?) {\n        if (!arguments.length) {\n            return super.resizing();\n        }\n        super.resizing(resizing);\n\n        this._children.forEach(child => {\n            child.resizing(resizing);\n        });\n\n        return this;\n    }\n\n    protected _prepareYAxis(): void {\n        const left = this._leftYAxisChildren().length !== 0;\n        const right = this._rightYAxisChildren().length !== 0;\n        const ranges = this._calculateYAxisRanges(left, right);\n\n        if (left) {\n            this._prepareLeftYAxis(ranges);\n        }\n        if (right) {\n            this._prepareRightYAxis(ranges);\n        }\n\n        if (this._leftYAxisChildren().length > 0 && !this._rightAxisGridLines) {\n            this._renderHorizontalGridLinesForAxis(this.g(), this.y(), this.yAxis());\n        } else if (this._rightYAxisChildren().length > 0) {\n            this._renderHorizontalGridLinesForAxis(this.g(), this._rightY, this._rightYAxis);\n        }\n    }\n\n    public _renderYAxis() {\n        if (this._leftYAxisChildren().length !== 0) {\n            this._renderYAxisAt('y', this.yAxis(), this.margins().left);\n            this._renderYAxisLabel('y', this.yAxisLabel(), -90);\n        }\n\n        if (this._rightYAxisChildren().length !== 0) {\n            this._renderYAxisAt('yr', this.rightYAxis(), this.width() - this.margins().right);\n            this._renderYAxisLabel(\n                'yr',\n                this.rightYAxisLabel(),\n                90,\n                this.width() - this._rightYAxisLabelPadding\n            );\n        }\n    }\n\n    public _calculateYAxisRanges(left: boolean, right: boolean) {\n        let lyAxisMin;\n        let lyAxisMax;\n        let ryAxisMin;\n        let ryAxisMax;\n        let ranges;\n\n        if (left) {\n            lyAxisMin = this._yAxisMin();\n            lyAxisMax = this._yAxisMax();\n        }\n\n        if (right) {\n            ryAxisMin = this._rightYAxisMin();\n            ryAxisMax = this._rightYAxisMax();\n        }\n\n        if (this.alignYAxes() && left && right) {\n            ranges = this._alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax);\n        }\n\n        return ranges || { lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax };\n    }\n\n    public _alignYAxisRanges(lyAxisMin, lyAxisMax, ryAxisMin, ryAxisMax) {\n        // since the two series will share a zero, each Y is just a multiple\n        // of the other. and the ratio should be the ratio of the ranges of the\n        // input data, so that they come out the same height. so we just min/max\n\n        // note: both ranges already include zero due to the stack mixin (#667)\n        // if #667 changes, we can reconsider whether we want data height or\n        // height from zero to be equal. and it will be possible for the axes\n        // to be aligned but not visible.\n        const extentRatio = (ryAxisMax - ryAxisMin) / (lyAxisMax - lyAxisMin);\n\n        return {\n            lyAxisMin: Math.min(lyAxisMin, ryAxisMin / extentRatio),\n            lyAxisMax: Math.max(lyAxisMax, ryAxisMax / extentRatio),\n            ryAxisMin: Math.min(ryAxisMin, lyAxisMin * extentRatio),\n            ryAxisMax: Math.max(ryAxisMax, lyAxisMax * extentRatio),\n        };\n    }\n\n    public _prepareRightYAxis(ranges) {\n        const needDomain = this.rightY() === undefined || this._conf.elasticY;\n        const needRange = needDomain || this.resizing();\n\n        if (this.rightY() === undefined) {\n            this.rightY(scaleLinear());\n        }\n        if (needDomain) {\n            this.rightY().domain([ranges.ryAxisMin, ranges.ryAxisMax]);\n        }\n        if (needRange) {\n            this.rightY().rangeRound([this._yAxisHeight(), 0]);\n        }\n\n        this.rightY().range([this._yAxisHeight(), 0]);\n        this.rightYAxis(this.rightYAxis().scale(this.rightY()));\n\n        // In D3v4 create a RightAxis\n        // _chart.rightYAxis().orient('right');\n    }\n\n    public _prepareLeftYAxis(ranges) {\n        const needDomain = this.y() === undefined || this._conf.elasticY;\n        const needRange = needDomain || this.resizing();\n\n        if (this.y() === undefined) {\n            this.y(scaleLinear());\n        }\n        if (needDomain) {\n            this.y().domain([ranges.lyAxisMin, ranges.lyAxisMax]);\n        }\n        if (needRange) {\n            this.y().rangeRound([this._yAxisHeight(), 0]);\n        }\n\n        this.y().range([this._yAxisHeight(), 0]);\n        this.yAxis(this.yAxis().scale(this.y()));\n\n        // In D3v4 create a LeftAxis\n        // _chart.yAxis().orient('left');\n    }\n\n    public _generateChildG(child, i) {\n        child._generateG(this.g());\n        child.g().attr('class', `${SUB_CHART_CLASS} _${i}`);\n    }\n\n    public plotData() {\n        for (let i = 0; i < this._children.length; ++i) {\n            const child = this._children[i];\n\n            if (!child.g()) {\n                this._generateChildG(child, i);\n            }\n\n            if (this._conf.shareColors) {\n                child.colorHelper(this.colorHelper().share(child.conf().colorAccessor));\n            }\n\n            child.x(this.x());\n\n            child.xAxis(this.xAxis());\n\n            if (child.conf().useRightYAxis) {\n                child.y(this.rightY());\n                child.yAxis(this.rightYAxis());\n            } else {\n                child.y(this.y());\n                child.yAxis(this.yAxis());\n            }\n\n            child.plotData();\n\n            child._activateRenderlets();\n        }\n    }\n\n    /**\n     * Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the\n     * default behavior. This option is only respected when subcharts with both left and right y-axes\n     * are present.\n     */\n    public useRightAxisGridLines();\n    public useRightAxisGridLines(useRightAxisGridLines): this;\n    public useRightAxisGridLines(useRightAxisGridLines?) {\n        if (!arguments) {\n            return this._rightAxisGridLines;\n        }\n\n        this._rightAxisGridLines = useRightAxisGridLines;\n        return this;\n    }\n\n    /**\n     * Get or set chart-specific options for all child charts. This is equivalent to calling\n     * {@link BaseMixin.options | .options} on each child chart.\n     */\n    public childOptions();\n    public childOptions(childOptions): this;\n    public childOptions(childOptions?) {\n        if (!arguments.length) {\n            return this._childOptions;\n        }\n        this._childOptions = childOptions;\n        this._children.forEach(child => {\n            child.options(this._childOptions);\n        });\n        return this;\n    }\n\n    public fadeDeselectedArea(brushSelection) {\n        if (this._conf.brushOn) {\n            for (let i = 0; i < this._children.length; ++i) {\n                const child = this._children[i];\n                child.fadeDeselectedArea(brushSelection);\n            }\n        }\n    }\n\n    /**\n     * Set or get the right y axis label.\n     */\n    public rightYAxisLabel(): string;\n    public rightYAxisLabel(rightYAxisLabel: string, padding?: number): this;\n    public rightYAxisLabel(rightYAxisLabel?, padding?) {\n        if (!arguments.length) {\n            return this._rightYAxisLabel;\n        }\n        this._rightYAxisLabel = rightYAxisLabel;\n        this.margins().right -= this._rightYAxisLabelPadding;\n        this._rightYAxisLabelPadding =\n            padding === undefined ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;\n        this.margins().right += this._rightYAxisLabelPadding;\n        return this;\n    }\n\n    /**\n     * Combine the given charts into one single composite coordinate grid chart.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * moveChart.compose([\n     *     // when creating sub-chart you need to pass in the parent chart\n     *     new LineChart(moveChart)\n     *         .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used\n     *         .valueAccessor(function (d){return d.value.avg;})\n     *         // most of the normal functions will continue to work in a composed chart\n     *         .renderArea(true)\n     *         .stack(monthlyMoveGroup, function (d){return d.value;})\n     *         .title(function (d){\n     *             var value = d.value.avg?d.value.avg:d.value;\n     *             if(isNaN(value)) value = 0;\n     *             return dateFormat(d.key) + '\\n' + numberFormat(value);\n     *         }),\n     *     new BarChart(moveChart)\n     *         .group(volumeByMonthGroup)\n     *         .centerBar(true)\n     * ]);\n     * ```\n     */\n    public compose(subChartArray: CoordinateGridMixin[]) {\n        this._children = subChartArray;\n        this._children.forEach(child => {\n            child.height(this.height());\n            child.width(this.width());\n            child.margins(this.margins());\n\n            if (this._conf.shareTitle) {\n                child.configure({\n                    title: this._conf.title,\n                });\n            }\n\n            child.options(this._childOptions);\n        });\n        this.rescale();\n        return this;\n    }\n\n    public _setChildrenProperty(prop, value) {\n        this._children.forEach(child => {\n            child[prop](value);\n        });\n    }\n\n    // properties passed through in compose()\n    public height(): number;\n    public height(height: number | (() => number)): this;\n    public height(height?) {\n        if (!arguments.length) {\n            return super.height();\n        }\n        super.height(height);\n        this._setChildrenProperty('height', height);\n        return this;\n    }\n\n    public width(): number;\n    public width(width: number | (() => number)): this;\n    public width(width?) {\n        if (!arguments.length) {\n            return super.width();\n        }\n        super.width(width);\n        this._setChildrenProperty('width', width);\n        return this;\n    }\n\n    public margins(): Margins;\n    public margins(margins: Margins): this;\n    public margins(margins?) {\n        if (!arguments.length) {\n            return super.margins();\n        }\n        super.margins(margins);\n        this._setChildrenProperty('margins', margins);\n        return this;\n    }\n\n    /**\n     * Returns the child charts which are composed into the composite chart.\n     */\n    public children(): CoordinateGridMixin[] {\n        return this._children;\n    }\n\n    /**\n     * Get or set the y scale for the right axis. The right y scale is typically automatically\n     * generated by the chart implementation.\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale}\n     */\n    public rightY(): MinimalXYScale;\n    public rightY(yScale: MinimalXYScale): this;\n    public rightY(yScale?) {\n        if (!arguments.length) {\n            return this._rightY;\n        }\n        this._rightY = yScale;\n        this.rescale();\n        return this;\n    }\n\n    /**\n     * Get or set alignment between left and right y axes. A line connecting '0' on both y axis\n     * will be parallel to x axis. This only has effect when {@link ICoordinateGridMixinConf.elasticY | elasticY} is true.\n     */\n    public alignYAxes(): boolean;\n    public alignYAxes(alignYAxes: boolean): this;\n    public alignYAxes(alignYAxes?) {\n        if (!arguments.length) {\n            return this._alignYAxes;\n        }\n        this._alignYAxes = alignYAxes;\n        this.rescale();\n        return this;\n    }\n\n    public _leftYAxisChildren() {\n        return this._children.filter(child => !child.conf().useRightYAxis);\n    }\n\n    public _rightYAxisChildren() {\n        return this._children.filter(child => child.conf().useRightYAxis);\n    }\n\n    // TODO: revisit all min/max functions after making charts to use Generics\n\n    public _getYAxisMin(charts) {\n        return charts.map(c => c.yAxisMin());\n    }\n\n    public _yAxisMin() {\n        return min(this._getYAxisMin(this._leftYAxisChildren()));\n    }\n\n    public _rightYAxisMin() {\n        return min(this._getYAxisMin(this._rightYAxisChildren()));\n    }\n\n    public _getYAxisMax(charts) {\n        return charts.map(c => c.yAxisMax());\n    }\n\n    public _yAxisMax() {\n        return add(max(this._getYAxisMax(this._leftYAxisChildren())), this._conf.yAxisPadding);\n    }\n\n    public _rightYAxisMax() {\n        return add(max(this._getYAxisMax(this._rightYAxisChildren())), this._conf.yAxisPadding);\n    }\n\n    public _getAllXAxisMinFromChildCharts() {\n        return this._children.map(c => c.xAxisMin());\n    }\n\n    public xAxisMin() {\n        return subtract(\n            min(this._getAllXAxisMinFromChildCharts()),\n            this._conf.xAxisPadding,\n            this._conf.xAxisPaddingUnit\n        );\n    }\n\n    public _getAllXAxisMaxFromChildCharts() {\n        return this._children.map(c => c.xAxisMax());\n    }\n\n    public xAxisMax() {\n        return add(\n            max(this._getAllXAxisMaxFromChildCharts()),\n            this._conf.xAxisPadding,\n            this._conf.xAxisPaddingUnit\n        );\n    }\n\n    public legendables() {\n        return this._children.reduce((items, child) => {\n            if (this._conf.shareColors) {\n                child.colorHelper(this.colorHelper().share(child.conf().colorAccessor));\n            }\n            items.push.apply(items, child.legendables());\n            return items;\n        }, []);\n    }\n\n    public legendHighlight(d): void {\n        for (let j = 0; j < this._children.length; ++j) {\n            const child = this._children[j];\n            child.legendHighlight(d);\n        }\n    }\n\n    public legendReset(d): void {\n        for (let j = 0; j < this._children.length; ++j) {\n            const child = this._children[j];\n            child.legendReset(d);\n        }\n    }\n\n    public legendToggle(): void {\n        console.log('composite should not be getting legendToggle itself');\n    }\n\n    /**\n     * Set or get the right y axis used by the composite chart. This function is most useful when y\n     * axis customization is required. The y axis in dc.js is an instance of a\n     * [d3.axisRight](https://github.com/d3/d3-axis/blob/master/README.md#axisRight) therefore it supports any valid\n     * d3 axis manipulation.\n     *\n     * **Caution**: The right y axis is usually generated internally by dc; resetting it may cause\n     * unexpected results.  Note also that when used as a getter, this function is not chainable: it\n     * returns the axis, not the chart,\n     * {@link https://github.com/dc-js/dc.js/wiki/FAQ#why-does-everything-break-after-a-call-to-xaxis-or-yaxis\n     * so attempting to call chart functions after calling `.yAxis()` will fail}.\n     * @see {@link https://github.com/d3/d3-axis/blob/master/README.md#axisRight}\n     *\n     * @example\n     * ```\n     * // customize y axis tick format\n     * chart.rightYAxis().tickFormat(function (v) {return v + '%';});\n     * // customize y axis tick values\n     * chart.rightYAxis().tickValues([0, 100, 200, 300]);\n     * ```\n     */\n    public rightYAxis(): Axis<any>;\n    public rightYAxis(rightYAxis: Axis<any>): this;\n    public rightYAxis(rightYAxis?) {\n        if (!arguments.length) {\n            return this._rightYAxis;\n        }\n        this._rightYAxis = rightYAxis;\n        return this;\n    }\n\n    public yAxisMin(): number {\n        throw new Error('Not supported for this chart type');\n    }\n\n    public yAxisMax(): number {\n        throw new Error('Not supported for this chart type');\n    }\n}\n","import { Constructor } from '../../core/types';\nimport { CompositeChart as CompositeChartNeo } from '../../charts/composite-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\n\nclass Intermediate extends CoordinateGridMixinExt(\n    ColorMixinExt(MarginMixinExt(BaseMixinExt(CompositeChartNeo)))\n) {}\n\nexport function CompositeChartExt<TBase extends Constructor<Intermediate>>(Base: TBase) {\n    return class extends Base {\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        /**\n         * Get or set color sharing for the chart. If set, the {@link ColorMixin.colors .colors()} value from this chart\n         * will be shared with composed children. Additionally if the child chart implements\n         * Stackable and has not set a custom .colorAccessor, then it will generate a color\n         * specific to its order in the composition.\n         * @param [shareColors=false]\n         */\n        public shareColors(): boolean;\n        public shareColors(shareColors: boolean): this;\n        public shareColors(shareColors?) {\n            if (!arguments.length) {\n                return this._conf.shareColors;\n            }\n            this.configure({ shareColors: shareColors });\n            return this;\n        }\n\n        /**\n         * Get or set title sharing for the chart. If set, the {@link BaseMixin.title .title()} value from\n         * this chart will be shared with composed children.\n         *\n         * Note: currently you must call this before `compose` or the child will still get the parent's\n         * `title` function!\n         * @param [shareTitle=true]\n         */\n        public shareTitle(): boolean;\n        public shareTitle(shareTitle: boolean): this;\n        public shareTitle(shareTitle?) {\n            if (!arguments.length) {\n                return this._conf.shareTitle;\n            }\n            this.configure({ shareTitle: shareTitle });\n            return this;\n        }\n    };\n}\n\nexport const CompositeChart = CompositeChartExt(\n    CoordinateGridMixinExt(ColorMixinExt(MarginMixinExt(BaseMixinExt(CompositeChartNeo))))\n);\n\nexport const compositeChart = (parent, chartGroup) => new CompositeChart(parent, chartGroup);\n","import { format } from 'd3-format';\n\nimport { BaseMixin } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { IDataCountConf } from './i-data-count-conf';\n\n// Keeping these here for now, check if any other charts need same entities\ninterface CF {\n    size(): number;\n}\n\ninterface MinimalGroupAll {\n    value(): number;\n}\n\n/**\n * The data count widget is a simple widget designed to display the number of records selected by the\n * current filters out of the total number of records in the data set. Once created the data count widget\n * will automatically update the text content of child elements with the following classes:\n *\n * * `.total-count` - total number of records\n * * `.filter-count` - number of records matched by the current filters\n *\n * Note: this widget works best for the specific case of showing the number of records out of a\n * total. If you want a more general-purpose numeric display, please use the\n * {@link NumberDisplay} widget instead.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n */\nexport class DataCount extends BaseMixin {\n    protected _conf: IDataCountConf;\n\n    private _crossfilter: CF;\n    private _groupAll: MinimalGroupAll;\n\n    /**\n     * Create a Data Count widget.\n     *\n     * TODO update example\n     * @example\n     * ```\n     * var ndx = crossfilter(data);\n     * var all = ndx.groupAll();\n     *\n     * new DataCount('.dc-data-count')\n     *     .crossfilter(ndx)\n     *     .groupAll(all);\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            formatNumber: format(',d'),\n            html: { some: '', all: '' },\n        });\n\n        this._crossfilter = null;\n        this._groupAll = null;\n\n        this._mandatoryAttributes(['crossfilter', 'groupAll']);\n    }\n\n    public configure(conf: IDataCountConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IDataCountConf {\n        return this._conf;\n    }\n\n    protected _doRender(): this {\n        const tot: number = this.crossfilter().size();\n        const val: number = this.groupAll().value();\n        const all: string = this._conf.formatNumber(tot);\n        const selected: string = this._conf.formatNumber(val);\n\n        if (tot === val && this._conf.html.all !== '') {\n            this.root().html(\n                this._conf.html.all.replace('%total-count', all).replace('%filter-count', selected)\n            );\n        } else if (this._conf.html.some !== '') {\n            this.root().html(\n                this._conf.html.some.replace('%total-count', all).replace('%filter-count', selected)\n            );\n        } else {\n            this.selectAll('.total-count').text(all);\n            this.selectAll('.filter-count').text(selected);\n        }\n        return this;\n    }\n\n    protected _doRedraw(): this {\n        return this._doRender();\n    }\n\n    public crossfilter(): CF;\n    public crossfilter(cf: CF): this;\n    public crossfilter(cf?) {\n        if (!arguments.length) {\n            return this._crossfilter;\n        }\n        this._crossfilter = cf;\n        return this;\n    }\n\n    public groupAll(): MinimalGroupAll;\n    public groupAll(groupAll: MinimalGroupAll): this;\n    public groupAll(groupAll?) {\n        if (!arguments.length) {\n            return this._groupAll;\n        }\n        this._groupAll = groupAll;\n        return this;\n    }\n}\n","import { DataCount as DataCountNeo } from '../../charts/data-count';\nimport { logger } from '../../core/logger';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { DataCountHTMLOptions, NumberFormatFn } from '../../core/types';\n\nexport class DataCount extends BaseMixinExt(DataCountNeo) {\n    public dimension();\n    public dimension(cf): this;\n    public dimension(cf?) {\n        logger.warnOnce(\n            'consider using dataCount.crossfilter instead of dataCount.dimension for clarity'\n        );\n        if (!arguments.length) {\n            return this.crossfilter();\n        }\n        return this.crossfilter(cf);\n    }\n\n    public group();\n    public group(groupAll): this;\n    public group(groupAll?) {\n        logger.warnOnce('consider using dataCount.groupAll instead of dataCount.group for clarity');\n        if (!arguments.length) {\n            return this.groupAll();\n        }\n        return this.groupAll(groupAll);\n    }\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending how many items are\n     * selected. The text `%total-count` will replaced with the total number of records, and the text\n     * `%filter-count` will be replaced with the number of selected records.\n     * - all: HTML template to use if all items are selected\n     * - some: HTML template to use if not all items are selected\n     * @example\n     * counter.html({\n     *      some: '%filter-count out of %total-count records selected',\n     *      all: 'All records selected. Click on charts to apply filters'\n     * })\n     */\n    public html(): DataCountHTMLOptions;\n    public html(options: DataCountHTMLOptions): this;\n    public html(options?) {\n        if (!arguments.length) {\n            return this._conf.html;\n        }\n        if (options.all) {\n            this._conf.html.all = options.all;\n        }\n        if (options.some) {\n            this._conf.html.some = options.some;\n        }\n        return this;\n    }\n\n    /**\n     * Gets or sets an optional function to format the filter count and total count.\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @example\n     * counter.formatNumber(d3.format('.2g'))\n     * @param [formatter=d3.format('.2g')]\n     */\n    public formatNumber(): NumberFormatFn;\n    public formatNumber(formatter: NumberFormatFn): this;\n    public formatNumber(formatter?) {\n        if (!arguments.length) {\n            return this._conf.formatNumber;\n        }\n        this.configure({ formatNumber: formatter });\n        return this;\n    }\n}\n\nexport const dataCount = (parent, chartGroup) => new DataCount(parent, chartGroup);\n","import { ascending } from 'd3-array';\n\nimport { BaseMixin } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { Selection } from 'd3-selection';\nimport { IDataGridConf } from './i-data-grid-conf';\nimport { compatNestHelper } from '../core/d3compat';\n\nconst LABEL_CSS_CLASS = 'dc-grid-label';\nconst ITEM_CSS_CLASS = 'dc-grid-item';\nconst SECTION_CSS_CLASS = 'dc-grid-section dc-grid-group';\nconst GRID_CSS_CLASS = 'dc-grid-top';\n\n/**\n * Data grid is a simple widget designed to list the filtered records, providing\n * a simple way to define how the items are displayed.\n *\n * Examples:\n * - {@link https://dc-js.github.io/dc.js/ep/ | List of members of the european parliament}\n */\nexport class DataGrid extends BaseMixin {\n    protected _conf: IDataGridConf;\n\n    /**\n     * Create a Data Grid.\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            section: null,\n            size: 999, // shouldn't be needed, but you might\n            html: d => `you need to provide an html() handling param:  ${JSON.stringify(d)}`,\n            sortBy: d => d,\n            order: ascending,\n            beginSlice: 0,\n            endSlice: undefined,\n            htmlSection: d =>\n                `<div class='${SECTION_CSS_CLASS}'><h1 class='${LABEL_CSS_CLASS}'>${this._conf.keyAccessor(\n                    d\n                )}</h1></div>`,\n        });\n\n        this._mandatoryAttributes(['dimension', 'section']);\n    }\n\n    public configure(conf: IDataGridConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IDataGridConf {\n        return this._conf;\n    }\n\n    protected _doRender(): this {\n        this.selectAll(`div.${GRID_CSS_CLASS}`).remove();\n\n        this._renderItems(this._renderSections());\n\n        return this;\n    }\n\n    private _renderSections() {\n        const sections: Selection<HTMLDivElement, any, Element, any> = this.root()\n            .selectAll<HTMLDivElement, any>(`div.${GRID_CSS_CLASS}`)\n            .data<any>(this._nestEntries(), d => this._conf.keyAccessor(d));\n\n        const itemSection: Selection<HTMLDivElement, any, Element, any> = sections\n            .enter()\n            .append('div')\n            .attr('class', GRID_CSS_CLASS);\n\n        if (this._conf.htmlSection) {\n            itemSection.html(d => this._conf.htmlSection(d));\n        }\n\n        sections.exit().remove();\n        return itemSection;\n    }\n\n    private _nestEntries() {\n        // TODO: consider creating special DataProvider\n        let entries = this.dataProvider().conf().dimension.top(this._conf.size);\n\n        entries = entries\n            .sort((a, b) => this._conf.order(this._conf.sortBy(a), this._conf.sortBy(b)))\n            .slice(this._conf.beginSlice, this._conf.endSlice);\n\n        return compatNestHelper({\n            key: this._conf.section,\n            sortKeys: this._conf.order,\n            entries,\n        });\n    }\n\n    private _renderItems(sections: Selection<HTMLDivElement, any, Element, any>) {\n        let items: Selection<HTMLDivElement, unknown, HTMLDivElement, any> = sections\n            .order()\n            .selectAll<HTMLDivElement, any>(`div.${ITEM_CSS_CLASS}`)\n            .data(d => d.values);\n\n        items.exit().remove();\n\n        items = items\n            .enter()\n            .append('div')\n            .attr('class', ITEM_CSS_CLASS)\n            .html(d => this._conf.html(d))\n            .merge(items);\n\n        return items;\n    }\n\n    protected _doRedraw(): this {\n        return this._doRender();\n    }\n}\n","import { DataGrid as DataGridNeo } from '../../charts/data-grid';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport {\n    BaseAccessor,\n    ChartGroupType,\n    ChartParentType,\n    CompareFn,\n    GroupingFn,\n} from '../../core/types';\nimport { logger } from '../core/logger';\n\n// @ts-ignore, remove after group method is moved here\nexport class DataGrid extends BaseMixinExt(DataGridNeo) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the section function for the data grid. The section function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into sections.\n     *\n     * Do not pass in a crossfilter section as this will not work.\n     * @example\n     * // section rows by the value of their field\n     * chart\n     *     .section(function(d) { return d.field; })\n     */\n    public section(): GroupingFn;\n    public section(section: GroupingFn): this;\n    public section(section?) {\n        if (!arguments.length) {\n            return this._conf.section;\n        }\n        this.configure({ section: section });\n        return this;\n    }\n\n    /**\n     * Backward-compatible synonym for {@link DataGrid.section section}.\n     *\n     */\n    // @ts-ignore, signature is different in BaseMixin\n    public group(): GroupingFn;\n    // @ts-ignore, signature is different in BaseMixin\n    public group(section: GroupingFn): this;\n    // @ts-ignore, signature is different in BaseMixin\n    public group(section?) {\n        logger.warnOnce('consider using dataGrid.section instead of dataGrid.group for clarity');\n        if (!arguments.length) {\n            return this.section();\n        }\n        return this.section(section);\n    }\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     * @param [beginSlice=0]\n     */\n    public beginSlice(): number;\n    public beginSlice(beginSlice: number): this;\n    public beginSlice(beginSlice?) {\n        if (!arguments.length) {\n            return this._conf.beginSlice;\n        }\n        this.configure({ beginSlice: beginSlice });\n        return this;\n    }\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the widget.\n     * Useful when implementing pagination.\n     */\n    public endSlice(): number;\n    public endSlice(endSlice: number): this;\n    public endSlice(endSlice?) {\n        if (!arguments.length) {\n            return this._conf.endSlice;\n        }\n        this.configure({ endSlice: endSlice });\n        return this;\n    }\n\n    /**\n     * Get or set the grid size which determines the number of items displayed by the widget.\n     * @param [size=999]\n     */\n    public size(): number;\n    public size(size: number): this;\n    public size(size?) {\n        if (!arguments.length) {\n            return this._conf.size;\n        }\n        this.configure({ size: size });\n        return this;\n    }\n\n    /**\n     * Get or set the function that formats an item. The data grid widget uses a\n     * function to generate dynamic html. Use your favourite templating engine or\n     * generate the string directly.\n     * @example\n     * chart.html(function (d) { return '<div class='item '+data.exampleCategory+''>'+data.exampleString+'</div>';});\n     */\n    public html(): BaseAccessor<string>;\n    public html(html: BaseAccessor<string>): this;\n    public html(html?) {\n        if (!arguments.length) {\n            return this._conf.html;\n        }\n        this.configure({ html: html });\n        return this;\n    }\n\n    /**\n     * Get or set the function that formats a section label.\n     * @example\n     * chart.htmlSection (function (d) { return '<h2>'.d.key . 'with ' . d.values.length .' items</h2>'});\n     */\n    public htmlSection(): BaseAccessor<string>;\n    public htmlSection(htmlSection: BaseAccessor<string>): this;\n    public htmlSection(htmlSection?) {\n        if (!arguments.length) {\n            return this._conf.htmlSection;\n        }\n        this.configure({ htmlSection: htmlSection });\n        return this;\n    }\n\n    /**\n     * Backward-compatible synonym for {@link DataGrid.htmlSection htmlSection}.\n     */\n    public htmlGroup(): BaseAccessor<string>;\n    public htmlGroup(htmlSection: BaseAccessor<string>): this;\n    public htmlGroup(htmlSection?) {\n        logger.warnOnce(\n            'consider using dataGrid.htmlSection instead of dataGrid.htmlGroup for clarity'\n        );\n        if (!arguments.length) {\n            return this.htmlSection();\n        }\n        return this.htmlSection(htmlSection);\n    }\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at the item\n     * level and returns a particular field to be sorted.\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     */\n    public sortBy(): BaseAccessor<any>;\n    public sortBy(sortByFunction: BaseAccessor<any>): this;\n    public sortBy(sortByFunction?) {\n        if (!arguments.length) {\n            return this._conf.sortBy;\n        }\n        this.configure({ sortBy: sortByFunction });\n        return this;\n    }\n\n    /**\n     * Get or set the sort order function.\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     */\n    public order(): CompareFn;\n    public order(order: CompareFn): this;\n    public order(order?) {\n        if (!arguments.length) {\n            return this._conf.order;\n        }\n        this.configure({ order: order });\n        return this;\n    }\n}\n\nexport const dataGrid = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new DataGrid(parent, chartGroup);\n","import { ascending } from 'd3-array';\nimport { Selection } from 'd3-selection';\n\nimport { BaseMixin } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType, DataTableColumnSpec } from '../core/types';\nimport { IDataTableConf } from './i-data-table-conf';\nimport { compatNestHelper } from '../core/d3compat';\n\nconst LABEL_CSS_CLASS = 'dc-table-label';\nconst ROW_CSS_CLASS = 'dc-table-row';\nconst COLUMN_CSS_CLASS = 'dc-table-column';\nconst SECTION_CSS_CLASS = 'dc-table-section dc-table-group';\nconst HEAD_CSS_CLASS = 'dc-table-head';\n\n/**\n * The data table is a simple widget designed to list crossfilter focused data set (rows being\n * filtered) in a good old tabular fashion.\n *\n * An interesting feature of the data table is that you can pass a crossfilter group to the\n * `dimension`, if you want to show aggregated data instead of raw data rows. This requires no\n * special code as long as you specify the {@link IDataTableConf.order | order} as `d3.descending`,\n * since the data table will use `dimension.top()` to fetch the data in that case, and the method is\n * equally supported on the crossfilter group as the crossfilter dimension.\n *\n * If you want to display aggregated data in ascending order, you will need to wrap the group\n * in a [fake dimension](https://github.com/dc-js/dc.js/wiki/FAQ#fake-dimensions) to support the\n * `.bottom()` method. See the example linked below for more details.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n * - {@link http://dc-js.github.io/dc.js/examples/table-on-aggregated-data.html | dataTable on a crossfilter group}\n * ({@link https://github.com/dc-js/dc.js/blob/master/web-src/examples/table-on-aggregated-data.html | source})\n *\n */\nexport class DataTable extends BaseMixin {\n    protected _conf: IDataTableConf;\n\n    /**\n     * Create a Data Table.\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            size: 25,\n            columns: [],\n            sortBy: d => d,\n            order: ascending,\n            beginSlice: 0,\n            endSlice: undefined,\n            showSections: true,\n            section: () => '', // all in one section\n        });\n\n        this._mandatoryAttributes(['dimension']);\n    }\n\n    public configure(conf: IDataTableConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IDataTableConf {\n        return this._conf;\n    }\n\n    protected _doRender(): this {\n        this.selectAll('tbody').remove();\n\n        this._renderRows(this._renderSections());\n\n        return this;\n    }\n\n    private _doColumnValueFormat(v, d) {\n        if (typeof v === 'function') {\n            // v is function\n            return v(d);\n        }\n        if (typeof v === 'string') {\n            // v is field name string\n            return d[v];\n        }\n        // v is Object, use fn (element 2)\n        return v.format(d);\n    }\n\n    private _doColumnHeaderFormat(d: DataTableColumnSpec): string {\n        // if 'function', convert to string representation\n        // show a string capitalized\n        // if an object then display its label string as-is.\n        if (typeof d === 'function') {\n            return this._doColumnHeaderFnToString(d);\n        }\n        if (typeof d === 'string') {\n            return this._doColumnHeaderCapitalize(d);\n        }\n        return String(d.label);\n    }\n\n    private _doColumnHeaderCapitalize(s: string): string {\n        // capitalize\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n\n    // TODO: This looks really peculiar, investigate, code is quite fragile\n    private _doColumnHeaderFnToString(f: (...args) => any): string {\n        // columnString(f) {\n        let s = String(f);\n        const i1 = s.indexOf('return ');\n        if (i1 >= 0) {\n            const i2 = s.lastIndexOf(';');\n            if (i2 >= 0) {\n                s = s.substring(i1 + 7, i2);\n                const i3 = s.indexOf('numberFormat');\n                if (i3 >= 0) {\n                    s = s.replace('numberFormat', '');\n                }\n            }\n        }\n        return s;\n    }\n\n    private _renderSections(): Selection<HTMLTableSectionElement, any, Element, any> {\n        // The 'original' example uses all 'functions'.\n        // If all 'functions' are used, then don't remove/add a header, and leave\n        // the html alone. This preserves the functionality of earlier releases.\n        // A 2nd option is a string representing a field in the data.\n        // A third option is to supply an Object such as an array of 'information', and\n        // supply your own _doColumnHeaderFormat and _doColumnValueFormat functions to\n        // create what you need.\n        let bAllFunctions = true;\n        this._conf.columns.forEach(f => {\n            bAllFunctions = bAllFunctions && typeof f === 'function';\n        });\n\n        if (!bAllFunctions) {\n            // ensure one thead\n            // prettier-ignore\n            let thead: Selection<HTMLTableSectionElement, any, Element, any> =\n                this.selectAll<HTMLTableSectionElement, any>('thead').data([0]);\n\n            thead.exit().remove();\n            thead = thead.enter().append('thead').merge(thead);\n\n            // with one tr\n            let headrow = thead.selectAll<HTMLTableRowElement, any>('tr').data([0]);\n            headrow.exit().remove();\n            headrow = headrow.enter().append('tr').merge(headrow);\n\n            // with a th for each column\n            const headcols = headrow\n                .selectAll<HTMLTableHeaderCellElement, any>('th')\n                .data(this._conf.columns);\n            headcols.exit().remove();\n            headcols\n                .enter()\n                .append('th')\n                .merge(headcols)\n                .attr('class', HEAD_CSS_CLASS)\n                .html(d => this._doColumnHeaderFormat(d));\n        }\n\n        const sections: Selection<HTMLTableSectionElement, any, Element, any> = this.root()\n            .selectAll<HTMLTableSectionElement, any>('tbody')\n            .data<any>(this._nestEntries(), d => this._conf.keyAccessor(d));\n\n        const rowSection = sections.enter().append('tbody');\n\n        if (this._conf.showSections === true) {\n            rowSection\n                .append('tr')\n                .attr('class', SECTION_CSS_CLASS)\n                .append('td')\n                .attr('class', LABEL_CSS_CLASS)\n                .attr('colspan', this._conf.columns.length)\n                .html(d => this._conf.keyAccessor(d));\n        }\n\n        sections.exit().remove();\n\n        return rowSection;\n    }\n\n    private _nestEntries(): { key: string; values: any }[] {\n        // TODO: consider creating special DataProvider\n        const dimension = this.dataProvider().conf().dimension;\n\n        let entries;\n        if (this._conf.order === ascending) {\n            entries = dimension.bottom(this._conf.size);\n        } else {\n            entries = dimension.top(this._conf.size);\n        }\n\n        entries = entries\n            .sort((a, b) => this._conf.order(this._conf.sortBy(a), this._conf.sortBy(b)))\n            .slice(this._conf.beginSlice, this._conf.endSlice);\n\n        return compatNestHelper({\n            key: this._conf.section,\n            sortKeys: this._conf.order,\n            entries,\n        });\n    }\n\n    private _renderRows(sections: Selection<HTMLTableSectionElement, any, Element, any>) {\n        const rows: Selection<HTMLTableRowElement, unknown, HTMLTableSectionElement, any> = sections\n            .order()\n            .selectAll<HTMLTableRowElement, any>(`tr.${ROW_CSS_CLASS}`)\n            .data(d => d.values);\n\n        const rowEnter: Selection<\n            HTMLTableRowElement,\n            unknown,\n            HTMLTableSectionElement,\n            any\n        > = rows.enter().append('tr').attr('class', ROW_CSS_CLASS);\n\n        this._conf.columns.forEach((v, i) => {\n            rowEnter\n                .append('td')\n                .attr('class', `${COLUMN_CSS_CLASS} _${i}`)\n                .html(d => this._doColumnValueFormat(v, d));\n        });\n\n        rows.exit().remove();\n\n        return rows;\n    }\n\n    protected _doRedraw(): this {\n        return this._doRender();\n    }\n}\n","import { DataTable as DataTableNeo } from '../../charts/data-table';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport {\n    BaseAccessor,\n    ChartGroupType,\n    ChartParentType,\n    CompareFn,\n    DataTableColumnSpec,\n} from '../../core/types';\nimport { logger } from '../core/logger';\n\n// @ts-ignore, remove after group method is moved here\nexport class DataTable extends BaseMixinExt(DataTableNeo) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the section function for the data table. The section function takes a data row and\n     * returns the key to specify to {@link https://github.com/d3/d3-collection/blob/master/README.md#nest d3.nest}\n     * to split rows into sections. By default there will be only one section with no name.\n     *\n     * Set {@link DataTable.showSections showSections} to false to hide the section headers\n     *\n     * @example\n     * // section rows by the value of their field\n     * chart\n     *     .section(function(d) { return d.field; })\n     */\n    public section(): BaseAccessor<string>;\n    public section(section: BaseAccessor<string>): this;\n    public section(section?) {\n        if (!arguments.length) {\n            return this._conf.section;\n        }\n        this.configure({ section: section });\n        return this;\n    }\n\n    /**\n     * Backward-compatible synonym for {@link DataTable.section section}.\n     *\n     */\n    // @ts-ignore, signature is different in BaseMixin\n    public group(): BaseAccessor<string>;\n    // @ts-ignore, signature is different in BaseMixin\n    public group(section: BaseAccessor<string>): this;\n    // @ts-ignore, signature is different in BaseMixin\n    public group(section?) {\n        logger.warnOnce('consider using dataTable.section instead of dataTable.group for clarity');\n        if (!arguments.length) {\n            return this.section();\n        }\n        return this.section(section);\n    }\n\n    /**\n     * Get or set the table size which determines the number of rows displayed by the widget.\n     * @param [size=25]\n     */\n    public size(): number;\n    public size(size: number): this;\n    public size(size?) {\n        if (!arguments.length) {\n            return this._conf.size;\n        }\n        this.configure({ size: size });\n        return this;\n    }\n\n    /**\n     * Get or set the index of the beginning slice which determines which entries get displayed\n     * by the widget. Useful when implementing pagination.\n     *\n     * Note: the sortBy function will determine how the rows are ordered for pagination purposes.\n     * See the {@link http://dc-js.github.io/dc.js/examples/table-pagination.html table pagination example}\n     * to see how to implement the pagination user interface using `beginSlice` and `endSlice`.\n     * @param [beginSlice=0]\n     */\n    public beginSlice(): number;\n    public beginSlice(beginSlice: number): this;\n    public beginSlice(beginSlice?) {\n        if (!arguments.length) {\n            return this._conf.beginSlice;\n        }\n        this.configure({ beginSlice: beginSlice });\n        return this;\n    }\n\n    /**\n     * Get or set the index of the end slice which determines which entries get displayed by the\n     * widget. Useful when implementing pagination. See {@link DataTable.beginSlice `beginSlice`} for more information.\n     */\n    public endSlice(): number;\n    public endSlice(endSlice: number): this;\n    public endSlice(endSlice?) {\n        if (!arguments.length) {\n            return this._conf.endSlice;\n        }\n        this.configure({ endSlice: endSlice });\n        return this;\n    }\n\n    /**\n     * Get or set column functions. The data table widget supports several methods of specifying the\n     * columns to display.\n     *\n     * The original method uses an array of functions to generate dynamic columns. Column functions\n     * are simple javascript functions with only one input argument `d` which represents a row in\n     * the data set. The return value of these functions will be used to generate the content for\n     * each cell. However, this method requires the HTML for the table to have a fixed set of column\n     * headers.\n     *\n     * <pre><code>chart.columns([\n     *     function(d) { return d.date; },\n     *     function(d) { return d.open; },\n     *     function(d) { return d.close; },\n     *     function(d) { return numberFormat(d.close - d.open); },\n     *     function(d) { return d.volume; }\n     * ]);\n     * </code></pre>\n     *\n     * In the second method, you can list the columns to read from the data without specifying it as\n     * a function, except where necessary (ie, computed columns).  Note the data element name is\n     * capitalized when displayed in the table header. You can also mix in functions as necessary,\n     * using the third `{label, format}` form, as shown below.\n     *\n     * <pre><code>chart.columns([\n     *     \"date\",    // d[\"date\"], ie, a field accessor; capitalized automatically\n     *     \"open\",    // ...\n     *     \"close\",   // ...\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) {\n     *             return numberFormat(d.close - d.open);\n     *         }\n     *     },\n     *     \"volume\"   // d[\"volume\"], ie, a field accessor; capitalized automatically\n     * ]);\n     * </code></pre>\n     *\n     * In the third example, we specify all fields using the `{label, format}` method:\n     * <pre><code>chart.columns([\n     *     {\n     *         label: \"Date\",\n     *         format: function (d) { return d.date; }\n     *     },\n     *     {\n     *         label: \"Open\",\n     *         format: function (d) { return numberFormat(d.open); }\n     *     },\n     *     {\n     *         label: \"Close\",\n     *         format: function (d) { return numberFormat(d.close); }\n     *     },\n     *     {\n     *         label: \"Change\",\n     *         format: function (d) { return numberFormat(d.close - d.open); }\n     *     },\n     *     {\n     *         label: \"Volume\",\n     *         format: function (d) { return d.volume; }\n     *     }\n     * ]);\n     * </code></pre>\n     *\n     * You may wish to override the dataTable functions `_doColumnHeaderCapitalize` and\n     * `_doColumnHeaderFnToString`, which are used internally to translate the column information or\n     * function into a displayed header. The first one is used on the \"string\" column specifier; the\n     * second is used to transform a stringified function into something displayable. For the Stock\n     * example, the function for Change becomes the table header **d.close - d.open**.\n     *\n     * Finally, you can even specify a completely different form of column definition. To do this,\n     * override `_chart._doColumnHeaderFormat` and `_chart._doColumnValueFormat` Be aware that\n     * fields without numberFormat specification will be displayed just as they are stored in the\n     * data, unformatted.\n     */\n    public columns(): DataTableColumnSpec[];\n    public columns(columns: DataTableColumnSpec[]): this;\n    public columns(columns?) {\n        if (!arguments.length) {\n            return this._conf.columns;\n        }\n        this.configure({ columns: columns });\n        return this;\n    }\n\n    /**\n     * Get or set sort-by function. This function works as a value accessor at row level and returns a\n     * particular field to be sorted by.\n     * @example\n     * chart.sortBy(function(d) {\n     *     return d.date;\n     * });\n     */\n    public sortBy(): BaseAccessor<any>;\n    public sortBy(sortBy: BaseAccessor<any>): this;\n    public sortBy(sortBy?) {\n        if (!arguments.length) {\n            return this._conf.sortBy;\n        }\n        this.configure({ sortBy: sortBy });\n        return this;\n    }\n\n    /**\n     * Get or set sort order. If the order is `d3.ascending`, the data table will use\n     * `conf.dimension.bottom()` to fetch the data; otherwise it will use `conf.dimension.top()`\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.order(d3.descending);\n     * @param [order=d3.ascending]\n     */\n    public order(): CompareFn;\n    public order(order: CompareFn): this;\n    public order(order?) {\n        if (!arguments.length) {\n            return this._conf.order;\n        }\n        this.configure({ order: order });\n        return this;\n    }\n\n    /**\n     * Get or set if section header rows will be shown.\n     * @example\n     * chart\n     *     .section([value], [name])\n     *     .showSections(true|false);\n     * @param [showSections=true]\n     */\n    public showSections(): boolean;\n    public showSections(showSections: boolean): this;\n    public showSections(showSections?) {\n        if (!arguments.length) {\n            return this._conf.showSections;\n        }\n        this.configure({ showSections: showSections });\n        return this;\n    }\n\n    /**\n     * Backward-compatible synonym for {@link DataTable.showSections showSections}.\n     * @param [showSections=true]\n     */\n    public showGroups(): boolean;\n    public showGroups(showSections: boolean): this;\n    public showGroups(showSections?) {\n        logger.warnOnce(\n            'consider using dataTable.showSections instead of dataTable.showGroups for clarity'\n        );\n        if (!arguments.length) {\n            return this.showSections();\n        }\n        return this.showSections(showSections);\n    }\n}\n\nexport const dataTable = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new DataTable(parent, chartGroup);\n","import { geoAlbersUsa, geoPath, GeoPath, GeoProjection } from 'd3-geo';\nimport { select, Selection } from 'd3-selection';\n\nimport { BaseMixin } from '../base/base-mixin';\nimport { ColorMixin } from '../base/color-mixin';\nimport { transition } from '../core/core';\nimport { logger } from '../core/logger';\nimport { events } from '../core/events';\nimport { nameToId } from '../core/utils';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { IGeoChoroplethChartConf } from './i-geo-choropleth-chart-conf';\nimport { adaptHandler } from '../core/d3compat';\n\n/**\n * The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map\n * from GeoJson data. This chart implementation was inspired by\n * {@link http://bl.ocks.org/4060606 | the great d3 choropleth example}.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/vc/index.html | US Venture Capital Landscape 2011}\n */\nexport class GeoChoroplethChart extends ColorMixin(BaseMixin) {\n    public _conf: IGeoChoroplethChartConf;\n\n    private _geoPath: GeoPath;\n    private _projectionFlag: boolean;\n    private _projection: GeoProjection;\n\n    /**\n     * Create a Geo Choropleth Chart.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a choropleth chart under '#us-chart' element using the default global chart group\n     * const chart1 = new GeoChoroplethChart('#us-chart');\n     * // create a choropleth chart under '#us-chart2' element using chart group A\n     * const chart2 = new CompositeChart('#us-chart2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            colorAccessor: d => d || 0,\n            geoJsons: [],\n        });\n\n        this._geoPath = geoPath();\n        this._projectionFlag = undefined;\n        this._projection = undefined;\n    }\n\n    public configure(conf: IGeoChoroplethChartConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IGeoChoroplethChartConf {\n        return this._conf;\n    }\n\n    protected _doRender(): this {\n        this.resetSvg();\n        for (let layerIndex = 0; layerIndex < this._conf.geoJsons.length; ++layerIndex) {\n            const states: Selection<SVGGElement, any, any, any> = this.svg()\n                .append('g')\n                .attr('class', `layer${layerIndex}`);\n\n            let regionG = states\n                .selectAll<SVGGElement, any>(`g.${this._geoJson(layerIndex).name}`)\n                .data(this._geoJson(layerIndex).data);\n\n            regionG = regionG\n                .enter()\n                .append('g')\n                .attr('class', this._geoJson(layerIndex).name)\n                .merge(regionG);\n\n            regionG.append('path').attr('fill', 'white').attr('d', this._getGeoPath());\n\n            regionG.append('title');\n\n            this._plotData(layerIndex);\n        }\n        this._projectionFlag = false;\n\n        return this;\n    }\n\n    private _plotData(layerIndex: number): void {\n        const data = this._generateLayeredData();\n\n        if (this._isDataLayer(layerIndex)) {\n            const regionG = this._renderRegionG(layerIndex);\n\n            this._renderPaths(regionG, layerIndex, data);\n\n            this._renderTitles(regionG, layerIndex, data);\n        }\n    }\n\n    private _generateLayeredData() {\n        const data = {};\n        const groupAll = this.data();\n        for (let i = 0; i < groupAll.length; ++i) {\n            data[this._conf.keyAccessor(groupAll[i])] = groupAll[i]._value;\n        }\n        return data;\n    }\n\n    private _isDataLayer(layerIndex: number): boolean {\n        return !!this._geoJson(layerIndex).keyAccessor;\n    }\n\n    private _renderRegionG(layerIndex: number): Selection<SVGGElement, any, SVGElement, any> {\n        const regionG: Selection<SVGGElement, any, SVGElement, any> = this.svg()\n            .selectAll<SVGGElement, any>(this._layerSelector(layerIndex))\n            .classed('selected', d => this._isSelected(layerIndex, d))\n            .classed('deselected', d => this._isDeselected(layerIndex, d))\n            .attr('class', d => {\n                const layerNameClass = this._geoJson(layerIndex).name;\n                const regionClass = nameToId(this._geoJson(layerIndex).keyAccessor(d));\n                let baseClasses = `${layerNameClass} ${regionClass}`;\n                if (this._isSelected(layerIndex, d)) {\n                    baseClasses += ' selected';\n                }\n                if (this._isDeselected(layerIndex, d)) {\n                    baseClasses += ' deselected';\n                }\n                return baseClasses;\n            });\n        return regionG;\n    }\n\n    private _layerSelector(layerIndex: number): string {\n        return `g.layer${layerIndex} g.${this._geoJson(layerIndex).name}`;\n    }\n\n    private _isSelected(layerIndex, d): boolean {\n        return this.hasFilter() && this.hasFilter(this._getKey(layerIndex, d));\n    }\n\n    private _isDeselected(layerIndex: number, d): boolean {\n        return this.hasFilter() && !this.hasFilter(this._getKey(layerIndex, d));\n    }\n\n    private _getKey(layerIndex: number, d) {\n        return this._geoJson(layerIndex).keyAccessor(d);\n    }\n\n    private _geoJson(index: number) {\n        return this._conf.geoJsons[index];\n    }\n\n    private _renderPaths(\n        regionG: Selection<SVGGElement, any, SVGElement, any>,\n        layerIndex: number,\n        data\n    ) {\n        const paths: Selection<SVGPathElement, any, SVGElement, any> = regionG\n            .select<SVGPathElement>('path')\n            .attr('fill', function () {\n                const currentFill = select(this).attr('fill');\n                if (currentFill) {\n                    return currentFill;\n                }\n                return 'none';\n            })\n            .on(\n                'click',\n                adaptHandler(d => this.onClick(d, layerIndex))\n            );\n\n        transition(paths, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n            'fill',\n            (d, i) => this._colorHelper.getColor(data[this._geoJson(layerIndex).keyAccessor(d)], i)\n        );\n    }\n\n    public onClick(d, layerIndex) {\n        const selectedRegion = this._geoJson(layerIndex).keyAccessor(d);\n        events.trigger(() => {\n            this.filter(selectedRegion);\n            this.redrawGroup();\n        });\n    }\n\n    private _renderTitles(\n        regionG: Selection<SVGGElement, any, SVGElement, any>,\n        layerIndex: number,\n        data\n    ): void {\n        if (this._conf.renderTitle) {\n            regionG.selectAll('title').text(d => {\n                const key = this._getKey(layerIndex, d);\n                const value = data[key];\n                return this._conf.title({ key, value });\n            });\n        }\n    }\n\n    protected _doRedraw(): this {\n        for (let layerIndex = 0; layerIndex < this._conf.geoJsons.length; ++layerIndex) {\n            this._plotData(layerIndex);\n            if (this._projectionFlag) {\n                this.svg()\n                    .selectAll(`g.${this._geoJson(layerIndex).name} path`)\n                    .attr('d', this._getGeoPath());\n            }\n        }\n        this._projectionFlag = false;\n\n        return this;\n    }\n\n    /**\n     * Gets or sets a custom geo projection function. See the available\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#projections | d3 geo projection functions}.\n     *\n     * Starting version 3.0 it has been deprecated to rely on the default projection being\n     * {@link https://github.com/d3/d3-geo/blob/master/README.md#geoAlbersUsa | d3.geoAlbersUsa()}. Please\n     * set it explicitly. {@link https://bl.ocks.org/mbostock/5557726\n     * Considering that `null` is also a valid value for projection}, if you need\n     * projection to be `null` please set it explicitly to `null`.\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#projections | d3.projection}\n     * @see {@link https://github.com/d3/d3-geo-projection | d3-geo-projection}\n     */\n    public projection(): GeoProjection;\n    public projection(projection: GeoProjection): this;\n    public projection(projection?) {\n        if (!arguments.length) {\n            return this._projection;\n        }\n\n        this._projection = projection;\n        this._projectionFlag = true;\n        return this;\n    }\n\n    private _getGeoPath(): GeoPath {\n        if (this._projection === undefined) {\n            logger.warn(\n                'choropleth projection default of geoAlbers is deprecated,' +\n                    ' in next version projection will need to be set explicitly'\n            );\n            return this._geoPath.projection(geoAlbersUsa());\n        }\n\n        return this._geoPath.projection(this._projection);\n    }\n\n    /**\n     * Returns the {@link https://github.com/d3/d3-geo/blob/master/README.md#paths | d3.geoPath} object used to\n     * render the projection and features.  Can be useful for figuring out the bounding box of the\n     * feature set and thus a way to calculate scale and translation for the projection.\n     * @see {@link https://github.com/d3/d3-geo/blob/master/README.md#paths | d3.geoPath}\n     */\n    public geoPath(): GeoPath {\n        return this._geoPath;\n    }\n}\n","import { GeoChoroplethChart as GeoChoroplethChartNeo } from '../../charts/geo-choropleth-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { BaseAccessor, ChartGroupType, ChartParentType, IGeoJson } from '../../core/types';\n\nexport class GeoChoroplethChart extends ColorMixinExt(BaseMixinExt(GeoChoroplethChartNeo)) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Returns all GeoJson layers currently registered with this chart. The returned array is a\n     * reference to this chart's internal data structure, so any modification to this array will also\n     * modify this chart's internal registration.\n     */\n    public geoJsons(): IGeoJson[] {\n        return this._conf.geoJsons;\n    }\n\n    /**\n     * **mandatory**\n     *\n     * Use this function to insert a new GeoJson map layer. This function can be invoked multiple times\n     * if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple\n     * layers with the same name the new overlay will override the existing one.\n     * @see {@link http://geojson.org/ GeoJSON}\n     * @see {@link https://github.com/topojson/topojson/wiki TopoJSON}\n     * @see {@link https://github.com/topojson/topojson-1.x-api-reference/blob/master/API-Reference.md#wiki-feature topojson.feature}\n     * @example\n     * // insert a layer for rendering US states\n     * chart.overlayGeoJson(statesJson.features, 'state', function(d) {\n     *      return d.properties.name;\n     * });\n     * @param json - a geojson feed\n     * @param name - name of the layer\n     * @param keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by\n     * this function should match the keys returned by the crossfilter groups.\n     */\n    public overlayGeoJson(json, name: string, keyAccessor: BaseAccessor<any>) {\n        for (let i = 0; i < this._conf.geoJsons.length; ++i) {\n            if (this._conf.geoJsons[i].name === name) {\n                this._conf.geoJsons[i].data = json;\n                this._conf.geoJsons[i].keyAccessor = keyAccessor;\n                return this;\n            }\n        }\n        this._conf.geoJsons.push({ name, data: json, keyAccessor });\n        return this;\n    }\n\n    /**\n     * Remove a GeoJson layer from this chart by name\n     */\n    public removeGeoJson(name: string): this {\n        const geoJsons = [];\n\n        for (let i = 0; i < this._conf.geoJsons.length; ++i) {\n            const layer = this._conf.geoJsons[i];\n            if (layer.name !== name) {\n                geoJsons.push(layer);\n            }\n        }\n\n        this.configure({ geoJsons: geoJsons });\n\n        return this;\n    }\n}\n\nexport const geoChoroplethChart = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new GeoChoroplethChart(parent, chartGroup);\n","import { ascending } from 'd3-array';\nimport { scaleBand } from 'd3-scale';\n\nimport { transition } from '../core/core';\nimport { logger } from '../core/logger';\nimport { events } from '../core/events';\nimport { ColorMixin } from '../base/color-mixin';\nimport { MarginMixin } from '../base/margin-mixin';\nimport { CFGrouping, ChartGroupType, ChartParentType, MinimalXYScale } from '../core/types';\nimport { Selection } from 'd3-selection';\nimport { IHeatMapConf } from './i-heat-map-conf';\nimport { adaptHandler } from '../core/d3compat';\nimport { TwoDimensionalFilter } from '../core/filters/two-dimensional-filter';\n\nconst DEFAULT_BORDER_RADIUS = 6.75;\n\n/**\n * A heat map is matrix that represents the values of two dimensions of data using colors.\n */\nexport class HeatMap extends ColorMixin(MarginMixin) {\n    public _conf: IHeatMapConf;\n\n    private _chartBody: Selection<SVGGElement, any, SVGElement, any>;\n\n    private _colScale: MinimalXYScale;\n    private _rowScale: MinimalXYScale;\n\n    /**\n     * Create a Heat Map\n     *\n     * TODO update example\n     * @example\n     * ```\n     * // create a heat map under #chart-container1 element using the default global chart group\n     * const heatMap1 = new HeatMap('#chart-container1');\n     * // create a heat map under #chart-container2 element using chart group A\n     * const heatMap2 = new HeatMap('#chart-container2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            cols: undefined,\n            rows: undefined,\n            colOrdering: ascending,\n            rowOrdering: ascending,\n            xBorderRadius: DEFAULT_BORDER_RADIUS,\n            yBorderRadius: DEFAULT_BORDER_RADIUS,\n            colsLabel: d => d,\n            rowsLabel: d => d,\n            title: this._conf.colorAccessor,\n\n            xAxisOnClick: d => {\n                this._filterAxis(0, d);\n            },\n            yAxisOnClick: d => {\n                this._filterAxis(1, d);\n            },\n            boxOnClick: d => {\n                const filter = d.key;\n                events.trigger(() => {\n                    this.filter(new TwoDimensionalFilter(filter));\n                    this.redrawGroup();\n                });\n            },\n        });\n\n        this._chartBody = undefined;\n\n        this._colScale = scaleBand();\n        this._rowScale = scaleBand();\n\n        this._mandatoryAttributes(['group']);\n    }\n\n    public configure(conf: IHeatMapConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IHeatMapConf {\n        return this._conf;\n    }\n\n    private _filterAxis(axis: number, value): void {\n        const cellsOnAxis = this.selectAll<SVGElement, any>('.box-group').filter(\n            d => d.key[axis] === value\n        );\n\n        const unfilteredCellsOnAxis = cellsOnAxis.filter(d => !this.hasFilter(d.key));\n\n        events.trigger(() => {\n            const selection = unfilteredCellsOnAxis.empty() ? cellsOnAxis : unfilteredCellsOnAxis;\n            const filtersList = selection.data().map(kv => new TwoDimensionalFilter(kv.key));\n            this.filter([filtersList]);\n            this.redrawGroup();\n        });\n    }\n\n    public filter();\n    public filter(filter): this;\n    public filter(filter?) {\n        const nonstandardFilter = f => {\n            logger.warnOnce(\n                'heatmap.filter taking a coordinate is deprecated - please pass dc.filters.TwoDimensionalFilter instead'\n            );\n            return this.filter(new TwoDimensionalFilter(f));\n        };\n\n        if (!arguments.length) {\n            return super.filter();\n        }\n        if (\n            filter !== null &&\n            filter.filterType !== 'TwoDimensionalFilter' &&\n            !(\n                Array.isArray(filter) &&\n                Array.isArray(filter[0]) &&\n                filter[0][0].filterType === 'TwoDimensionalFilter'\n            )\n        ) {\n            return nonstandardFilter(filter);\n        }\n        return super.filter(filter);\n    }\n\n    protected _doRender(): this {\n        this.resetSvg();\n\n        this._chartBody = this.svg()\n            .append('g')\n            .attr('class', 'heatmap')\n            .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\n\n        return this._doRedraw();\n    }\n\n    protected _doRedraw(): this {\n        const data = this.data();\n        let rows = this._conf.rows || data.map(d => d._value);\n        let cols = this._conf.cols || data.map(this._conf.keyAccessor);\n\n        if (this._conf.rowOrdering) {\n            rows = rows.sort(this._conf.rowOrdering);\n        }\n        if (this._conf.colOrdering) {\n            cols = cols.sort(this._conf.colOrdering);\n        }\n        rows = this._rowScale.domain(rows);\n        cols = this._colScale.domain(cols);\n\n        const rowCount = rows.domain().length;\n        const colCount = cols.domain().length;\n        const boxWidth = Math.floor(this.effectiveWidth() / colCount);\n        const boxHeight = Math.floor(this.effectiveHeight() / rowCount);\n\n        cols.rangeRound([0, this.effectiveWidth()]);\n        rows.rangeRound([this.effectiveHeight(), 0]);\n\n        let boxes: Selection<SVGGElement, CFGrouping, SVGGElement, any> = this._chartBody\n            .selectAll<SVGGElement, any>('g.box-group')\n            .data(this.data(), (d, i) => `${this._conf.keyAccessor(d, i)}\\0${d._value}`);\n\n        boxes.exit().remove();\n\n        const gEnter = boxes.enter().append('g').attr('class', 'box-group');\n\n        gEnter\n            .append('rect')\n            .attr('class', 'heat-box')\n            .attr('fill', 'white')\n            .attr('x', (d, i) => cols(this._conf.keyAccessor(d, i)))\n            .attr('y', (d, i) => rows(d._value))\n            .on('click', adaptHandler(this._conf.boxOnClick));\n\n        boxes = gEnter.merge(boxes);\n\n        if (this._conf.renderTitle) {\n            gEnter.append('title');\n            boxes.select('title').text(this._conf.title);\n        }\n\n        transition(boxes.select('rect'), this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('x', (d, i) => cols(this._conf.keyAccessor(d, i)))\n            .attr('y', (d, i) => rows(d._value))\n            .attr('rx', this._conf.xBorderRadius)\n            .attr('ry', this._conf.yBorderRadius)\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .attr('width', boxWidth)\n            .attr('height', boxHeight);\n\n        let gCols = this._chartBody.select<SVGGElement>('g.cols');\n        if (gCols.empty()) {\n            gCols = this._chartBody.append('g').attr('class', 'cols axis');\n        }\n        let gColsText = gCols.selectAll<SVGTextElement, any>('text').data(cols.domain());\n\n        gColsText.exit().remove();\n\n        gColsText = gColsText\n            .enter()\n            .append('text')\n            .attr('x', d => cols(d) + boxWidth / 2)\n            .style('text-anchor', 'middle')\n            .attr('y', this.effectiveHeight())\n            .attr('dy', 12)\n            .on('click', adaptHandler(this._conf.xAxisOnClick))\n            .text(this._conf.colsLabel)\n            .merge(gColsText);\n\n        transition(gColsText, this._conf.transitionDuration, this._conf.transitionDelay)\n            .text(this._conf.colsLabel)\n            .attr('x', d => cols(d) + boxWidth / 2)\n            .attr('y', this.effectiveHeight());\n\n        let gRows = this._chartBody.select<SVGGElement>('g.rows');\n        if (gRows.empty()) {\n            gRows = this._chartBody.append('g').attr('class', 'rows axis');\n        }\n\n        let gRowsText = gRows.selectAll<SVGTextElement, any>('text').data(rows.domain());\n\n        gRowsText.exit().remove();\n\n        gRowsText = gRowsText\n            .enter()\n            .append('text')\n            .style('text-anchor', 'end')\n            .attr('x', 0)\n            .attr('dx', -2)\n            .attr('y', d => rows(d) + boxHeight / 2)\n            .attr('dy', 6)\n            .on('click', adaptHandler(this._conf.yAxisOnClick))\n            .text(this._conf.rowsLabel)\n            .merge(gRowsText);\n\n        transition(gRowsText, this._conf.transitionDuration, this._conf.transitionDelay)\n            .text(this._conf.rowsLabel)\n            .attr('y', d => rows(d) + boxHeight / 2);\n\n        if (this.hasFilter()) {\n            const chart = this;\n            this.selectAll('g.box-group').each(function (d) {\n                if (chart._isSelectedNode(d)) {\n                    chart.highlightSelected(this);\n                } else {\n                    chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            const chart = this;\n            this.selectAll('g.box-group').each(function () {\n                chart.resetHighlight(this);\n            });\n        }\n        return this;\n    }\n\n    private _isSelectedNode(d): boolean {\n        return this.hasFilter(d.key);\n    }\n}\n","import { HeatMap as HeatMapNeo } from '../../charts/heat-map';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport {\n    BaseAccessor,\n    ChartGroupType,\n    ChartParentType,\n    CompareFn,\n    HeatMapClickHandler,\n} from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\n\nexport class HeatMap extends ColorMixinExt(MarginMixinExt(BaseMixinExt(HeatMapNeo))) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Set or get the column label function. The chart class uses this function to render\n     * column labels on the X axis. It is passed the column name.\n     * @example\n     * // the default label function just returns the name\n     * chart.colsLabel(function(d) { return d; });\n     * @param [labelFunction=function(d) { return d; }]\n     */\n    public colsLabel(): BaseAccessor<any>;\n    public colsLabel(labelFunction: BaseAccessor<any>): this;\n    public colsLabel(labelFunction?) {\n        if (!arguments.length) {\n            return this._conf.colsLabel;\n        }\n        this.configure({ colsLabel: labelFunction });\n        return this;\n    }\n\n    /**\n     * Set or get the row label function. The chart class uses this function to render\n     * row labels on the Y axis. It is passed the row name.\n     * @example\n     * // the default label function just returns the name\n     * chart.rowsLabel(function(d) { return d; });\n     * @param [labelFunction=function(d) { return d; }]\n     */\n    public rowsLabel(): BaseAccessor<any>;\n    public rowsLabel(labelFunction: BaseAccessor<any>): this;\n    public rowsLabel(labelFunction?) {\n        if (!arguments.length) {\n            return this._conf.rowsLabel;\n        }\n        this.configure({ rowsLabel: labelFunction });\n        return this;\n    }\n\n    /**\n     * Gets or sets the values used to create the rows of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the value accessor.\n     */\n    public rows();\n    public rows(rows): this;\n    public rows(rows?) {\n        if (!arguments.length) {\n            return this._conf.rows;\n        }\n        this.configure({ rows: rows });\n        return this;\n    }\n\n    /**\n     * Get or set a comparator to order the rows.\n     * Default is {@link https://github.com/d3/d3-array#ascending d3.ascending}.\n     */\n    public rowOrdering(): CompareFn;\n    public rowOrdering(rowOrdering: CompareFn): this;\n    public rowOrdering(rowOrdering?) {\n        if (!arguments.length) {\n            return this._conf.rowOrdering;\n        }\n        this.configure({ rowOrdering: rowOrdering });\n        return this;\n    }\n\n    /**\n     * Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all\n     * the values will be fetched from the data using the key accessor.\n     */\n    public cols();\n    public cols(cols): this;\n    public cols(cols?) {\n        if (!arguments.length) {\n            return this._conf.cols;\n        }\n        this.configure({ cols: cols });\n        return this;\n    }\n\n    /**\n     * Get or set a comparator to order the columns.\n     * Default is  {@link https://github.com/d3/d3-array#ascending d3.ascending}.\n     */\n    public colOrdering(): CompareFn;\n    public colOrdering(colOrdering: CompareFn): this;\n    public colOrdering(colOrdering?) {\n        if (!arguments.length) {\n            return this._conf.colOrdering;\n        }\n        this.configure({ colOrdering: colOrdering });\n        return this;\n    }\n\n    /**\n     * Gets or sets the handler that fires when an individual cell is clicked in the heatmap.\n     * By default, filtering of the cell will be toggled.\n     * @example\n     * // default box on click handler\n     * chart.boxOnClick(function (d) {\n     *     var filter = d.key;\n     *     events.trigger(function () {\n     *         _chart.filter(filter);\n     *         _chart.redrawGroup();\n     *     });\n     * });\n     */\n    public boxOnClick(): HeatMapClickHandler;\n    public boxOnClick(handler: HeatMapClickHandler): this;\n    public boxOnClick(handler?) {\n        if (!arguments.length) {\n            return this._conf.boxOnClick;\n        }\n        this.configure({ boxOnClick: handler });\n        return this;\n    }\n\n    /**\n     * Gets or sets the handler that fires when a column tick is clicked in the x axis.\n     * By default, if any cells in the column are unselected, the whole column will be selected,\n     * otherwise the whole column will be unselected.\n     */\n    public xAxisOnClick(): HeatMapClickHandler;\n    public xAxisOnClick(handler: HeatMapClickHandler): this;\n    public xAxisOnClick(handler?) {\n        if (!arguments.length) {\n            return this._conf.xAxisOnClick;\n        }\n        this.configure({ xAxisOnClick: handler });\n        return this;\n    }\n\n    /**\n     * Gets or sets the handler that fires when a row tick is clicked in the y axis.\n     * By default, if any cells in the row are unselected, the whole row will be selected,\n     * otherwise the whole row will be unselected.\n     */\n    public yAxisOnClick(): HeatMapClickHandler;\n    public yAxisOnClick(handler: HeatMapClickHandler): this;\n    public yAxisOnClick(handler?) {\n        if (!arguments.length) {\n            return this._conf.yAxisOnClick;\n        }\n        this.configure({ yAxisOnClick: handler });\n        return this;\n    }\n\n    /**\n     * Gets or sets the X border radius.  Set to 0 to get full rectangles.\n     * @param [xBorderRadius=6.75]\n     */\n    public xBorderRadius(): number;\n    public xBorderRadius(xBorderRadius: number): this;\n    public xBorderRadius(xBorderRadius?) {\n        if (!arguments.length) {\n            return this._conf.xBorderRadius;\n        }\n        this.configure({ xBorderRadius: xBorderRadius });\n        return this;\n    }\n\n    /**\n     * Gets or sets the Y border radius.  Set to 0 to get full rectangles.\n     * @param [yBorderRadius=6.75]\n     */\n    public yBorderRadius(): number;\n    public yBorderRadius(yBorderRadius: number): this;\n    public yBorderRadius(yBorderRadius?) {\n        if (!arguments.length) {\n            return this._conf.yBorderRadius;\n        }\n        this.configure({ yBorderRadius: yBorderRadius });\n        return this;\n    }\n}\n\nexport const heatMap = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new HeatMap(parent, chartGroup);\n","import {\n    area,\n    curveBasis,\n    curveBasisClosed,\n    curveBasisOpen,\n    curveBundle,\n    curveCardinal,\n    curveCardinalClosed,\n    curveCardinalOpen,\n    CurveFactory,\n    CurveFactoryLineOnly,\n    curveLinear,\n    curveLinearClosed,\n    curveMonotoneX,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n    line,\n} from 'd3-shape';\nimport { select, Selection } from 'd3-selection';\n\nimport { logger } from '../core/logger';\nimport { pluck2, printSingleValue, safeNumber } from '../core/utils';\nimport { StackMixin } from '../base/stack-mixin';\nimport { transition } from '../core/core';\nimport {\n    BaseAccessor,\n    ChartGroupType,\n    ChartParentType,\n    LegendItem,\n    SVGGElementSelection,\n} from '../core/types';\n\nconst DEFAULT_DOT_RADIUS = 5;\nconst TOOLTIP_G_CLASS = 'dc-tooltip';\nconst DOT_CIRCLE_CLASS = 'dot';\nconst Y_AXIS_REF_LINE_CLASS = 'yRef';\nconst X_AXIS_REF_LINE_CLASS = 'xRef';\nconst DEFAULT_DOT_OPACITY = 1e-6;\nconst LABEL_PADDING = 3;\n\n/**\n * Concrete line/area chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html | Canadian City Crime Stats}\n */\nexport class LineChart extends StackMixin {\n    private _renderArea: boolean;\n    private _dotRadius: number;\n    private _dataPointRadius: number;\n    private _dataPointFillOpacity: number;\n    private _dataPointStrokeOpacity: number;\n    private _curve: CurveFactory | CurveFactoryLineOnly;\n    private _interpolate: CurveFactory | CurveFactoryLineOnly | string;\n    private _tension: number;\n    private _defined: BaseAccessor<boolean>;\n    private _dashStyle: number[];\n    private _xyTipsOn: boolean | 'always';\n\n    /**\n     * Create a Line Chart.\n     *\n     * TODO update example\n     * @example\n     * ```\n     * // create a line chart under #chart-container1 element using the default global chart group\n     * var chart1 = new LineChart('#chart-container1');\n     * // create a line chart under #chart-container2 element using chart group A\n     * var chart2 = new LineChart('#chart-container2', 'chartGroupA');\n     * // create a sub-chart under a composite parent chart\n     * var chart3 = new LineChart(compositeChart);\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            transitionDuration: 500,\n            transitionDelay: 0,\n            label: d => printSingleValue(d.y0 + d.y),\n            renderLabel: false,\n        });\n\n        this._renderArea = false;\n        this._dotRadius = DEFAULT_DOT_RADIUS;\n        this._dataPointRadius = null;\n        this._dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n        this._dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n        this._curve = null;\n        this._interpolate = null; // d3.curveLinear;  // deprecated in 3.0\n        this._tension = null; // deprecated in 3.0\n        this._defined = undefined;\n        this._dashStyle = undefined;\n        this._xyTipsOn = true;\n\n        this._rangeBandPadding(1);\n    }\n\n    public plotData() {\n        const chartBody: SVGGElementSelection = this.chartBodyG();\n        let layersList = chartBody.select<SVGGElement>('g.stack-list');\n\n        if (layersList.empty()) {\n            layersList = chartBody.append('g').attr('class', 'stack-list');\n        }\n\n        let layers = layersList.selectAll<SVGGElement, any>('g.stack').data(this.data());\n\n        const layersEnter = layers\n            .enter()\n            .append('g')\n            .attr('class', (d, i) => `stack _${i}`);\n\n        layers = layersEnter.merge(layers);\n\n        this._drawLine(layersEnter, layers);\n\n        this._drawArea(layersEnter, layers);\n\n        this._drawDots(chartBody, layers);\n\n        if (this._conf.renderLabel) {\n            this._drawLabels(layers);\n        }\n    }\n\n    /**\n     * Gets or sets the curve factory to use for lines and areas drawn, allowing e.g. step\n     * functions, splines, and cubic interpolation. Typically you would use one of the interpolator functions\n     * provided by {@link https://github.com/d3/d3-shape/blob/master/README.md#curves | d3 curves}.\n     *\n     * Replaces the use of {@link LineChart.interpolate} and {@link LineChart.tension}\n     * in dc.js 3.0 onwards.\n     *\n     * This is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve | line.curve} and\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve | area.curve}.\n     *\n     * Default is {@link https://github.com/d3/d3-shape/blob/master/README.md#curveLinear | | curveLinear}\n     *\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_curve | line.curve}\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#area_curve | area.curve}\n     *\n     * @example\n     * ```\n     * // default\n     * chart\n     *     .curve(d3.curveLinear);\n     * // Add tension to curves that support it\n     * chart\n     *     .curve(d3.curveCardinal.tension(0.5));\n     * // You can use some specialized variation like\n     * // https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n     * chart\n     *     .curve(d3.curveCatmullRom.alpha(0.5));\n     * ```\n     */\n    public curve(): CurveFactory | CurveFactoryLineOnly;\n    public curve(curve: CurveFactory | CurveFactoryLineOnly): this;\n    public curve(curve?) {\n        if (!arguments.length) {\n            return this._curve;\n        }\n        this._curve = curve;\n        return this;\n    }\n\n    /**\n     * Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step\n     * functions, splines, and cubic interpolation.\n     *\n     * Possible values are: 'linear', 'linear-closed', 'step', 'step-before', 'step-after', 'basis',\n     * 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', and\n     * 'monotone'.\n     *\n     * This function exists for backward compatibility. Use {@link LineChart.curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @deprecated since version 3.0 use {@link LineChart.curve} instead\n     * @see {@link LineChart.curve}\n     * @param  {d3.curve} [interpolate=d3.curveLinear]\n     */\n    public interpolate(): CurveFactory | CurveFactoryLineOnly | string;\n    public interpolate(interpolate: CurveFactory | CurveFactoryLineOnly | string): this;\n    public interpolate(interpolate?) {\n        logger.warnOnce(\n            'dc.lineChart.interpolate has been deprecated since version 3.0 use dc.lineChart.curve instead'\n        );\n        if (!arguments.length) {\n            return this._interpolate;\n        }\n        this._interpolate = interpolate;\n        return this;\n    }\n\n    /**\n     * Gets or sets the tension to use for lines drawn, in the range 0 to 1.\n     *\n     * Passed to the {@link https://github.com/d3/d3-shape/blob/master/README.md#curves | d3 curve function}\n     * if it provides a `.tension` function. Example:\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#curveCardinal_tension | curveCardinal.tension}.\n     *\n     * This function exists for backward compatibility. Use {@link LineChart.curve}\n     * which is generic and provides more options.\n     * Value set through `.curve` takes precedence over `.interpolate` and `.tension`.\n     * @deprecated since version 3.0 use {@link LineChart.curve} instead\n     * @see {@link LineChart.curve}\n     * @param  {Number} [tension=0]\n     */\n    public tension(): number;\n    public tension(tension: number): this;\n    public tension(tension?) {\n        logger.warnOnce(\n            'dc.lineChart.tension has been deprecated since version 3.0 use dc.lineChart.curve instead'\n        );\n        if (!arguments.length) {\n            return this._tension;\n        }\n        this._tension = tension;\n        return this;\n    }\n\n    /**\n     * Gets or sets a function that will determine discontinuities in the line which should be\n     * skipped: the path will be broken into separate subpaths if some points are undefined.\n     * This function is passed to\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined | line.defined}\n     *\n     * Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write\n     * custom reduce functions to get this to work, depending on your data. See\n     * {@link https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248 | this GitHub comment}\n     * for more details and an example.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#line_defined | line.defined}\n     */\n    public defined(): BaseAccessor<boolean>;\n    public defined(defined: BaseAccessor<boolean>): this;\n    public defined(defined?) {\n        if (!arguments.length) {\n            return this._defined;\n        }\n        this._defined = defined;\n        return this;\n    }\n\n    /**\n     * Set the line's d3 dashstyle. This value becomes the 'stroke-dasharray' of line. Defaults to empty\n     * array (solid line).\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray | stroke-dasharray}\n     * @example\n     * ```\n     * // create a Dash Gap Dot Gap\n     * chart.dashStyle([3,1,1,1]);\n     * ```\n     */\n    public dashStyle(): number[];\n    public dashStyle(dashStyle: number[]): this;\n    public dashStyle(dashStyle?) {\n        if (!arguments.length) {\n            return this._dashStyle;\n        }\n        this._dashStyle = dashStyle;\n        return this;\n    }\n\n    /**\n     * Get or set render area flag. If the flag is set to true then the chart will render the area\n     * beneath each line and the line chart effectively becomes an area chart.\n     * @param  {Boolean} [renderArea=false]\n     */\n    public renderArea(): boolean;\n    public renderArea(renderArea: boolean): this;\n    public renderArea(renderArea?) {\n        if (!arguments.length) {\n            return this._renderArea;\n        }\n        this._renderArea = renderArea;\n        return this;\n    }\n\n    // To keep it backward compatible, this covers multiple cases\n    // See https://github.com/dc-js/dc.js/issues/1376\n    // It will be removed when interpolate and tension are removed.\n    private _getCurveFactory(): CurveFactory | CurveFactoryLineOnly {\n        let curve = null;\n\n        // _curve takes precedence\n        if (this._curve) {\n            return this._curve;\n        }\n\n        // Approximate the D3v3 behavior\n        if (typeof this._interpolate === 'function') {\n            curve = this._interpolate;\n        } else {\n            // If _interpolate is string\n            const mapping = {\n                linear: curveLinear,\n                'linear-closed': curveLinearClosed,\n                step: curveStep,\n                'step-before': curveStepBefore,\n                'step-after': curveStepAfter,\n                basis: curveBasis,\n                'basis-open': curveBasisOpen,\n                'basis-closed': curveBasisClosed,\n                bundle: curveBundle,\n                cardinal: curveCardinal,\n                'cardinal-open': curveCardinalOpen,\n                'cardinal-closed': curveCardinalClosed,\n                monotone: curveMonotoneX,\n            };\n            curve = mapping[this._interpolate];\n        }\n\n        // Default value\n        if (!curve) {\n            curve = curveLinear;\n        }\n\n        if (this._tension !== null) {\n            if (typeof curve.tension !== 'function') {\n                logger.warn('tension was specified but the curve/interpolate does not support it.');\n            } else {\n                curve = curve.tension(this._tension);\n            }\n        }\n        return curve;\n    }\n\n    private _drawLine(layersEnter: SVGGElementSelection, layers: SVGGElementSelection) {\n        const _line = line()\n            .x((d: any) => this.x()(d.x)) // TODO: revisit later to put proper type\n            .y((d: any) => this.y()(d.y + d.y0)) // TODO: revisit later to put proper type\n            .curve(this._getCurveFactory());\n\n        if (this._defined) {\n            _line.defined(this._defined);\n        }\n\n        const path = layersEnter\n            .append<SVGPathElement>('path')\n            .attr('class', 'line')\n            .attr('stroke', (d, i) => this._colorHelper.getColor(d, i));\n\n        if (this._dashStyle) {\n            // TODO: see https://github.com/dc-js/dc.js/issues/1723\n            // @ts-ignore\n            path.attr('stroke-dasharray', this._dashStyle);\n        }\n\n        transition(\n            layers.select('path.line'),\n            this._conf.transitionDuration,\n            this._conf.transitionDelay\n        )\n            // .ease('linear')\n            .attr('stroke', (d, i) => this._colorHelper.getColor(d, i))\n            .attr('d', d => this._safeD(_line(d.values)));\n    }\n\n    private _drawArea(layersEnter: SVGGElementSelection, layers: SVGGElementSelection): void {\n        if (this._renderArea) {\n            const _area = area()\n                .x((d: any) => this.x()(d.x)) // TODO: revisit later to put proper type\n                .y1((d: any) => this.y()(d.y + d.y0)) // TODO: revisit later to put proper type\n                .y0((d: any) => this.y()(d.y0)) // TODO: revisit later to put proper type\n                .curve(this._getCurveFactory() as CurveFactory); // the types slightly differ for area and line\n\n            if (this._defined) {\n                _area.defined(this._defined);\n            }\n\n            layersEnter\n                .append('path')\n                .attr('class', 'area')\n                .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n                .attr('d', d => this._safeD(_area(d.values)));\n\n            transition(\n                layers.select('path.area'),\n                this._conf.transitionDuration,\n                this._conf.transitionDelay\n            )\n                // .ease('linear')\n                .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n                .attr('d', d => this._safeD(_area(d.values)));\n        }\n    }\n\n    private _safeD(d: string): string {\n        return !d || d.indexOf('NaN') >= 0 ? 'M0,0' : d;\n    }\n\n    private _drawDots(chartBody: SVGGElementSelection, layers: SVGGElementSelection) {\n        if (\n            this.xyTipsOn() === 'always' ||\n            (!(this._conf.brushOn || this._conf.parentBrushOn) && this.xyTipsOn())\n        ) {\n            const tooltipListClass = `${TOOLTIP_G_CLASS}-list`;\n            let tooltips = chartBody.select<SVGGElement>(`g.${tooltipListClass}`);\n\n            if (tooltips.empty()) {\n                tooltips = chartBody.append('g').attr('class', tooltipListClass);\n            }\n\n            layers.each((data, layerIndex) => {\n                let points = data.values;\n                if (this._defined) {\n                    points = points.filter(this._defined);\n                }\n\n                let g = tooltips.select<SVGGElement>(`g.${TOOLTIP_G_CLASS}._${layerIndex}`);\n                if (g.empty()) {\n                    g = tooltips.append('g').attr('class', `${TOOLTIP_G_CLASS} _${layerIndex}`);\n                }\n\n                this._createRefLines(g);\n\n                const dots: Selection<SVGCircleElement, any, SVGGElement, any> = g\n                    .selectAll<SVGCircleElement, any>(`circle.${DOT_CIRCLE_CLASS}`)\n                    .data<any>(points, d => d.x);\n\n                const chart = this;\n                const dotsEnterModify = dots\n                    .enter()\n                    .append('circle')\n                    .attr('class', DOT_CIRCLE_CLASS)\n                    .attr('cx', d => safeNumber(this.x()(d.x)))\n                    .attr('cy', d => safeNumber(this.y()(d.y + d.y0)))\n                    .attr('r', this._getDotRadius())\n                    .style('fill-opacity', this._dataPointFillOpacity)\n                    .style('stroke-opacity', this._dataPointStrokeOpacity)\n                    .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n                    .attr('stroke', (d, i) => this._colorHelper.getColor(d, i))\n                    .on('mousemove', function () {\n                        const dot = select(this);\n                        chart._showDot(dot);\n                        chart._showRefLines(dot, g);\n                    })\n                    .on('mouseout', function () {\n                        const dot = select(this);\n                        chart._hideDot(dot);\n                        chart._hideRefLines(g);\n                    })\n                    .merge(dots);\n\n                dotsEnterModify.call(dot => this._doRenderTitle(dot, data));\n\n                transition(dotsEnterModify, this._conf.transitionDuration)\n                    .attr('cx', d => safeNumber(this.x()(d.x)))\n                    .attr('cy', d => safeNumber(this.y()(d.y + d.y0)))\n                    .attr('fill', (d, i) => this._colorHelper.getColor(d, i));\n\n                dots.exit().remove();\n            });\n        }\n    }\n\n    private _drawLabels(layers: SVGGElementSelection): void {\n        const chart = this;\n        layers.each(function (data, layerIndex) {\n            const layer = select(this);\n            const labels = layer\n                .selectAll<SVGTextElement, any>('text.lineLabel')\n                .data(data.values, d => d.x);\n\n            const labelsEnterModify = labels\n                .enter()\n                .append('text')\n                .attr('class', 'lineLabel')\n                .attr('text-anchor', 'middle')\n                .merge(labels);\n\n            transition(labelsEnterModify, chart._conf.transitionDuration)\n                .attr('x', d => safeNumber(chart.x()(d.x)))\n                .attr('y', d => {\n                    const y = chart.y()(d.y + d.y0) - LABEL_PADDING;\n                    return safeNumber(y);\n                })\n                .text(d => chart._conf.label(d));\n\n            transition(labels.exit(), chart._conf.transitionDuration).attr('height', 0).remove();\n        });\n    }\n\n    private _createRefLines(g: SVGGElementSelection): void {\n        let yRefLine = g.select<SVGPathElement>(`path.${Y_AXIS_REF_LINE_CLASS}`);\n\n        if (yRefLine.empty()) {\n            yRefLine = g.append('path').attr('class', Y_AXIS_REF_LINE_CLASS);\n        }\n\n        yRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n\n        let xRefLine = g.select<SVGPathElement>(`path.${X_AXIS_REF_LINE_CLASS}`);\n\n        if (xRefLine.empty()) {\n            xRefLine = g.append('path').attr('class', X_AXIS_REF_LINE_CLASS);\n        }\n\n        xRefLine.style('display', 'none').attr('stroke-dasharray', '5,5');\n    }\n\n    private _showDot(\n        dot: Selection<SVGCircleElement, unknown, null, undefined>\n    ): Selection<SVGCircleElement, unknown, null, undefined> {\n        dot.style('fill-opacity', 0.8);\n        dot.style('stroke-opacity', 0.8);\n        dot.attr('r', this._dotRadius);\n        return dot;\n    }\n\n    private _showRefLines(\n        dot: Selection<SVGCircleElement, unknown, null, undefined>,\n        g: SVGGElementSelection\n    ): void {\n        const x = dot.attr('cx');\n        const y = dot.attr('cy');\n        const yAxisX = this._yAxisX() - this.margins().left;\n        const yAxisRefPathD = `M${yAxisX} ${y}L${x} ${y}`;\n        const xAxisRefPathD = `M${x} ${this._yAxisHeight()}L${x} ${y}`;\n        g.select(`path.${Y_AXIS_REF_LINE_CLASS}`).style('display', '').attr('d', yAxisRefPathD);\n        g.select(`path.${X_AXIS_REF_LINE_CLASS}`).style('display', '').attr('d', xAxisRefPathD);\n    }\n\n    private _getDotRadius() {\n        return this._dataPointRadius || this._dotRadius;\n    }\n\n    private _hideDot(dot: Selection<SVGCircleElement, unknown, null, undefined>): void {\n        dot.style('fill-opacity', this._dataPointFillOpacity)\n            .style('stroke-opacity', this._dataPointStrokeOpacity)\n            .attr('r', this._getDotRadius());\n    }\n\n    private _hideRefLines(g: SVGGElementSelection): void {\n        g.select(`path.${Y_AXIS_REF_LINE_CLASS}`).style('display', 'none');\n        g.select(`path.${X_AXIS_REF_LINE_CLASS}`).style('display', 'none');\n    }\n\n    private _doRenderTitle(dot: Selection<SVGCircleElement, any, SVGGElement, any>, d): void {\n        if (this._conf.renderTitle) {\n            dot.select('title').remove();\n            dot.append('title').text(pluck2('data', this.titleFn(d.name)));\n        }\n    }\n\n    /**\n     * Turn on/off the mouseover behavior of an individual data point which renders a circle and x/y axis\n     * dashed lines back to each respective axis.\n     * This is ignored if the chart {@link ICoordinateGridMixinConf.brushOn | brush} is on.\n     * Set it to a special value ` 'always' ` to force it.\n     *\n     * It is on by default.\n     */\n    public xyTipsOn(): boolean | 'always';\n    public xyTipsOn(xyTipsOn: 'always'): this;\n    public xyTipsOn(xyTipsOn?) {\n        if (!arguments.length) {\n            return this._xyTipsOn;\n        }\n        this._xyTipsOn = xyTipsOn;\n        return this;\n    }\n\n    /**\n     * Get or set the radius (in px) for dots displayed on the data points.\n     * @param  {Number} [dotRadius=5]\n     */\n    public dotRadius(): number;\n    public dotRadius(dotRadius: number): this;\n    public dotRadius(dotRadius?) {\n        if (!arguments.length) {\n            return this._dotRadius;\n        }\n        this._dotRadius = dotRadius;\n        return this;\n    }\n\n    /**\n     * Always show individual dots for each datapoint.\n     *\n     * If `options` is falsy, it disables data point rendering. If no `options` are provided, the\n     * current `options` values are instead returned.\n     *\n     * By default it uses `{fillOpacity: 0.8, strokeOpacity: 0.0, radius: 2}`\n     *\n     * @example\n     * ```\n     * chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.0})\n     * ```\n     */\n    public renderDataPoints();\n    public renderDataPoints(options): this;\n    public renderDataPoints(options?) {\n        if (!arguments.length) {\n            return {\n                fillOpacity: this._dataPointFillOpacity,\n                strokeOpacity: this._dataPointStrokeOpacity,\n                radius: this._dataPointRadius,\n            };\n        } else if (!options) {\n            this._dataPointFillOpacity = DEFAULT_DOT_OPACITY;\n            this._dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;\n            this._dataPointRadius = null;\n        } else {\n            this._dataPointFillOpacity = options.fillOpacity || 0.8;\n            this._dataPointStrokeOpacity = options.strokeOpacity || 0.0;\n            this._dataPointRadius = options.radius || 2;\n        }\n        return this;\n    }\n\n    public _colorFilter(color, dashstyle, inv?) {\n        return function () {\n            const item = select(this);\n            const match =\n                (item.attr('stroke') === color &&\n                    item.attr('stroke-dasharray') ===\n                        (dashstyle instanceof Array ? dashstyle.join(',') : null)) ||\n                item.attr('fill') === color;\n            return inv ? !match : match;\n        };\n    }\n\n    public legendHighlight(d: LegendItem) {\n        if (!this.isLegendableHidden(d)) {\n            this.g()\n                .selectAll('path.line, path.area')\n                .classed('highlight', this._colorFilter(d.color, d.dashstyle))\n                .classed('fadeout', this._colorFilter(d.color, d.dashstyle, true));\n        }\n    }\n\n    public legendReset() {\n        this.g()\n            .selectAll('path.line, path.area')\n            .classed('highlight', false)\n            .classed('fadeout', false);\n    }\n\n    public legendables(): LegendItem[] {\n        const legendables = super.legendables();\n        if (!this._dashStyle) {\n            return legendables;\n        }\n        return legendables.map(l => {\n            l.dashstyle = this._dashStyle;\n            return l;\n        });\n    }\n}\n","import { LineChart as LineChartNeo } from '../../charts/line-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\nimport { StackMixinExt } from '../base/stack-mixin';\n\nexport class LineChart extends StackMixinExt(\n    CoordinateGridMixinExt(ColorMixinExt(MarginMixinExt(BaseMixinExt(LineChartNeo))))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n}\n\nexport const lineChart = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new LineChart(parent, chartGroup);\n","import { format } from 'd3-format';\nimport { easeQuad } from 'd3-ease';\nimport { interpolateNumber } from 'd3-interpolate';\n\nimport { BaseMixin } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType, MinimalCFGroup } from '../core/types';\nimport { INumberDisplayConf } from './i-number-display-conf';\n\nconst SPAN_CLASS = 'number-display';\n\ntype HTMLSpec = { some: string; one: string; none: string };\n\n/**\n * A display of a single numeric value.\n *\n * Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and\n * a valueAccessor that returns a single value.\n *\n * If the group is a {@link https://github.com/crossfilter/crossfilter/wiki/API-Reference#crossfilter_groupAll | groupAll}\n * then its `.value()` will be displayed. This is the recommended usage.\n *\n * However, if it is given an ordinary group, the `numberDisplay` will show the last bin's value, after\n * sorting with the {@link https://dc-js.github.io/dc.js/docs/html/dc.baseMixin.html#ordering__anchor | ordering}\n * function. `numberDisplay` defaults the `ordering` function to sorting by value, so this will display\n * the largest value if the values are numeric.\n */\nexport class NumberDisplay extends BaseMixin {\n    protected _conf: INumberDisplayConf;\n\n    private _html: HTMLSpec;\n    private _lastValue: number;\n\n    /**\n     * Create a Number Display widget.\n     *\n     * @example\n     * ```\n     * // create a number display under #chart-container1 element using the default global chart group\n     * const display1 = new NumberDisplay('#chart-container1');\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            transitionDuration: 250, // good default\n            transitionDelay: 0,\n            formatNumber: format('.2s'),\n        });\n\n        this.dataProvider().configure({\n            ordering: kv => kv.value, // default to ordering by value, to emulate old group.top(1) behavior when multiple groups\n        });\n\n        this._html = { one: '', some: '', none: '' };\n        this._lastValue = undefined;\n\n        // dimension not required\n        this._mandatoryAttributes(['group']);\n    }\n\n    public configure(conf: INumberDisplayConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): INumberDisplayConf {\n        return this._conf;\n    }\n\n    // TODO: chart specific DataProvider\n    public data() {\n        const group: MinimalCFGroup & { value? } = this.dataProvider().conf().group;\n\n        const valObj = group.value ? group.value() : this._maxBin(group.all());\n\n        return this.dataProvider().conf().valueAccessor(valObj);\n    }\n\n    /**\n     * Gets or sets an optional object specifying HTML templates to use depending on the number\n     * displayed.  The text `%number` will be replaced with the current value.\n     * - one: HTML template to use if the number is 1\n     * - zero: HTML template to use if the number is 0\n     * - some: HTML template to use otherwise\n     *\n     * by default is uses `{one: '', some: '', none: ''}`\n     *\n     * @example\n     * ```\n     * numberWidget.html({\n     *      one:'%number record',\n     *      some:'%number records',\n     *      none:'no records'})\n     * ```\n     */\n    public html(): HTMLSpec;\n    public html(html): this;\n    public html(html?) {\n        if (!arguments.length) {\n            return this._html;\n        }\n        if (html.none) {\n            this._html.none = html.none; // if none available\n        } else if (html.one) {\n            this._html.none = html.one; // if none not available use one\n        } else if (html.some) {\n            this._html.none = html.some; // if none and one not available use some\n        }\n        if (html.one) {\n            this._html.one = html.one; // if one available\n        } else if (html.some) {\n            this._html.one = html.some; // if one not available use some\n        }\n        if (html.some) {\n            this._html.some = html.some; // if some available\n        } else if (html.one) {\n            this._html.some = html.one; // if some not available use one\n        }\n        return this;\n    }\n\n    /**\n     * Calculate and return the underlying value of the display.\n     */\n    public value(): number {\n        return this.data();\n    }\n\n    private _maxBin(all) {\n        if (!all.length) {\n            return null;\n        }\n        const sorted = this._computeOrderedGroups(all);\n        return sorted[sorted.length - 1];\n    }\n\n    protected _doRender(): this {\n        const newValue: number = this.value();\n        let span = this.selectAll<HTMLSpanElement, any>(`.${SPAN_CLASS}`);\n\n        if (span.empty()) {\n            span = span.data([0]).enter().append('span').attr('class', SPAN_CLASS).merge(span);\n        }\n\n        {\n            const chart = this;\n            span.transition()\n                .duration(chart._conf.transitionDuration)\n                .delay(chart._conf.transitionDelay)\n                .ease(easeQuad)\n                .tween('text', function () {\n                    // [XA] don't try and interpolate from Infinity, else this breaks.\n                    const interpStart = isFinite(chart._lastValue) ? chart._lastValue : 0;\n                    const interp = interpolateNumber(interpStart || 0, newValue);\n                    chart._lastValue = newValue;\n\n                    // need to save it in D3v4\n                    const node = this;\n                    return t => {\n                        let html = null;\n                        const num = chart._conf.formatNumber(interp(t));\n                        if (newValue === 0 && chart._html.none !== '') {\n                            html = chart._html.none;\n                        } else if (newValue === 1 && chart._html.one !== '') {\n                            html = chart._html.one;\n                        } else if (chart._html.some !== '') {\n                            html = chart._html.some;\n                        }\n                        node.innerHTML = html ? html.replace('%number', num) : num;\n                    };\n                });\n        }\n        return this;\n    }\n\n    protected _doRedraw(): this {\n        return this._doRender();\n    }\n}\n","import { NumberDisplay as NumberDisplayNeo } from '../../charts/number-display';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType, NumberFormatFn } from '../../core/types';\n\nexport class NumberDisplay extends BaseMixinExt(NumberDisplayNeo) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set a function to format the value for the display.\n     * @see {@link https://github.com/d3/d3-format/blob/master/README.md#format d3.format}\n     * @param [formatter=d3.format('.2s')]\n     */\n    public formatNumber(): NumberFormatFn;\n    public formatNumber(formatter: NumberFormatFn): this;\n    public formatNumber(formatter?) {\n        if (!arguments.length) {\n            return this._conf.formatNumber;\n        }\n        this.configure({ formatNumber: formatter });\n        return this;\n    }\n}\n\nexport const numberDisplay = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new NumberDisplay(parent, chartGroup);\n","import { min, sum } from 'd3-array';\nimport { Arc, arc, DefaultArcObject, Pie, pie } from 'd3-shape';\nimport { select, Selection } from 'd3-selection';\nimport { interpolate } from 'd3-interpolate';\n\nimport { ColorMixin } from '../base/color-mixin';\nimport { BaseMixin } from '../base/base-mixin';\nimport { transition } from '../core/core';\nimport { ChartGroupType, ChartParentType, LegendItem, SVGGElementSelection } from '../core/types';\nimport { IPieChartConf } from './i-pie-chart-conf';\nimport { adaptHandler } from '../core/d3compat';\nimport { CFDataCapHelper } from '../data/c-f-data-cap-helper';\n\nconst DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n/**\n * The pie chart implementation is usually used to visualize a small categorical distribution.  The pie\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values. Slices are ordered by {@link ICFSimpleAdapterConf.ordering | ordering}\n * which defaults to sorting by key.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n */\n\nexport class PieChart extends ColorMixin(BaseMixin) {\n    public _conf: IPieChartConf;\n\n    private _sliceCssClass: string;\n    private _labelCssClass: string;\n    private _sliceGroupCssClass: string;\n    private _labelGroupCssClass: string;\n    private _emptyCssClass: string;\n    private _computedRadius: number;\n    private _g: Selection<SVGGElement, any, any, any>;\n    private _cx: number;\n    private _cy: number;\n\n    /**\n     * Create a Pie Chart\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a pie chart under #chart-container1 element using the default global chart group\n     * const chart1 = new PieChart('#chart-container1');\n     * // create a pie chart under #chart-container2 element using chart group A\n     * const chart2 = new PieChart('#chart-container2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            colorAccessor: d => this._conf.keyAccessor(d),\n            emptyTitle: 'empty',\n            label: d => this._conf.keyAccessor(d),\n            renderLabel: true,\n            title: d => `${this._conf.keyAccessor(d)}: ${d._value}`,\n            transitionDuration: 350,\n            transitionDelay: 0,\n            radius: undefined, // specified radius, if any\n            innerRadius: 0,\n            externalRadiusPadding: 0,\n            minAngleForLabel: DEFAULT_MIN_ANGLE_FOR_LABEL,\n            externalLabels: undefined,\n            drawPaths: false,\n        });\n\n        this.dataProvider(new CFDataCapHelper());\n\n        this._sliceCssClass = 'pie-slice';\n        this._labelCssClass = 'pie-label';\n        this._sliceGroupCssClass = 'pie-slice-group';\n        this._labelGroupCssClass = 'pie-label-group';\n        this._emptyCssClass = 'empty-chart';\n\n        this._computedRadius = undefined;\n\n        this._g = undefined;\n        this._cx = undefined;\n        this._cy = undefined;\n    }\n\n    public configure(conf: IPieChartConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IPieChartConf {\n        return this._conf;\n    }\n\n    protected _doRender(): this {\n        this.resetSvg();\n\n        this._g = this.svg().append('g').attr('transform', `translate(${this.cx()},${this.cy()})`);\n\n        this._g.append('g').attr('class', this._sliceGroupCssClass);\n        this._g.append('g').attr('class', this._labelGroupCssClass);\n\n        this._drawChart();\n\n        return this;\n    }\n\n    private _drawChart(): void {\n        // set radius from chart size if none given, or if given radius is too large\n        const maxRadius = min([this.width(), this.height()]) / 2;\n        this._computedRadius =\n            this._conf.radius && this._conf.radius < maxRadius ? this._conf.radius : maxRadius;\n\n        const arcs: Arc<any, DefaultArcObject> = this._buildArcs();\n\n        const pieLayout: Pie<any, any> = this._pieLayout();\n\n        let pieData;\n        // if we have data...\n        // @ts-ignore // TODO: better typing\n        if (sum(this.data(), d => d._value)) {\n            pieData = pieLayout(this.data());\n            this._g.classed(this._emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            pieData = pieLayout([\n                { key: this._conf.emptyTitle, _value: 1, others: [this._conf.emptyTitle] },\n            ]);\n            this._g.classed(this._emptyCssClass, true);\n        }\n\n        if (this._g) {\n            const slices: SVGGElementSelection = this._g\n                .select<SVGGElement>(`g.${this._sliceGroupCssClass}`)\n                .selectAll<SVGGElement, any>(`g.${this._sliceCssClass}`)\n                .data(pieData);\n\n            const labels = this._g\n                .select<SVGGElement>(`g.${this._labelGroupCssClass}`)\n                .selectAll<SVGTextElement, any>(`text.${this._labelCssClass}`)\n                .data<any>(pieData);\n\n            this._removeElements(slices, labels);\n\n            this._createElements(slices, labels, arcs, pieData);\n\n            this._updateElements(pieData, arcs);\n\n            this._highlightFilter();\n\n            transition(this._g, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n                'transform',\n                `translate(${this.cx()},${this.cy()})`\n            );\n        }\n    }\n\n    private _createElements(\n        slices: SVGGElementSelection,\n        labels: Selection<SVGTextElement, any, SVGGElement, any>,\n        arcs: Arc<any, DefaultArcObject>,\n        pieData\n    ) {\n        const slicesEnter = this._createSliceNodes(slices);\n\n        this._createSlicePath(slicesEnter, arcs);\n\n        this._createTitles(slicesEnter);\n\n        this._createLabels(labels, pieData, arcs);\n    }\n\n    private _createSliceNodes(slices: SVGGElementSelection): SVGGElementSelection {\n        return slices\n            .enter()\n            .append('g')\n            .attr('class', (d, i) => `${this._sliceCssClass} _${i}`);\n    }\n\n    private _createSlicePath(\n        slicesEnter: SVGGElementSelection,\n        arcs: Arc<any, DefaultArcObject>\n    ): void {\n        const slicePath = slicesEnter\n            .append('path')\n            .attr('fill', (d, i) => this._fill(d, i))\n            .on(\n                'click',\n                adaptHandler(d => this._onClick(d))\n            )\n            .attr('d', (d, i) => this._safeArc(d, i, arcs));\n\n        const tranNodes = transition(\n            slicePath,\n            this._conf.transitionDuration,\n            this._conf.transitionDelay\n        );\n        if (tranNodes.attrTween) {\n            const chart = this;\n            tranNodes.attrTween('d', function (d) {\n                return chart._tweenPie(d, this);\n            });\n        }\n    }\n\n    private _createTitles(slicesEnter: SVGGElementSelection): void {\n        if (this._conf.renderTitle) {\n            slicesEnter.append('title').text(d => this._conf.title(d.data));\n        }\n    }\n\n    private _applyLabelText(labels: Selection<SVGTextElement, any, SVGGElement, any>): void {\n        labels.text(d => {\n            const data = d.data;\n            if (\n                (this._sliceHasNoData(data) || this._sliceTooSmall(d)) &&\n                !this._isSelectedSlice(d)\n            ) {\n                return '';\n            }\n            return this._conf.label(d.data);\n        });\n    }\n\n    private _positionLabels(\n        labels: Selection<SVGTextElement, any, SVGGElement, any>,\n        arcs: Arc<any, DefaultArcObject>\n    ): void {\n        this._applyLabelText(labels);\n        transition(labels, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('transform', d => this._labelPosition(d, arcs))\n            .attr('text-anchor', 'middle');\n    }\n\n    private _highlightSlice(i: number, whether): void {\n        this.select(`g.pie-slice._${i}`).classed('highlight', whether);\n    }\n\n    private _createLabels(\n        labels: Selection<SVGTextElement, any, SVGGElement, any>,\n        pieData,\n        arcs: Arc<any, DefaultArcObject>\n    ) {\n        if (this._conf.renderLabel) {\n            const labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', (d, i) => {\n                    let classes = `${this._sliceCssClass} ${this._labelCssClass} _${i}`;\n                    if (this._conf.externalLabels) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on(\n                    'click',\n                    adaptHandler(d => this._onClick(d))\n                )\n                .on(\n                    'mouseover',\n                    adaptHandler(d => {\n                        this._highlightSlice(d.index, true);\n                    })\n                )\n                .on(\n                    'mouseout',\n                    adaptHandler(d => {\n                        this._highlightSlice(d.index, false);\n                    })\n                );\n            this._positionLabels(labelsEnter, arcs);\n            if (this._conf.externalLabels && this._conf.drawPaths) {\n                this._updateLabelPaths(pieData, arcs);\n            }\n        }\n    }\n\n    private _updateLabelPaths(pieData, arcs: { centroid: (arg0: any) => any }): void {\n        let polyline = this._g\n            .selectAll<SVGPolylineElement, any>(`polyline.${this._sliceCssClass}`)\n            .data(pieData);\n\n        polyline.exit().remove();\n\n        polyline = polyline\n            .enter()\n            .append('polyline')\n            .attr('class', (d, i) => `pie-path _${i} ${this._sliceCssClass}`)\n            .on(\n                'click',\n                adaptHandler(d => this._onClick(d))\n            )\n            .on(\n                'mouseover',\n                adaptHandler(d => {\n                    this._highlightSlice(d.index, true);\n                })\n            )\n            .on(\n                'mouseout',\n                adaptHandler(d => {\n                    this._highlightSlice(d.index, false);\n                })\n            )\n            .merge(polyline);\n\n        const arc2 = arc()\n            .outerRadius(\n                this._computedRadius -\n                    this._conf.externalRadiusPadding +\n                    this._conf.externalLabels\n            )\n            .innerRadius(this._computedRadius - this._conf.externalRadiusPadding);\n        const tranNodes = transition(\n            polyline,\n            this._conf.transitionDuration,\n            this._conf.transitionDelay\n        );\n        // this is one rare case where d3.selection differs from d3.transition\n        if (tranNodes.attrTween) {\n            tranNodes.attrTween('points', function (d) {\n                let current = this._current || d;\n                current = { startAngle: current.startAngle, endAngle: current.endAngle };\n                const _interpolate = interpolate(current, d);\n                this._current = _interpolate(0);\n                return t => {\n                    const d2 = _interpolate(t);\n                    return [arcs.centroid(d2), arc2.centroid(d2)];\n                };\n            });\n        } else {\n            tranNodes.attr('points', d => [arcs.centroid(d), arc2.centroid(d)]);\n        }\n        tranNodes.style('visibility', d =>\n            d.endAngle - d.startAngle < 0.0001 ? 'hidden' : 'visible'\n        );\n    }\n\n    private _updateElements(pieData: any, arcs: Arc<any, DefaultArcObject>): void {\n        this._updateSlicePaths(pieData, arcs);\n        this._updateLabels(pieData, arcs);\n        this._updateTitles(pieData);\n    }\n\n    private _updateSlicePaths(pieData, arcs: Arc<any, DefaultArcObject>) {\n        const slicePaths = this._g\n            .selectAll(`g.${this._sliceCssClass}`)\n            .data(pieData)\n            .select('path')\n            .attr('d', (d, i) => this._safeArc(d, i, arcs));\n        const tranNodes = transition(\n            slicePaths,\n            this._conf.transitionDuration,\n            this._conf.transitionDelay\n        );\n        if (tranNodes.attrTween) {\n            const chart = this;\n            tranNodes.attrTween('d', function (d) {\n                return chart._tweenPie(d, this);\n            });\n        }\n        tranNodes.attr('fill', (d, i) => this._fill(d, i));\n    }\n\n    private _updateLabels(pieData, arcs: Arc<any, DefaultArcObject>): void {\n        if (this._conf.renderLabel) {\n            const labels = this._g\n                .selectAll<SVGTextElement, any>(`text.${this._labelCssClass}`)\n                .data(pieData);\n            this._positionLabels(labels, arcs);\n            if (this._conf.externalLabels && this._conf.drawPaths) {\n                this._updateLabelPaths(pieData, arcs);\n            }\n        }\n    }\n\n    private _updateTitles(pieData) {\n        if (this._conf.renderTitle) {\n            this._g\n                .selectAll<SVGGElement, any>(`g.${this._sliceCssClass}`)\n                .data<any>(pieData)\n                .select('title')\n                .text(d => this._conf.title(d.data));\n        }\n    }\n\n    private _removeElements(\n        slices: SVGGElementSelection,\n        labels: Selection<SVGTextElement, any, SVGGElement, any>\n    ) {\n        slices.exit().remove();\n        labels.exit().remove();\n    }\n\n    private _highlightFilter(): void {\n        const chart = this;\n        if (this.hasFilter()) {\n            this.selectAll(`g.${this._sliceCssClass}`).each(function (d) {\n                if (chart._isSelectedSlice(d)) {\n                    chart.highlightSelected(this);\n                } else {\n                    chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            this.selectAll(`g.${this._sliceCssClass}`).each(function () {\n                chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     */\n    public cx(): number;\n    public cx(cx: number): this;\n    public cx(cx?) {\n        if (!arguments.length) {\n            return this._cx || this.width() / 2;\n        }\n        this._cx = cx;\n        return this;\n    }\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     */\n    public cy(): number;\n    public cy(cy: number): this;\n    public cy(cy?) {\n        if (!arguments.length) {\n            return this._cy || this.height() / 2;\n        }\n        this._cy = cy;\n        return this;\n    }\n\n    private _buildArcs(): Arc<any, DefaultArcObject> {\n        return arc()\n            .outerRadius(this._computedRadius - this._conf.externalRadiusPadding)\n            .innerRadius(this._conf.innerRadius);\n    }\n\n    private _isSelectedSlice(d): boolean {\n        return this.hasFilter(this._conf.keyAccessor(d.data));\n    }\n\n    protected _doRedraw(): this {\n        this._drawChart();\n        return this;\n    }\n\n    private _pieLayout(): Pie<any, any> {\n        // The 2nd argument is type of datum that will be used. TODO: revisit after refactoring.\n        return (\n            pie()\n                .sort(null)\n                // @ts-ignore // TODO: better typing\n                .value(d => d._value) as Pie<any, any>\n        );\n    }\n\n    private _sliceTooSmall(d): boolean {\n        const angle = d.endAngle - d.startAngle;\n        return isNaN(angle) || angle < this._conf.minAngleForLabel;\n    }\n\n    private _sliceHasNoData(d): boolean {\n        return d._value === 0;\n    }\n\n    private _isOffCanvas(current): boolean {\n        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);\n    }\n\n    private _fill(d, i: number): string {\n        return this._colorHelper.getColor(d.data, i);\n    }\n\n    private _onClick(d): void {\n        if (this._g.attr('class') !== this._emptyCssClass) {\n            this.onClick(d.data);\n        }\n    }\n\n    private _safeArc(d, i: number, _arc: Arc<any, DefaultArcObject>): string {\n        let path = _arc(d, i);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    private _labelPosition(d, _arc: Arc<any, DefaultArcObject>) {\n        let centroid: number[];\n        if (this._conf.externalLabels) {\n            centroid = arc()\n                .outerRadius(\n                    this._computedRadius -\n                        this._conf.externalRadiusPadding +\n                        this._conf.externalLabels\n                )\n                .innerRadius(\n                    this._computedRadius -\n                        this._conf.externalRadiusPadding +\n                        this._conf.externalLabels\n                )\n                .centroid(d);\n        } else {\n            centroid = _arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return `translate(${centroid})`;\n        }\n    }\n\n    public legendables(): LegendItem[] {\n        return this.data().map((d, i) => {\n            // TODO: correct typing\n            const legendable: { [key: string]: any } = {\n                name: d.key,\n                data: d.value,\n                others: d.others,\n                chart: this,\n            };\n            legendable.color = this._colorHelper.getColor(d, i);\n            return legendable;\n        });\n    }\n\n    public legendHighlight(d: LegendItem) {\n        this._highlightSliceFromLegendable(d, true);\n    }\n\n    public legendReset(d: LegendItem) {\n        this._highlightSliceFromLegendable(d, false);\n    }\n\n    public legendToggle(d: LegendItem) {\n        this.onClick({ key: d.name, others: d.others });\n    }\n\n    private _highlightSliceFromLegendable(legendable: LegendItem, highlighted: boolean): void {\n        this.selectAll<SVGGElement, any>('g.pie-slice').each(function (d) {\n            if (legendable.name === d.data.key) {\n                select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    private _tweenPie(b, element) {\n        b.innerRadius = this._conf.innerRadius;\n        let current = element._current;\n        if (this._isOffCanvas(current)) {\n            current = { startAngle: 0, endAngle: 0 };\n        } else {\n            // only interpolate startAngle & endAngle, not the whole data object\n            current = { startAngle: current.startAngle, endAngle: current.endAngle };\n        }\n        const i = interpolate(current, b);\n        element._current = i(0);\n        return t => this._safeArc(i(t), 0, this._buildArcs());\n    }\n}\n","import { PieChart as PieChartNeo } from '../../charts/pie-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { CapMixinExt } from '../base/cap-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\n\nexport class PieChart extends CapMixinExt(ColorMixinExt(BaseMixinExt(PieChartNeo))) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Title to use for the only slice when there is no data.\n     */\n    public emptyTitle(): string;\n    public emptyTitle(title: string): this;\n    public emptyTitle(title?) {\n        if (arguments.length === 0) {\n            return this._conf.emptyTitle;\n        }\n        this.configure({ emptyTitle: title });\n        return this;\n    }\n\n    /**\n     * Get or set the maximum number of slices the pie chart will generate. The top slices are determined by\n     * value from high to low. Other slices exceeding the cap will be rolled up into one single *Others* slice.\n     */\n    public slicesCap(cap?: number): this | number {\n        return this.cap(cap);\n    }\n\n    /**\n     * Get or set the external radius padding of the pie chart. This will force the radius of the\n     * pie chart to become smaller or larger depending on the value.\n     * @param [externalRadiusPadding=0]\n     */\n    public externalRadiusPadding(): number;\n    public externalRadiusPadding(externalRadiusPadding: number): this;\n    public externalRadiusPadding(externalRadiusPadding?) {\n        if (!arguments.length) {\n            return this._conf.externalRadiusPadding;\n        }\n        this.configure({ externalRadiusPadding: externalRadiusPadding });\n        return this;\n    }\n\n    /**\n     * Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the\n     * pie chart will be rendered as a doughnut chart.\n     * @param [innerRadius=0]\n     */\n    public innerRadius(): number;\n    public innerRadius(innerRadius: number): this;\n    public innerRadius(innerRadius?) {\n        if (!arguments.length) {\n            return this._conf.innerRadius;\n        }\n        this.configure({ innerRadius: innerRadius });\n        return this;\n    }\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     */\n    public radius(): number;\n    public radius(radius: number): this;\n    public radius(radius?) {\n        if (!arguments.length) {\n            return this._conf.radius;\n        }\n        this.configure({ radius: radius });\n        return this;\n    }\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @param [minAngleForLabel=0.5]\n     */\n    public minAngleForLabel(): number;\n    public minAngleForLabel(minAngleForLabel: number): this;\n    public minAngleForLabel(minAngleForLabel?) {\n        if (!arguments.length) {\n            return this._conf.minAngleForLabel;\n        }\n        this.configure({ minAngleForLabel: minAngleForLabel });\n        return this;\n    }\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     */\n    public externalLabels(): number;\n    public externalLabels(externalLabels: number): this;\n    public externalLabels(externalLabels?) {\n        if (arguments.length === 0) {\n            return this._conf.externalLabels;\n        } else if (externalLabels) {\n            // TODO: figure out why there is special handling, do we need it?\n            this.configure({ externalLabels: externalLabels });\n        } else {\n            this.configure({ externalLabels: undefined });\n        }\n\n        return this;\n    }\n\n    /**\n     * Get or set whether to draw lines from pie slices to their labels.\n     *\n     */\n    public drawPaths(): boolean;\n    public drawPaths(drawPaths: boolean): this;\n    public drawPaths(drawPaths?) {\n        if (arguments.length === 0) {\n            return this._conf.drawPaths;\n        }\n        this.configure({ drawPaths: drawPaths });\n        return this;\n    }\n}\n\nexport const pieChart = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new PieChart(parent, chartGroup);\n","import { extent } from 'd3-array';\nimport { Axis, axisBottom } from 'd3-axis';\nimport { scaleLinear } from 'd3-scale';\n\nimport { MarginMixin } from '../base/margin-mixin';\nimport { ColorMixin } from '../base/color-mixin';\nimport { transition } from '../core/core';\nimport { Selection } from 'd3-selection';\nimport {\n    ChartGroupType,\n    ChartParentType,\n    MinimalXYScale,\n    SVGGElementSelection,\n} from '../core/types';\nimport { IRowChartConf } from './i-row-chart-conf';\nimport { adaptHandler } from '../core/d3compat';\nimport { CFDataCapHelper } from '../data/c-f-data-cap-helper';\n\n/**\n * Concrete row chart implementation.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n */\n\nexport class RowChart extends ColorMixin(MarginMixin) {\n    public _conf: IRowChartConf;\n\n    private _g: Selection<SVGGElement, any, any, any>;\n    private _labelOffsetY: number;\n    private _dyOffset: string;\n    private _rowCssClass: string;\n    private _titleRowCssClass: string;\n    private _x: MinimalXYScale;\n    private _xAxis: Axis<any>;\n    private _rowData; // This is chart data\n    public rowsCap; // Alias for this.cap\n\n    /**\n     * Create a Row Chart.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a row chart under #chart-container1 element using the default global chart group\n     * const chart1 = new RowChart('#chart-container1');\n     * // create a row chart under #chart-container2 element using chart group A\n     * const chart2 = new RowChart('#chart-container2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            label: d => this._conf.keyAccessor(d),\n            renderLabel: true,\n            title: d => `${this._conf.keyAccessor(d)}: ${d._value}`,\n            labelOffsetX: 10,\n            labelOffsetY: undefined,\n            titleLabelOffsetX: 2,\n            gap: 5,\n            fixedBarHeight: undefined,\n            renderTitleLabel: false,\n            elasticX: undefined,\n        });\n\n        this.dataProvider(new CFDataCapHelper());\n\n        this._g = undefined;\n\n        this._dyOffset = '0.35em'; // this helps center labels https://github.com/d3/d3-3.x-api-reference/blob/master/SVG-Shapes.md#svg_text\n        this._rowCssClass = 'row';\n        this._titleRowCssClass = 'titlerow';\n\n        this._x = undefined;\n\n        this._xAxis = axisBottom(undefined);\n\n        this._rowData = undefined;\n    }\n\n    public configure(conf: IRowChartConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IRowChartConf {\n        return this._conf;\n    }\n\n    private _calculateAxisScale(): void {\n        if (!this._x || this._conf.elasticX) {\n            const _extent = extent<any, number>(this._rowData, d => d._value);\n            if (_extent[0] > 0) {\n                _extent[0] = 0;\n            }\n            if (_extent[1] < 0) {\n                _extent[1] = 0;\n            }\n            this._x = scaleLinear().domain(_extent).range([0, this.effectiveWidth()]);\n        }\n        this._xAxis.scale(this._x);\n    }\n\n    private _drawAxis(): void {\n        let axisG = this._g.select<SVGGElement>('g.axis');\n\n        this._calculateAxisScale();\n\n        if (axisG.empty()) {\n            axisG = this._g.append('g').attr('class', 'axis');\n        }\n        axisG.attr('transform', `translate(0, ${this.effectiveHeight()})`);\n\n        transition(axisG, this._conf.transitionDuration, this._conf.transitionDelay).call(\n            this._xAxis\n        );\n    }\n\n    public _doRender(): this {\n        this.resetSvg();\n\n        this._g = this.svg()\n            .append('g')\n            .attr('transform', `translate(${this.margins().left},${this.margins().top})`);\n\n        this._drawChart();\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the x scale. The x scale can be any d3\n     * {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale}.\n     * @see {@link https://github.com/d3/d3-scale/blob/master/README.md | d3.scale}\n     */\n    public x(): MinimalXYScale;\n    public x(scale: MinimalXYScale): this;\n    public x(scale?) {\n        if (!arguments.length) {\n            return this._x;\n        }\n        this._x = scale;\n        return this;\n    }\n\n    private _drawGridLines() {\n        this._g\n            .selectAll<SVGGElement, any>('g.tick')\n            .select<SVGLineElement>('line.grid-line')\n            .remove();\n\n        this._g\n            .selectAll<SVGGElement, any>('g.tick')\n            .append('line')\n            .attr('class', 'grid-line')\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', 0)\n            .attr('y2', () => -this.effectiveHeight());\n    }\n\n    private _drawChart() {\n        this._rowData = this.data();\n\n        this._drawAxis();\n        this._drawGridLines();\n\n        let rows: SVGGElementSelection = this._g\n            .selectAll<SVGGElement, any>(`g.${this._rowCssClass}`)\n            .data<any>(this._rowData);\n\n        this._removeElements(rows);\n        rows = this._createElements(rows).merge(rows);\n        this._updateElements(rows);\n    }\n\n    private _createElements(rows: SVGGElementSelection): SVGGElementSelection {\n        const rowEnter: SVGGElementSelection = rows\n            .enter()\n            .append('g')\n            .attr('class', (d, i) => `${this._rowCssClass} _${i}`);\n\n        rowEnter.append('rect').attr('width', 0);\n\n        this._createLabels(rowEnter);\n\n        return rowEnter;\n    }\n\n    private _removeElements(rows: SVGGElementSelection): void {\n        rows.exit().remove();\n    }\n\n    private _rootValue(): number {\n        const root = this._x(0);\n        return root === -Infinity || root !== root ? this._x(1) : root;\n    }\n\n    private _updateElements(rows: SVGGElementSelection): void {\n        const n = this._rowData.length;\n\n        let height: number;\n        height = this._conf.fixedBarHeight\n            ? this._conf.fixedBarHeight\n            : (this.effectiveHeight() - (n + 1) * this._conf.gap) / n;\n\n        // vertically align label in center unless they override the value via property setter\n        this._labelOffsetY =\n            this._conf.labelOffsetY === undefined ? height / 2 : this._conf.labelOffsetY;\n\n        const rect = rows\n            .attr('transform', (d, i) => `translate(0,${(i + 1) * this._conf.gap + i * height})`)\n            .select('rect')\n            .attr('height', height)\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .on(\n                'click',\n                adaptHandler(d => this._onClick(d))\n            )\n            .classed('deselected', d => (this.hasFilter() ? !this._isSelectedRow(d) : false))\n            .classed('selected', d => (this.hasFilter() ? this._isSelectedRow(d) : false));\n\n        transition(rect, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('width', d => Math.abs(this._rootValue() - this._x(d._value)))\n            .attr('transform', d => this._translateX(d));\n\n        this._createTitles(rows);\n        this._updateLabels(rows);\n    }\n\n    private _createTitles(rows: SVGGElementSelection): void {\n        if (this._conf.renderTitle) {\n            rows.select('title').remove();\n            rows.append('title').text(this._conf.title);\n        }\n    }\n\n    private _createLabels(rowEnter: SVGGElementSelection): void {\n        if (this._conf.renderLabel) {\n            rowEnter.append('text').on(\n                'click',\n                adaptHandler(d => this._onClick(d))\n            );\n        }\n        if (this._conf.renderTitleLabel) {\n            rowEnter\n                .append('text')\n                .attr('class', this._titleRowCssClass)\n                .on(\n                    'click',\n                    adaptHandler(d => this._onClick(d))\n                );\n        }\n    }\n\n    private _updateLabels(rows: SVGGElementSelection): void {\n        if (this._conf.renderLabel) {\n            const lab = rows\n                .select('text')\n                .attr('x', this._conf.labelOffsetX)\n                .attr('y', this._labelOffsetY)\n                .attr('dy', this._dyOffset)\n                .on(\n                    'click',\n                    adaptHandler(d => this._onClick(d))\n                )\n                .attr('class', (d, i) => `${this._rowCssClass} _${i}`)\n                .text(d => this._conf.label(d));\n\n            transition(\n                lab,\n                this._conf.transitionDuration,\n                this._conf.transitionDelay\n            ).attr('transform', d => this._translateX(d));\n        }\n\n        if (this._conf.renderTitleLabel) {\n            const titlelab = rows\n                .select<SVGTextElement>(`.${this._titleRowCssClass}`)\n                .attr('x', this.effectiveWidth() - this._conf.titleLabelOffsetX)\n                .attr('y', this._labelOffsetY)\n                .attr('dy', this._dyOffset)\n                .attr('text-anchor', 'end')\n                .on('click', d => adaptHandler(this._onClick(d)))\n                .attr('class', (d, i) => `${this._titleRowCssClass} _${i}`)\n                .text(d => this._conf.title(d));\n\n            transition(\n                titlelab,\n                this._conf.transitionDuration,\n                this._conf.transitionDelay\n            ).attr('transform', d => this._translateX(d));\n        }\n    }\n\n    private _onClick(d, i?: number) {\n        this.onClick(d, i);\n    }\n\n    private _translateX(d): string {\n        const x = this._x(d._value);\n        const x0 = this._rootValue();\n        const s = x > x0 ? x0 : x;\n\n        return `translate(${s},0)`;\n    }\n\n    public _doRedraw() {\n        this._drawChart();\n        return this;\n    }\n\n    /**\n     * Get or sets the x axis for the row chart instance.\n     * See the {@link https://github.com/d3/d3-axis/blob/master/README.md | d3.axis}\n     * documention for more information.\n     *\n     * @example\n     * ```\n     * // customize x axis tick format\n     * chart.xAxis().tickFormat(function (v) {return v + '%';});\n     * // customize x axis tick values\n     * chart.xAxis().tickValues([0, 100, 200, 300]);\n     * // use a top-oriented axis. Note: position of the axis and grid lines will need to\n     * // be set manually, see https://dc-js.github.io/dc.js/examples/row-top-axis.html\n     * chart.xAxis(d3.axisTop())\n     * ```\n     */\n    public xAxis(): Axis<any>;\n    public xAxis(xAxis: Axis<any>): this;\n    public xAxis(xAxis?) {\n        if (!arguments.length) {\n            return this._xAxis;\n        }\n        this._xAxis = xAxis;\n        return this;\n    }\n\n    private _isSelectedRow(d): boolean {\n        return this.hasFilter(this._conf.keyAccessor(d));\n    }\n}\n","import { RowChart as RowChartNeo } from '../../charts/row-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { CapMixinExt } from '../base/cap-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\n\nexport class RowChart extends CapMixinExt(\n    ColorMixinExt(MarginMixinExt(BaseMixinExt(RowChartNeo)))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.rowsCap = this.cap;\n    }\n\n    /**\n     * Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'.\n     * @param [renderTitleLabel=false]\n     */\n    public renderTitleLabel(): boolean;\n    public renderTitleLabel(renderTitleLabel: boolean): this;\n    public renderTitleLabel(renderTitleLabel?) {\n        if (!arguments.length) {\n            return this._conf.renderTitleLabel;\n        }\n        this.configure({ renderTitleLabel: renderTitleLabel });\n        return this;\n    }\n\n    /**\n     * Get or set the fixed bar height. Default is [false] which will auto-scale bars.\n     * For example, if you want to fix the height for a specific number of bars (useful in TopN charts)\n     * you could fix height as follows (where count = total number of bars in your TopN and gap is\n     * your vertical gap space).\n     * @example\n     * chart.fixedBarHeight( chartheight - (count + 1) * gap / count);\n     * @param [fixedBarHeight=false]\n     */\n    public fixedBarHeight(): number;\n    public fixedBarHeight(fixedBarHeight: number): this;\n    public fixedBarHeight(fixedBarHeight?) {\n        if (!arguments.length) {\n            return this._conf.fixedBarHeight;\n        }\n        this.configure({ fixedBarHeight: fixedBarHeight });\n        return this;\n    }\n\n    /**\n     * Get or set the vertical gap space between rows on a particular row chart instance.\n     * @param [gap=5]\n     */\n    public gap(): number;\n    public gap(gap: number): this;\n    public gap(gap?) {\n        if (!arguments.length) {\n            return this._conf.gap;\n        }\n        this.configure({ gap: gap });\n        return this;\n    }\n\n    /**\n     * Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescale to auto-fit the\n     * data range when filtered.\n     */\n    public elasticX(): boolean;\n    public elasticX(elasticX: boolean): this;\n    public elasticX(elasticX?) {\n        if (!arguments.length) {\n            return this._conf.elasticX;\n        }\n        this.configure({ elasticX: elasticX });\n        return this;\n    }\n\n    /**\n     * Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart.\n     * @param [labelOffsetX=10]\n     */\n    public labelOffsetX(): number;\n    public labelOffsetX(labelOffsetX: number): this;\n    public labelOffsetX(labelOffsetX?) {\n        if (!arguments.length) {\n            return this._conf.labelOffsetX;\n        }\n        this.configure({ labelOffsetX: labelOffsetX });\n        return this;\n    }\n\n    /**\n     * Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart.\n     */\n    public labelOffsetY(): number;\n    public labelOffsetY(labelOffsety: number): this;\n    public labelOffsetY(labelOffsety?) {\n        if (!arguments.length) {\n            return this._conf.labelOffsetY;\n        }\n        this.configure({ labelOffsetY: labelOffsety });\n        return this;\n    }\n\n    /**\n     * Get of set the x offset (horizontal space between right edge of row and right edge or text.\n     * @param [titleLabelOffsetX=2]\n     */\n    public titleLabelOffsetX(): number;\n    public titleLabelOffsetX(titleLabelOffsetX: number): this;\n    public titleLabelOffsetX(titleLabelOffsetX?) {\n        if (!arguments.length) {\n            return this._conf.titleLabelOffsetX;\n        }\n        this.configure({ titleLabelOffsetX: titleLabelOffsetX });\n        return this;\n    }\n}\n\nexport const rowChart = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new RowChart(parent, chartGroup);\n","import { symbol, Symbol, SymbolType } from 'd3-shape';\nimport { select, Selection } from 'd3-selection';\nimport { brush } from 'd3-brush';\n\nimport { CoordinateGridMixin } from '../base/coordinate-grid-mixin';\nimport { optionalTransition, transition } from '../core/core';\nimport { constants } from '../core/constants';\nimport { events } from '../core/events';\nimport { ChartGroupType, ChartParentType, LegendItem } from '../core/types';\nimport { IScatterPlotConf } from './i-scatter-plot-conf';\nimport { RangedTwoDimensionalFilter } from '../core/filters/ranged-two-dimensional-filter';\n\nexport type SymbolTypeGenerator = (d: any, ...args: any[]) => SymbolType;\n\n/**\n * A scatter plot chart\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/scatter.html | Scatter Chart}\n * - {@link http://dc-js.github.io/dc.js/examples/multi-scatter.html | Multi-Scatter Chart}\n */\nexport class ScatterPlot extends CoordinateGridMixin {\n    public _conf: IScatterPlotConf;\n\n    private _symbol: Symbol<any, any>;\n    private _filtered;\n    private _canvas: Selection<HTMLCanvasElement, any, any, any>;\n    private _context: CanvasRenderingContext2D;\n\n    /**\n     * Create a Scatter Plot.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a scatter plot under #chart-container1 element using the default global chart group\n     * const chart1 = new ScatterPlot('#chart-container1');\n     * // create a scatter plot under #chart-container2 element using chart group A\n     * const chart2 = new ScatterPlot('#chart-container2', 'chartGroupA');\n     * // create a sub-chart under a composite parent chart\n     * const chart3 = new ScatterPlot(compositeChart);\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        const originalKeyAccessor = this._conf.keyAccessor;\n\n        this.configure({\n            keyAccessor: d => originalKeyAccessor(d)[0],\n            colorAccessor: () => this.dataProvider().conf().groupName,\n            existenceAccessor: d => d.value,\n            // see https://github.com/dc-js/dc.js/issues/702\n            title: d =>\n                `${this._conf.keyAccessor(d)},${d._value}: ${this._conf.existenceAccessor(d)}`,\n            highlightedSize: 7,\n            symbolSize: 5,\n            excludedSize: 3,\n            excludedColor: null,\n            excludedOpacity: 1.0,\n            emptySize: 0,\n            emptyOpacity: 0,\n            nonemptyOpacity: 1,\n            emptyColor: null,\n            useCanvas: false,\n        });\n\n        this.dataProvider().configure({\n            valueAccessor: d => originalKeyAccessor(d)[1],\n        });\n\n        this._symbol = symbol();\n\n        this._filtered = [];\n        this._canvas = null;\n        this._context = null;\n\n        // Use a 2 dimensional brush\n        this.brush(brush());\n\n        this._symbol.size((d, i) => this._elementSize(d, i));\n    }\n\n    public configure(conf: IScatterPlotConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): IScatterPlotConf {\n        return this._conf;\n    }\n\n    // Calculates element radius for canvas plot to be comparable to D3 area based symbol sizes\n    private _canvasElementSize(d, isFiltered): number {\n        if (!this._conf.existenceAccessor(d)) {\n            return this._conf.emptySize / Math.sqrt(Math.PI);\n        } else if (isFiltered) {\n            return this._conf.symbolSize / Math.sqrt(Math.PI);\n        } else {\n            return this._conf.excludedSize / Math.sqrt(Math.PI);\n        }\n    }\n\n    private _elementSize(d, i): number {\n        if (!this._conf.existenceAccessor(d)) {\n            return Math.pow(this._conf.emptySize, 2);\n        } else if (this._filtered[i]) {\n            return Math.pow(this._conf.symbolSize, 2);\n        } else {\n            return Math.pow(this._conf.excludedSize, 2);\n        }\n    }\n\n    private _locator(d): string {\n        return `translate(${this.x()(this._conf.keyAccessor(d))},${this.y()(d._value)})`;\n    }\n\n    public filter();\n    public filter(filter): this;\n    public filter(filter?) {\n        if (!arguments.length) {\n            return super.filter();\n        }\n\n        if (filter === null) {\n            return super.filter(null);\n        }\n        return super.filter(new RangedTwoDimensionalFilter(filter));\n    }\n\n    /**\n     * Method that replaces original resetSvg and appropriately inserts canvas\n     * element along with svg element and sets their CSS properties appropriately\n     * so they are overlapped on top of each other.\n     * Remove the chart's SVGElements from the dom and recreate the container SVGElement.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/SVGElement | SVGElement}\n     */\n    public resetSvg() {\n        if (!this._conf.useCanvas) {\n            return super.resetSvg();\n        } else {\n            super.resetSvg(); // Perform original svgReset inherited from baseMixin\n            this.select('canvas').remove(); // remove old canvas\n\n            const svgSel: Selection<SVGElement, any, any, any> = this.svg();\n            const rootSel: Selection<Element, any, any, any> = this.root();\n\n            // Set root node to relative positioning and svg to absolute\n            rootSel.style('position', 'relative');\n            svgSel.style('position', 'relative');\n\n            // Check if SVG element already has any extra top/left CSS offsets\n            const svgLeft = isNaN(parseInt(svgSel.style('left'), 10))\n                ? 0\n                : parseInt(svgSel.style('left'), 10);\n            const svgTop = isNaN(parseInt(svgSel.style('top'), 10))\n                ? 0\n                : parseInt(svgSel.style('top'), 10);\n            const width = this.effectiveWidth();\n            const height = this.effectiveHeight();\n            const margins = this.margins(); // {top: 10, right: 130, bottom: 42, left: 42}\n\n            // Add the canvas element such that it perfectly overlaps the plot area of the scatter plot SVG\n            const devicePixelRatio = window.devicePixelRatio || 1;\n            this._canvas = this.root()\n                .append('canvas')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', width * devicePixelRatio)\n                .attr('height', height * devicePixelRatio)\n                .style('width', `${width}px`)\n                .style('height', `${height}px`)\n                .style('position', 'absolute')\n                .style('top', `${margins.top + svgTop}px`)\n                .style('left', `${margins.left + svgLeft}px`)\n                .style('z-index', -1) // Place behind SVG\n                .style('pointer-events', 'none'); // Disable pointer events on canvas so SVG can capture brushing\n\n            // Define canvas context and set clipping path\n            this._context = this._canvas.node().getContext('2d');\n            this._context.scale(devicePixelRatio, devicePixelRatio);\n            this._context.rect(0, 0, width, height);\n            this._context.clip(); // Setup clipping path\n            this._context.imageSmoothingQuality = 'high';\n\n            return this.svg(); // Respect original return param for this.resetSvg;\n        }\n    }\n\n    private _resizeCanvas() {\n        const width = this.effectiveWidth();\n        const height = this.effectiveHeight();\n\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        this._canvas\n            .attr('width', width * devicePixelRatio)\n            .attr('height', height * devicePixelRatio)\n            .style('width', `${width}px`)\n            .style('height', `${height}px`);\n        this._context.scale(devicePixelRatio, devicePixelRatio);\n    }\n\n    /**\n     * Set or get canvas element. You should usually only ever use the get method as\n     * dc.js will handle canvas element generation.  Provides valid canvas only when\n     * {@link IScatterPlotConf.useCanvas | useCanvas} is set to `true`\n     */\n    public canvas(): Selection<HTMLCanvasElement, any, any, any>;\n    public canvas(canvasElement: Selection<HTMLCanvasElement, any, any, any>): this;\n    public canvas(canvasElement?) {\n        if (!arguments.length) {\n            return this._canvas;\n        }\n        this._canvas = canvasElement;\n        return this;\n    }\n\n    /**\n     * Get canvas 2D context. Provides valid context only when\n     * {@link IScatterPlotConf.useCanvas | useCanvas} is set to `true`\n     */\n    public context(): CanvasRenderingContext2D {\n        return this._context;\n    }\n\n    /*eslint complexity: [2,11] */\n    // Plots data on canvas element. If argument provided, assumes legend is\n    // currently being highlighted and modifies opacity/size of symbols accordingly\n    // @param {Object} [legendHighlightDatum] - Datum provided to legendHighlight method\n    private _plotOnCanvas(legendHighlightDatum?) {\n        this._resizeCanvas();\n        const context = this.context();\n        context.clearRect(0, 0, context.canvas.width + 2, context.canvas.height + 2);\n        const data = this.data();\n\n        // Draw the data on canvas\n        data.forEach((d, i) => {\n            const isFiltered = !this.filter() || this.filter().isFiltered([d.key[0], d.key[1]]);\n            // Calculate opacity for current data point\n            let cOpacity: number = 1;\n            if (!this._conf.existenceAccessor(d)) {\n                cOpacity = this._conf.emptyOpacity;\n            } else if (isFiltered) {\n                cOpacity = this._conf.nonemptyOpacity;\n            } else {\n                cOpacity = this._conf.excludedOpacity;\n            }\n            // Calculate color for current data point\n            let cColor: string = null;\n            if (this._conf.emptyColor && !this._conf.existenceAccessor(d)) {\n                cColor = this._conf.emptyColor;\n            } else if (this._conf.excludedColor && !isFiltered) {\n                cColor = this._conf.excludedColor;\n            } else {\n                cColor = this._colorHelper.getColor(d, undefined);\n            }\n\n            let cSize: number = this._canvasElementSize(d, isFiltered);\n\n            // Adjust params for data points if legend is highlighted\n            if (legendHighlightDatum) {\n                const isHighlighted = cColor === legendHighlightDatum.color;\n                // Calculate opacity for current data point\n                const fadeOutOpacity = 0.1; // TODO: Make this programmatically settable\n                if (!isHighlighted) {\n                    // Fade out non-highlighted colors + highlighted colors outside filter\n                    cOpacity = fadeOutOpacity;\n                }\n                if (isHighlighted) {\n                    // Set size for highlighted color data points\n                    cSize = this._conf.highlightedSize / Math.sqrt(Math.PI);\n                }\n            }\n\n            // Draw point on canvas\n            context.save();\n            context.globalAlpha = cOpacity;\n            context.beginPath();\n            context.arc(\n                this.x()(this._conf.keyAccessor(d)),\n                this.y()(d._value),\n                cSize,\n                0,\n                2 * Math.PI,\n                true\n            );\n            context.fillStyle = cColor;\n            context.fill();\n            // context.lineWidth = 0.5; // Commented out code to add stroke around scatter points if desired\n            // context.strokeStyle = '#333';\n            // context.stroke();\n            context.restore();\n        });\n    }\n\n    private _plotOnSVG(): void {\n        // TODO: come back after fixing the type for this.chartBodyG()\n        let symbols = (this.chartBodyG() as Selection<SVGGElement, any, any, any>)\n            .selectAll<SVGPathElement, any>('path.symbol')\n            .data<any>(this.data());\n\n        transition(symbols.exit(), this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('opacity', 0)\n            .remove();\n\n        symbols = symbols\n            .enter()\n            .append('path')\n            .attr('class', 'symbol')\n            .attr('opacity', 0)\n            .attr('fill', (d, i) => this._colorHelper.getColor(d, i))\n            .attr('transform', d => this._locator(d))\n            .merge(symbols);\n\n        symbols.call(s => this._renderTitles(s, this.data()));\n\n        symbols.each((d, i) => {\n            this._filtered[i] =\n                !this.filter() || this.filter().isFiltered([this._conf.keyAccessor(d), d._value]);\n        });\n\n        transition(symbols, this._conf.transitionDuration, this._conf.transitionDelay)\n            .attr('opacity', (d, i) => {\n                if (!this._conf.existenceAccessor(d)) {\n                    return this._conf.emptyOpacity;\n                } else if (this._filtered[i]) {\n                    return this._conf.nonemptyOpacity;\n                } else {\n                    return this._conf.excludedOpacity;\n                }\n            })\n            .attr('fill', (d, i) => {\n                if (this._conf.emptyColor && !this._conf.existenceAccessor(d)) {\n                    return this._conf.emptyColor;\n                } else if (this._conf.excludedColor && !this._filtered[i]) {\n                    return this._conf.excludedColor;\n                } else {\n                    return this._colorHelper.getColor(d, undefined);\n                }\n            })\n            .attr('transform', d => this._locator(d))\n            .attr('d', this._symbol);\n    }\n\n    public plotData(): void {\n        if (this._conf.useCanvas) {\n            this._plotOnCanvas();\n        } else {\n            this._plotOnSVG();\n        }\n    }\n\n    private _renderTitles(_symbol: Selection<SVGPathElement, any, SVGGElement, any>, _d): void {\n        if (this._conf.renderTitle) {\n            _symbol.selectAll('title').remove();\n            _symbol.append('title').text(d => this._conf.title(d));\n        }\n    }\n\n    /**\n     * Get or set the symbol type used for each point. By default the symbol is a circle (d3.symbolCircle).\n     * Type can be a constant or an accessor.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_type | symbol.type}\n     *\n     * @example\n     * ```\n     * // Circle type\n     * chart.symbol(d3.symbolCircle);\n     * // Square type\n     * chart.symbol(d3.symbolSquare);\n     * ```\n     */\n    public symbol(): SymbolTypeGenerator;\n    public symbol(type: SymbolTypeGenerator): this;\n    public symbol(type?) {\n        if (!arguments.length) {\n            return this._symbol.type();\n        }\n        this._symbol.type(type);\n        return this;\n    }\n\n    /**\n     * Get or set the symbol generator. By default `ScatterPlot` will use\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol | d3.symbol()}\n     * to generate symbols. `ScatterPlot` will set the\n     * {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size | symbol size accessor}\n     * on the symbol generator.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol | d3.symbol}\n     * @see {@link https://stackoverflow.com/questions/25332120/create-additional-d3-js-symbols | Create additional D3.js symbols}\n     */\n    public customSymbol(): Symbol<any, any>;\n    public customSymbol(customSymbol: Symbol<any, any>): this;\n    public customSymbol(customSymbol?) {\n        if (!arguments.length) {\n            return this._symbol;\n        }\n        this._symbol = customSymbol;\n        this._symbol.size((d, i) => this._elementSize(d, i));\n        return this;\n    }\n\n    public legendables(): LegendItem[] {\n        // Argument to getColor is ignored by the default color accessor for this chart\n        return [\n            {\n                chart: this,\n                name: this.dataProvider().conf().groupName,\n                color: this._colorHelper.getColor(this.dataProvider().conf().groupName, undefined),\n            },\n        ];\n    }\n\n    public legendHighlight(d: LegendItem): void {\n        if (this._conf.useCanvas) {\n            this._plotOnCanvas(d); // Supply legend datum to plotOnCanvas\n        } else {\n            this._resizeSymbolsWhere(s => s.attr('fill') === d.color, this._conf.highlightedSize);\n            this.chartBodyG()\n                .selectAll('.chart-body path.symbol')\n                .filter(function () {\n                    return select(this).attr('fill') !== d.color;\n                })\n                .classed('fadeout', true);\n        }\n    }\n\n    public legendReset(d: LegendItem): void {\n        if (this._conf.useCanvas) {\n            this._plotOnCanvas(d); // Supply legend datum to plotOnCanvas\n        } else {\n            this._resizeSymbolsWhere(s => s.attr('fill') === d.color, this._conf.symbolSize);\n            this.chartBodyG()\n                .selectAll('.chart-body path.symbol')\n                .filter(function () {\n                    return select(this).attr('fill') !== d.color;\n                })\n                .classed('fadeout', false);\n        }\n    }\n\n    private _resizeSymbolsWhere(condition, size): void {\n        const symbols = this.chartBodyG()\n            .selectAll('.chart-body path.symbol')\n            .filter(function () {\n                return condition(select(this));\n            });\n        const oldSize = this._symbol.size();\n        this._symbol.size(Math.pow(size, 2));\n        transition(symbols, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n            'd',\n            this._symbol\n        );\n        this._symbol.size(oldSize);\n    }\n\n    public _createBrushHandlePaths(): void {\n        // no handle paths for poly-brushes\n    }\n\n    public _extendBrush(brushSelection) {\n        if (this._conf.round) {\n            brushSelection[0] = brushSelection[0].map(this._conf.round);\n            brushSelection[1] = brushSelection[1].map(this._conf.round);\n        }\n        return brushSelection;\n    }\n\n    public _brushIsEmpty(brushSelection) {\n        return (\n            !brushSelection ||\n            brushSelection[0][0] >= brushSelection[1][0] ||\n            brushSelection[0][1] >= brushSelection[1][1]\n        );\n    }\n\n    protected _brushing(evt) {\n        if (this._ignoreBrushEvents) {\n            return;\n        }\n\n        let brushSelection = evt.selection;\n\n        // TODO: data type of brush selection changes after scale.invert, need to introduce one more variable\n\n        // Testing with pixels is more reliable\n        let brushIsEmpty = this._brushIsEmpty(brushSelection);\n\n        if (brushSelection) {\n            brushSelection = brushSelection.map(point =>\n                point.map((coord, i) => {\n                    const scale = i === 0 ? this.x() : this.y();\n                    return scale.invert(coord);\n                })\n            );\n\n            brushSelection = this._extendBrush(brushSelection);\n\n            // The rounding process might have made brushSelection empty, so we need to recheck\n            brushIsEmpty = brushIsEmpty && this._brushIsEmpty(brushSelection);\n        }\n\n        this._redrawBrush(brushSelection, false);\n\n        const ranged2DFilter = brushIsEmpty ? null : new RangedTwoDimensionalFilter(brushSelection);\n\n        events.trigger(() => {\n            this.replaceFilter(ranged2DFilter);\n            this.redrawGroup();\n        }, constants.EVENT_DELAY);\n    }\n\n    public _redrawBrush(brushSelection, doTransition) {\n        // override default x axis brush from parent chart\n        const gBrush = this._gBrush;\n\n        if (this._conf.brushOn && gBrush) {\n            if (this.resizing()) {\n                this._setBrushExtents(doTransition);\n            }\n\n            if (!brushSelection) {\n                this._withoutBrushEvents(() => {\n                    gBrush.call(this.brush().move, brushSelection);\n                });\n            } else {\n                brushSelection = brushSelection.map(point =>\n                    point.map((coord, i) => {\n                        const scale = i === 0 ? this.x() : this.y();\n                        return scale(coord);\n                    })\n                );\n\n                const gBrushWithTransition = optionalTransition(\n                    doTransition,\n                    this._conf.transitionDuration,\n                    this._conf.transitionDelay\n                )(gBrush);\n\n                this._withoutBrushEvents(() => {\n                    gBrushWithTransition.call(this.brush().move, brushSelection);\n                });\n            }\n        }\n\n        this.fadeDeselectedArea(brushSelection);\n    }\n}\n","import { ScatterPlot as ScatterPlotNeo } from '../../charts/scatter-plot';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { BaseAccessor, ChartGroupType, ChartParentType } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\n\nexport class ScatterPlot extends CoordinateGridMixinExt(\n    ColorMixinExt(MarginMixinExt(BaseMixinExt(ScatterPlotNeo)))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Set or get whether to use canvas backend for plotting scatterPlot. Note that the\n     * canvas backend does not currently support\n     * {@link ScatterPlot.customSymbol customSymbol} or\n     * {@link ScatterPlot.symbol symbol} methods and is limited to always plotting\n     * with filled circles. Symbols are drawn with\n     * {@link ScatterPlot.symbolSize symbolSize} radius. By default, the SVG backend\n     * is used when `useCanvas` is set to `false`.\n     * @param [useCanvas=false]\n     */\n    public useCanvas(): boolean;\n    public useCanvas(useCanvas: boolean): this;\n    public useCanvas(useCanvas?) {\n        if (!arguments.length) {\n            return this._conf.useCanvas;\n        }\n        this.configure({ useCanvas: useCanvas });\n        return this;\n    }\n\n    /**\n     * Get or set the existence accessor.  If a point exists, it is drawn with\n     * {@link ScatterPlot.symbolSize symbolSize} radius and\n     * opacity 1; if it does not exist, it is drawn with\n     * {@link ScatterPlot.emptySize emptySize} radius and opacity 0. By default,\n     * the existence accessor checks if the reduced value is truthy.\n     * @see {@link ScatterPlot.symbolSize symbolSize}\n     * @see {@link ScatterPlot.emptySize emptySize}\n     * @example\n     * // default accessor\n     * chart.existenceAccessor(function (d) { return d.value; });\n     */\n    public existenceAccessor(): BaseAccessor<any>;\n    public existenceAccessor(accessor: BaseAccessor<any>): this;\n    public existenceAccessor(accessor?) {\n        if (!arguments.length) {\n            return this._conf.existenceAccessor;\n        }\n        this.configure({ existenceAccessor: accessor });\n        return this;\n    }\n\n    /**\n     * Set or get radius for highlighted symbols.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param [highlightedSize=5]\n     */\n    public highlightedSize(): number;\n    public highlightedSize(highlightedSize: number): this;\n    public highlightedSize(highlightedSize?) {\n        if (!arguments.length) {\n            return this._conf.highlightedSize;\n        }\n        this.configure({ highlightedSize: highlightedSize });\n        return this;\n    }\n\n    /**\n     * Set or get size for symbols excluded from this chart's filter. If null, no\n     * special size is applied for symbols based on their filter status.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param [excludedSize=null]\n     */\n    public excludedSize(): number;\n    public excludedSize(excludedSize: number): this;\n    public excludedSize(excludedSize?) {\n        if (!arguments.length) {\n            return this._conf.excludedSize;\n        }\n        this.configure({ excludedSize: excludedSize });\n        return this;\n    }\n\n    /**\n     * Set or get color for symbols excluded from this chart's filter. If null, no\n     * special color is applied for symbols based on their filter status.\n     * @param [excludedColor=null]\n     */\n    public excludedColor(): string;\n    public excludedColor(excludedColor: string): this;\n    public excludedColor(excludedColor?) {\n        if (!arguments.length) {\n            return this._conf.excludedColor;\n        }\n        this.configure({ excludedColor: excludedColor });\n        return this;\n    }\n\n    /**\n     * Set or get opacity for symbols excluded from this chart's filter.\n     * @param [excludedOpacity=1.0]\n     */\n    public excludedOpacity(): number;\n    public excludedOpacity(excludedOpacity: number): this;\n    public excludedOpacity(excludedOpacity?) {\n        if (!arguments.length) {\n            return this._conf.excludedOpacity;\n        }\n        this.configure({ excludedOpacity: excludedOpacity });\n        return this;\n    }\n\n    /**\n     * Set or get radius for symbols when the group is empty.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param [emptySize=0]\n     */\n    public emptySize(): number;\n    public emptySize(emptySize: number): this;\n    public emptySize(emptySize?) {\n        if (!arguments.length) {\n            return this._conf.emptySize;\n        }\n        this.configure({ emptySize: emptySize });\n        return this;\n    }\n\n    public hiddenSize(): number;\n    public hiddenSize(emptySize: number): this;\n    public hiddenSize(emptySize?) {\n        if (!arguments.length) {\n            return this.emptySize();\n        }\n        return this.emptySize(emptySize);\n    }\n\n    /**\n     * Set or get color for symbols when the group is empty. If null, just use the\n     * {@link ColorMixin.colors colorMixin.colors} color scale zero value.\n     * @param [emptyColor=null]\n     */\n    public emptyColor(): string;\n    public emptyColor(emptyColor: string): this;\n    public emptyColor(emptyColor?) {\n        if (!arguments.length) {\n            return this._conf.emptyColor;\n        }\n        this.configure({ emptyColor: emptyColor });\n        return this;\n    }\n\n    /**\n     * Set or get opacity for symbols when the group is empty.\n     * @param [emptyOpacity=0]\n     */\n    public emptyOpacity(): number;\n    public emptyOpacity(emptyOpacity: number): this;\n    public emptyOpacity(emptyOpacity?) {\n        if (!arguments.length) {\n            return this._conf.emptyOpacity;\n        }\n        this.configure({ emptyOpacity: emptyOpacity });\n        return this;\n    }\n\n    /**\n     * Set or get opacity for symbols when the group is not empty.\n     * @param [nonemptyOpacity=1]\n     */\n    public nonemptyOpacity(): number;\n    public nonemptyOpacity(nonemptyOpacity: number): this;\n    public nonemptyOpacity(nonemptyOpacity?) {\n        if (!arguments.length) {\n            return this._conf.emptyOpacity;\n        }\n        this.configure({ nonemptyOpacity: nonemptyOpacity });\n        return this;\n    }\n\n    /**\n     * Set or get radius for symbols.\n     * @see {@link https://github.com/d3/d3-shape/blob/master/README.md#symbol_size d3.symbol.size}\n     * @param [symbolSize=3]\n     */\n    public symbolSize(): number;\n    public symbolSize(symbolSize: number): this;\n    public symbolSize(symbolSize?) {\n        if (!arguments.length) {\n            return this._conf.symbolSize;\n        }\n        this.configure({ symbolSize: symbolSize });\n        return this;\n    }\n}\n\nexport const scatterPlot = (parent, chartGroup) => new ScatterPlot(parent, chartGroup);\n","import { Selection } from 'd3-selection';\n\nimport { events } from '../core/events';\nimport { BaseMixin } from '../base/base-mixin';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { ascending } from 'd3-array';\nimport { ISelectMenuConf } from './i-select-menu-conf';\nimport { adaptHandler } from '../core/d3compat';\n\nconst SELECT_CSS_CLASS = 'dc-select-menu';\nconst OPTION_CSS_CLASS = 'dc-select-option';\n\n/**\n * The select menu is a simple widget designed to filter a dimension by selecting an option from\n * an HTML `<select/>` menu. The menu can be optionally turned into a multiselect.\n */\nexport class SelectMenu extends BaseMixin {\n    protected _conf: ISelectMenuConf;\n\n    private _select: Selection<HTMLSelectElement, any, any, any>;\n\n    /**\n     * Create a Select Menu.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a select menu under #select-container using the default global chart group\n     * const select = new SelectMenu('#select-container')\n     *                .dimension(states)\n     *                .group(stateGroup);\n     * // the option text can be set via the title() function\n     * // by default the option text is '`key`: `value`'\n     * select.title(function (d){\n     *     return 'STATE: ' + d.key;\n     * })\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            multiple: false,\n            promptText: 'Select all',\n            promptValue: null,\n            filterDisplayed: d => d._value > 0,\n            order: (a, b) => ascending(this._conf.keyAccessor(a), this._conf.keyAccessor(b)),\n            numberVisible: null,\n        });\n\n        this._select = undefined;\n    }\n\n    public configure(conf: ISelectMenuConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): ISelectMenuConf {\n        return this._conf;\n    }\n\n    public data() {\n        return super.data().filter(this._conf.filterDisplayed);\n    }\n\n    protected _doRender(): this {\n        this.select('select').remove();\n        this._select = this.root().append('select').classed(SELECT_CSS_CLASS, true);\n        this._select.append('option').text(this._conf.promptText).attr('value', '');\n\n        this._doRedraw();\n        return this;\n    }\n\n    protected _doRedraw(): this {\n        this._setAttributes();\n        this._renderOptions();\n        // select the option(s) corresponding to current filter(s)\n        if (this.hasFilter() && this._conf.multiple) {\n            this._select\n                .selectAll('option')\n                .property(\n                    'selected',\n                    d =>\n                        typeof d !== 'undefined' &&\n                        this.filters().indexOf(String(this._conf.keyAccessor(d))) >= 0\n                );\n        } else if (this.hasFilter()) {\n            this._select.property('value', this.filter());\n        } else {\n            this._select.property('value', '');\n        }\n        return this;\n    }\n\n    private _renderOptions() {\n        const options = this._select\n            .selectAll<HTMLOptionElement, any>(`option.${OPTION_CSS_CLASS}`)\n            .data<any>(this.data(), d => this._conf.keyAccessor(d));\n\n        options.exit().remove();\n\n        options\n            .enter()\n            .append('option')\n            .classed(OPTION_CSS_CLASS, true)\n            .attr('value', d => this._conf.keyAccessor(d))\n            .merge(options)\n            .text(this._conf.title);\n\n        this._select.selectAll(`option.${OPTION_CSS_CLASS}`).sort(this._conf.order);\n\n        this._select.on(\n            'change',\n            adaptHandler((d, evt) => this._onChange(d, evt))\n        );\n    }\n\n    private _onChange(_d, evt): void {\n        let values;\n        const target = evt.target;\n        if (target.selectedOptions) {\n            const selectedOptions = Array.prototype.slice.call(target.selectedOptions);\n            values = selectedOptions.map(d => d.value);\n        } else {\n            // IE and other browsers do not support selectedOptions\n            // adapted from this polyfill: https://gist.github.com/brettz9/4212217\n            const options = [].slice.call(evt.target.options);\n            values = options.filter(option => option.selected).map(option => option.value);\n        }\n        // console.log(values);\n        // check if only prompt option is selected\n        if (values.length === 1 && values[0] === '') {\n            values = this._conf.promptValue || null;\n        } else if (!this._conf.multiple && values.length === 1) {\n            values = values[0];\n        }\n        this.onChange(values);\n    }\n\n    public onChange(val): void {\n        if (val && this._conf.multiple) {\n            this.replaceFilter([val]);\n        } else if (val) {\n            this.replaceFilter(val);\n        } else {\n            this.filterAll();\n        }\n        events.trigger(() => {\n            this.redrawGroup();\n        });\n    }\n\n    private _setAttributes(): void {\n        if (this._conf.multiple) {\n            this._select.attr('multiple', true);\n        } else {\n            this._select.attr('multiple', null);\n        }\n        if (this._conf.numberVisible !== null) {\n            this._select.attr('size', this._conf.numberVisible);\n        } else {\n            this._select.attr('size', null);\n        }\n    }\n}\n","import { SelectMenu as SelectMenuNeo } from '../../charts/select-menu';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { BaseAccessor, ChartGroupType, ChartParentType, CompareFn } from '../../core/types';\nimport { logger } from '../core/logger';\n\nexport class SelectMenu extends BaseMixinExt(SelectMenuNeo) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the function that controls the ordering of option tags in the\n     * select menu. By default options are ordered by the group key in ascending\n     * order.\n     * @example\n     * // order by the group's value\n     * chart.order(function (a,b) {\n     *     return a.value > b.value ? 1 : b.value > a.value ? -1 : 0;\n     * });\n     */\n    public order(): CompareFn;\n    public order(order: CompareFn): this;\n    public order(order?) {\n        if (!arguments.length) {\n            return this._conf.order;\n        }\n        this.configure({ order: order });\n        return this;\n    }\n\n    /**\n     * Get or set the text displayed in the options used to prompt selection.\n     * @param [promptText='Select all']\n     * @example\n     * chart.promptText('All states');\n     */\n    public promptText(): string;\n    public promptText(promptText: string): this;\n    public promptText(promptText?) {\n        if (!arguments.length) {\n            return this._conf.promptText;\n        }\n        this.configure({ promptText: promptText });\n        return this;\n    }\n\n    /**\n     * Get or set the function that filters option tags prior to display. By default options\n     * with a value of < 1 are not displayed.\n     * @example\n     * // display all options override the `filterDisplayed` function:\n     * chart.filterDisplayed(function () {\n     *     return true;\n     * });\n     */\n    public filterDisplayed(): BaseAccessor<boolean>;\n    public filterDisplayed(filterDisplayed: BaseAccessor<boolean>): this;\n    public filterDisplayed(filterDisplayed?) {\n        if (!arguments.length) {\n            return this._conf.filterDisplayed;\n        }\n        this.configure({ filterDisplayed: filterDisplayed });\n        return this;\n    }\n\n    /**\n     * Controls the type of select menu. Setting it to true converts the underlying\n     * HTML tag into a multiple select.\n     * @param [multiple=false]\n     * @example\n     * chart.multiple(true);\n     */\n    public multiple(): boolean;\n    public multiple(multiple: boolean): this;\n    public multiple(multiple?) {\n        if (!arguments.length) {\n            return this._conf.multiple;\n        }\n        this.configure({ multiple: multiple });\n\n        return this;\n    }\n\n    /**\n     * Controls the default value to be used for\n     * [dimension.filter](https://github.com/crossfilter/crossfilter/wiki/API-Reference#dimension_filter)\n     * when only the prompt value is selected. If `null` (the default), no filtering will occur when\n     * just the prompt is selected.\n     */\n    public promptValue(): string;\n    public promptValue(promptValue: string): this;\n    public promptValue(promptValue?) {\n        if (!arguments.length) {\n            return this._conf.promptValue;\n        }\n        this.configure({ promptValue: promptValue });\n\n        return this;\n    }\n\n    /**\n     * Controls the number of items to show in the select menu, when `.multiple()` is true. This\n     * controls the [`size` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#Attributes) of\n     * the `select` element. If `null` (the default), uses the browser's default height.\n     * @example\n     * chart.numberVisible(10);\n     */\n    public numberVisible(): number;\n    public numberVisible(numberVisible: number): this;\n    public numberVisible(numberVisible?) {\n        if (!arguments.length) {\n            return this._conf.numberVisible;\n        }\n        this.configure({ numberVisible: numberVisible });\n\n        return this;\n    }\n\n    public size(): number;\n    public size(numberVisible: number): this;\n    public size(numberVisible?) {\n        logger.warnOnce('selectMenu.size is ambiguous - use selectMenu.numberVisible instead');\n        if (!arguments.length) {\n            return this.numberVisible();\n        }\n        return this.numberVisible(numberVisible);\n    }\n}\n\nexport const selectMenu = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new SelectMenu(parent, chartGroup);\n","import { ascending } from 'd3-array';\n\nimport { CompositeChart } from './composite-chart';\nimport { LineChart } from './line-chart';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { ISeriesChartConf } from './i-series-chart-conf';\nimport { compatNestHelper } from '../core/d3compat';\n\n/**\n * A series chart is a chart that shows multiple series of data overlaid on one chart, where the\n * series is specified in the data. It is a specialization of Composite Chart and inherits all\n * composite features other than recomposing the chart.\n *\n * Examples:\n * - {@link http://dc-js.github.io/dc.js/examples/series.html | Series Chart}\n */\nexport class SeriesChart extends CompositeChart {\n    public _conf: ISeriesChartConf;\n\n    private _charts: { [key: string]: LineChart };\n\n    /**\n     * Create a Series Chart.\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a series chart under #chart-container1 element using the default global chart group\n     * const seriesChart1 = new SeriesChart(\"#chart-container1\");\n     * // create a series chart under #chart-container2 element using chart group A\n     * const seriesChart2 = new SeriesChart(\"#chart-container2\", \"chartGroupA\");\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        // This must precede the call to configure as that trigger _resetChildren which needs _charts to be a hash\n        this._charts = {};\n\n        this.configure({\n            shareColors: true,\n            chartFunction: (p, cg) => new LineChart(p, cg),\n            seriesAccessor: undefined,\n            seriesSort: ascending,\n            valueSort: (a, b) => ascending(this._conf.keyAccessor(a), this._conf.keyAccessor(b)),\n        });\n\n        this._mandatoryAttributes().push('seriesAccessor', 'chart');\n    }\n\n    public configure(conf: ISeriesChartConf): this {\n        super.configure(conf);\n\n        // TODO: This is defensive, looking at the code - 'seriesAccessor', 'seriesSort', 'valueSort' do not need it\n        if (\n            ['chartFunction', 'seriesAccessor', 'seriesSort', 'valueSort'].some(opt => opt in conf)\n        ) {\n            this._resetChildren();\n        }\n\n        return this;\n    }\n\n    public conf(): ISeriesChartConf {\n        return this._conf;\n    }\n\n    private _compose(subChartArray: LineChart[]): void {\n        super.compose(subChartArray);\n    }\n\n    public compose(subChartArray): this {\n        throw new Error('Not supported for this chart type');\n    }\n\n    protected _preprocessData(): void {\n        const keep: string[] = [];\n        let childrenChanged: boolean;\n\n        const nesting = compatNestHelper({\n            key: this._conf.seriesAccessor,\n            sortKeys: this._conf.seriesSort,\n            sortValues: this._conf.valueSort,\n            entries: this.data(),\n        });\n\n        const children = nesting.map((sub, i) => {\n            const subChart =\n                this._charts[sub.key] || this._conf.chartFunction(this, this.chartGroup());\n            if (!this._charts[sub.key]) {\n                childrenChanged = true;\n            }\n            this._charts[sub.key] = subChart;\n            keep.push(sub.key);\n            subChart.dataProvider().configure({\n                dimension: this.dataProvider().conf().dimension,\n                valueAccessor: this.dataProvider().conf().valueAccessor,\n                groupName: sub.key,\n                group: {\n                    all: typeof sub.values === 'function' ? sub.values : () => sub.values,\n                },\n            });\n            subChart.configure({\n                keyAccessor: this._conf.keyAccessor,\n            });\n            return subChart.configure({ brushOn: false });\n        });\n        // this works around the fact compositeChart doesn't really\n        // have a removal interface\n        Object.keys(this._charts)\n            .filter(c => keep.indexOf(c) === -1)\n            .forEach(c => {\n                this._clearChart(c);\n                childrenChanged = true;\n            });\n        this._compose(children);\n        if (childrenChanged && this.legend()) {\n            this.legend().render();\n        }\n    }\n\n    private _clearChart(c: string): void {\n        if (this._charts[c].g()) {\n            this._charts[c].g().remove();\n        }\n        delete this._charts[c];\n    }\n\n    private _resetChildren(): void {\n        Object.keys(this._charts).map(this._clearChart);\n        this._charts = {};\n    }\n}\n","import { SeriesChart as SeriesChartNeo } from '../../charts/series-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { BaseAccessor, ChartGroupType, ChartParentType, CompareFn } from '../../core/types';\nimport { MarginMixinExt } from '../base/margin-mixin';\nimport { CoordinateGridMixinExt } from '../base/coordinate-grid-mixin';\nimport { CompositeChartExt } from './composite-chart';\nimport { LineChartFunction } from '../../charts/i-series-chart-conf';\n\nexport class SeriesChart extends CompositeChartExt(\n    CoordinateGridMixinExt(ColorMixinExt(MarginMixinExt(BaseMixinExt(SeriesChartNeo))))\n) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the chart function, which generates the child charts.\n     * @example\n     * // put curve on the line charts used for the series\n     * chart.chart(function(c) { return new LineChart(c).curve(d3.curveBasis); })\n     * // do a scatter series chart\n     * chart.chart(anchor => new ScatterPlot(anchor))\n     * @param [chartFunction= (anchor) =>  new LineChart(anchor)]\n     */\n    public chart(): LineChartFunction;\n    public chart(chartFunction: LineChartFunction): this;\n    public chart(chartFunction?) {\n        if (!arguments.length) {\n            return this._conf.chartFunction;\n        }\n        this.configure({ chartFunction: chartFunction });\n        return this;\n    }\n\n    /**\n     * **mandatory**\n     *\n     * Get or set accessor function for the displayed series. Given a datum, this function\n     * should return the series that datum belongs to.\n     * @example\n     * // simple series accessor\n     * chart.seriesAccessor(function(d) { return \"Expt: \" + d.key[0]; })\n     */\n    public seriesAccessor(): BaseAccessor<string>;\n    public seriesAccessor(accessor: BaseAccessor<string>): this;\n    public seriesAccessor(accessor?) {\n        if (!arguments.length) {\n            return this._conf.seriesAccessor;\n        }\n        this.configure({ seriesAccessor: accessor });\n        return this;\n    }\n\n    /**\n     * Get or set a function to sort the list of series by, given series values.\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * chart.seriesSort(d3.descending);\n     * @param [sortFunction=d3.ascending]\n     */\n    public seriesSort(): CompareFn;\n    public seriesSort(sortFunction: CompareFn): this;\n    public seriesSort(sortFunction?) {\n        if (!arguments.length) {\n            return this._conf.seriesSort;\n        }\n        this.configure({ seriesSort: sortFunction });\n        return this;\n    }\n\n    /**\n     * Get or set a function to sort each series values by. By default this is the key accessor which,\n     * for example, will ensure a lineChart series connects its points in increasing key/x order,\n     * rather than haphazardly.\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#ascending d3.ascending}\n     * @see {@link https://github.com/d3/d3-array/blob/master/README.md#descending d3.descending}\n     * @example\n     * // Default value sort\n     * _chart.valueSort(function keySort (a, b) {\n     *     return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));\n     * });\n     */\n    public valueSort(): CompareFn;\n    public valueSort(sortFunction: CompareFn): this;\n    public valueSort(sortFunction?) {\n        if (!arguments.length) {\n            return this._conf.valueSort;\n        }\n        this.configure({ valueSort: sortFunction });\n        return this;\n    }\n}\n\nexport const seriesChart = (parent, chartGroup) => new SeriesChart(parent, chartGroup);\n","import { hierarchy, partition } from 'd3-hierarchy';\nimport { ascending, min, sum } from 'd3-array';\nimport { Arc, arc, DefaultArcObject } from 'd3-shape';\nimport { select, Selection } from 'd3-selection';\nimport { interpolate } from 'd3-interpolate';\n\nimport { transition } from '../core/core';\nimport { arraysIdentical, toHierarchy } from '../core/utils';\nimport { events } from '../core/events';\nimport { ColorMixin } from '../base/color-mixin';\nimport { BaseMixin } from '../base/base-mixin';\nimport { constants } from '../core/constants';\nimport { BadArgumentException } from '../core/bad-argument-exception';\nimport { ChartGroupType, ChartParentType, LegendItem, SVGGElementSelection } from '../core/types';\nimport { ISunburstChartConf, RingSizeSpecs } from './i-sunburst-chart-conf';\nimport { adaptHandler } from '../core/d3compat';\nimport { HierarchyFilter } from '../core/filters/hierarchy-filter';\n\nconst DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;\n\n/**\n * The sunburst chart implementation is usually used to visualize a small tree distribution.  The sunburst\n * chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each\n * slice relative to the sum of all values.\n * Slices are ordered by {@link ICFSimpleAdapterConf.ordering | ordering} which defaults to sorting by key.\n *\n * The keys used in the sunburst chart should be arrays, representing paths in the tree.\n *\n * When filtering, the sunburst chart creates instances of {@link HierarchyFilter}.\n *\n */\nexport class SunburstChart extends ColorMixin(BaseMixin) {\n    public _conf: ISunburstChartConf;\n\n    private _sliceCssClass: string;\n    private _emptyCssClass: string;\n    private _computedRadius: number;\n    private _g: SVGGElementSelection;\n    private _cx: number;\n    private _cy: number;\n    private _relativeRingSizes: number[];\n    private _rootOffset: number;\n\n    /**\n     * Create a Sunburst Chart\n     *\n     * TODO update example\n     *\n     * @example\n     * ```\n     * // create a sunburst chart under #chart-container1 element using the default global chart group\n     * const chart1 = new SunburstChart('#chart-container1');\n     * // create a sunburst chart under #chart-container2 element using chart group A\n     * const chart2 = new SunburstChart('#chart-container2', 'chartGroupA');\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            colorAccessor: d => this._conf.keyAccessor(d),\n            label: d => this._conf.keyAccessor(d),\n            renderLabel: true,\n            title: d => `${this._conf.keyAccessor(d)}: ${this._extendedValueAccessor(d)}`,\n            transitionDuration: 350,\n            emptyTitle: 'empty',\n            radius: undefined, // given radius, if any\n            innerRadius: 0,\n            ringSizes: this.defaultRingSizes(),\n            minAngleForLabel: DEFAULT_MIN_ANGLE_FOR_LABEL,\n            externalLabels: undefined,\n        });\n\n        this.dataProvider().configure({\n            ordering: d => d.key, // override cap mixin // TODO: not needed, does not mix CapMixin any longer\n        });\n\n        this._sliceCssClass = 'pie-slice';\n        this._emptyCssClass = 'empty-chart';\n        this._computedRadius = undefined;\n\n        this._g = undefined;\n        this._cx = undefined;\n        this._cy = undefined;\n    }\n\n    public configure(conf: ISunburstChartConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): ISunburstChartConf {\n        return this._conf;\n    }\n\n    // Handle cases if value corresponds to generated parent nodes\n    private _extendedValueAccessor(d) {\n        if (d.path) {\n            return d.value;\n        }\n        return d._value;\n    }\n\n    private _scaleRadius(ringIndex: number, y: number): number {\n        if (ringIndex === 0) {\n            return this._conf.innerRadius;\n        } else {\n            const customRelativeRadius = sum(this._relativeRingSizes.slice(0, ringIndex));\n            const scaleFactor =\n                (ringIndex * (1 / this._relativeRingSizes.length)) / customRelativeRadius;\n            const standardRadius =\n                ((y - this._rootOffset) / (1 - this._rootOffset)) *\n                (this._computedRadius - this._conf.innerRadius);\n            return this._conf.innerRadius + standardRadius / scaleFactor;\n        }\n    }\n\n    protected _doRender(): this {\n        this.resetSvg();\n\n        this._g = this.svg().append('g').attr('transform', `translate(${this.cx()},${this.cy()})`);\n\n        this._drawChart();\n\n        return this;\n    }\n\n    private _drawChart(): void {\n        // set radius from chart size if none given, or if given radius is too large\n        const maxRadius: number = min([this.width(), this.height()]) / 2;\n        this._computedRadius =\n            this._conf.radius && this._conf.radius < maxRadius ? this._conf.radius : maxRadius;\n\n        const arcs: Arc<any, DefaultArcObject> = this._buildArcs();\n\n        let partitionedNodes;\n        let cdata;\n\n        // if we have data...\n        // @ts-ignore\n        if (sum(this.data(), d => d._value)) {\n            cdata = toHierarchy(this.data(), d => d._value);\n            partitionedNodes = this._partitionNodes(cdata);\n            // First one is the root, which is not needed\n            partitionedNodes.nodes.shift();\n            this._g.classed(this._emptyCssClass, false);\n        } else {\n            // otherwise we'd be getting NaNs, so override\n            // note: abuse others for its ignoring the value accessor\n            cdata = toHierarchy([], d => d.value);\n            partitionedNodes = this._partitionNodes(cdata);\n            this._g.classed(this._emptyCssClass, true);\n        }\n        this._rootOffset = partitionedNodes.rootOffset;\n        this._relativeRingSizes = partitionedNodes.relativeRingSizes;\n\n        // TODO: probably redundant check, this will always be true\n        if (this._g) {\n            const slices: SVGGElementSelection = this._g\n                .selectAll<SVGGElement, any>(`g.${this._sliceCssClass}`)\n                .data<any>(partitionedNodes.nodes);\n\n            this._createElements(slices, arcs, partitionedNodes.nodes);\n\n            this._updateElements(partitionedNodes.nodes, arcs);\n\n            this._removeElements(slices);\n\n            this._highlightFilter();\n\n            transition(this._g, this._conf.transitionDuration, this._conf.transitionDelay).attr(\n                'transform',\n                `translate(${this.cx()},${this.cy()})`\n            );\n        }\n    }\n\n    private _createElements(\n        slices: SVGGElementSelection,\n        arcs: Arc<any, DefaultArcObject>,\n        sunburstData\n    ): void {\n        const slicesEnter = this._createSliceNodes(slices);\n\n        this._createSlicePath(slicesEnter, arcs);\n        this._createTitles(slicesEnter);\n        this._createLabels(sunburstData, arcs);\n    }\n\n    private _createSliceNodes(slices: SVGGElementSelection): SVGGElementSelection {\n        return slices\n            .enter()\n            .append('g')\n            .attr(\n                'class',\n                (d, i) => `${this._sliceCssClass} _${i} ${this._sliceCssClass}-level-${d.depth}`\n            );\n    }\n\n    private _createSlicePath(\n        slicesEnter: SVGGElementSelection,\n        arcs: Arc<any, DefaultArcObject>\n    ): void {\n        const slicePath = slicesEnter\n            .append('path')\n            .attr('fill', (d, i) => this._fill(d, i))\n            .on(\n                'click',\n                adaptHandler(d => this.onClick(d))\n            )\n            .attr('d', d => this._safeArc(arcs, d));\n\n        const tranNodes = transition(slicePath, this._conf.transitionDuration);\n        if (tranNodes.attrTween) {\n            const chart = this;\n            tranNodes.attrTween('d', function (d) {\n                return chart._tweenSlice(d, this);\n            });\n        }\n    }\n\n    private _createTitles(slicesEnter: SVGGElementSelection): void {\n        if (this._conf.renderTitle) {\n            slicesEnter.append('title').text(d => this._conf.title(d));\n        }\n    }\n\n    private _positionLabels(\n        labelsEnter: Selection<SVGTextElement, any, SVGGElement, any>,\n        arcs: Arc<any, DefaultArcObject>\n    ) {\n        transition(labelsEnter, this._conf.transitionDuration)\n            .attr('transform', d => this._labelPosition(d, arcs))\n            .attr('text-anchor', 'middle')\n            .text(d => {\n                // position label...\n                if (this._sliceHasNoData(d) || this._sliceTooSmall(d)) {\n                    return '';\n                }\n                return this._conf.label(d);\n            });\n    }\n\n    private _createLabels(sunburstData, arcs: Arc<any, DefaultArcObject>): void {\n        if (this._conf.renderLabel) {\n            const labels = this._g\n                .selectAll<SVGTextElement, any>(`text.${this._sliceCssClass}`)\n                .data<any>(sunburstData);\n\n            labels.exit().remove();\n\n            const labelsEnter = labels\n                .enter()\n                .append('text')\n                .attr('class', (d, i) => {\n                    let classes = `${this._sliceCssClass} _${i}`;\n                    if (this._conf.externalLabels) {\n                        classes += ' external';\n                    }\n                    return classes;\n                })\n                .on(\n                    'click',\n                    adaptHandler(d => this.onClick(d))\n                );\n\n            this._positionLabels(labelsEnter, arcs);\n        }\n    }\n\n    private _updateElements(sunburstData, arcs: Arc<any, DefaultArcObject>): void {\n        this._updateSlicePaths(sunburstData, arcs);\n        this._updateLabels(sunburstData, arcs);\n        this._updateTitles(sunburstData);\n    }\n\n    private _updateSlicePaths(sunburstData, arcs: Arc<any, DefaultArcObject>): void {\n        const slicePaths = this._g\n            .selectAll(`g.${this._sliceCssClass}`)\n            .data(sunburstData)\n            .select('path')\n            .attr('d', (d, i) => this._safeArc(arcs, d));\n        const tranNodes = transition(slicePaths, this._conf.transitionDuration);\n        if (tranNodes.attrTween) {\n            const chart = this;\n            tranNodes.attrTween('d', function (d) {\n                return chart._tweenSlice(d, this);\n            });\n        }\n        tranNodes.attr('fill', (d, i) => this._fill(d, i));\n    }\n\n    private _updateLabels(sunburstData, arcs: Arc<any, DefaultArcObject>): void {\n        if (this._conf.renderLabel) {\n            const labels = this._g\n                .selectAll<SVGTextElement, any>(`text.${this._sliceCssClass}`)\n                .data<any>(sunburstData);\n\n            this._positionLabels(labels, arcs);\n        }\n    }\n\n    private _updateTitles(sunburstData): void {\n        if (this._conf.renderTitle) {\n            this._g\n                .selectAll(`g.${this._sliceCssClass}`)\n                .data(sunburstData)\n                .select('title')\n                .text(d => this._conf.title(d));\n        }\n    }\n\n    private _removeElements(slices: SVGGElementSelection): void {\n        slices.exit().remove();\n    }\n\n    private _highlightFilter() {\n        const chart = this;\n        if (chart.hasFilter()) {\n            chart.selectAll(`g.${chart._sliceCssClass}`).each(function (d) {\n                if (chart._isSelectedSlice(d)) {\n                    chart.highlightSelected(this);\n                } else {\n                    chart.fadeDeselected(this);\n                }\n            });\n        } else {\n            chart.selectAll(`g.${chart._sliceCssClass}`).each(function (d) {\n                chart.resetHighlight(this);\n            });\n        }\n    }\n\n    /**\n     * Get or set center x coordinate position. Default is center of svg.\n     */\n    public cx(): number;\n    public cx(cx: number): this;\n    public cx(cx?) {\n        if (!arguments.length) {\n            return this._cx || this.width() / 2;\n        }\n        this._cx = cx;\n        return this;\n    }\n\n    /**\n     * Get or set center y coordinate position. Default is center of svg.\n     */\n    public cy(): number;\n    public cy(cy: number): this;\n    public cy(cy?) {\n        if (!arguments.length) {\n            return this._cy || this.height() / 2;\n        }\n        this._cy = cy;\n        return this;\n    }\n\n    /**\n     * Constructs the default RingSizes parameter for {@link ISunburstChartConf.ringSizes},\n     * which makes the rings narrower as they get farther away from the center.\n     *\n     * Can be used as a parameter to ringSizes() to reset the default behavior, or modified for custom ring sizes.\n     *\n     * @example\n     * ```\n     *   const chart = new dc.SunburstChart(...);\n     *   chart.ringSizes(chart.defaultRingSizes())\n     * ```\n     */\n    public defaultRingSizes(): RingSizeSpecs {\n        return {\n            partitionDy: () => this._computedRadius * this._computedRadius,\n            scaleInnerRadius: d =>\n                d.data.path && d.data.path.length === 1 ? this._conf.innerRadius : Math.sqrt(d.y0),\n            scaleOuterRadius: d => Math.sqrt(d.y1),\n            relativeRingSizesFunction: () => [],\n        };\n    }\n\n    /**\n     * Constructs a RingSizes parameter for {@link ISunburstChartConf.ringSizes}\n     * that will make the chart rings equally wide.\n     *\n     * @example\n     * ```\n     *   const chart = new dc.SunburstChart(...);\n     *   chart.ringSizes(chart.equalRingSizes())\n     * ```\n     */\n    public equalRingSizes(): RingSizeSpecs {\n        return this.relativeRingSizes(ringCount => {\n            const result = [];\n            for (let i = 0; i < ringCount; i++) {\n                result.push(1 / ringCount);\n            }\n            return result;\n        });\n    }\n\n    /**\n     * Constructs a RingSizes parameter for {@link ISunburstChartConf.ringSizes} using the given function\n     * to determine each rings width.\n     *\n     * * The function must return an array containing portion values for each ring/level of the chart.\n     * * The length of the array must match the number of rings of the chart at runtime, which is provided as the only\n     *   argument.\n     * * The sum of all portions from the array must be 1 (100%).\n     *\n     * @example\n     * ```\n     * // specific relative portions (the number of rings (3) is known in this case)\n     * chart.ringSizes(chart.relativeRingSizes(function (ringCount) {\n     *     return [.1, .3, .6];\n     * });\n     * ```\n     */\n    public relativeRingSizes(\n        relativeRingSizesFunction: (ringCount: number) => number[]\n    ): RingSizeSpecs {\n        function assertPortionsArray(relativeSizes, numberOfRings) {\n            if (!Array.isArray(relativeSizes)) {\n                throw new BadArgumentException('relativeRingSizes function must return an array');\n            }\n\n            const portionsSum = sum(relativeSizes);\n            if (Math.abs(portionsSum - 1) > constants.NEGLIGIBLE_NUMBER) {\n                throw new BadArgumentException(\n                    `relativeRingSizes : portions must add up to 1, but sum was ${portionsSum}`\n                );\n            }\n\n            if (relativeSizes.length !== numberOfRings) {\n                throw new BadArgumentException(\n                    `relativeRingSizes : number of values must match number of rings (${numberOfRings}) but was ${relativeSizes.length}`\n                );\n            }\n        }\n        return {\n            partitionDy: () => 1,\n            scaleInnerRadius: d => this._scaleRadius(d.data.path.length - 1, d.y0),\n            scaleOuterRadius: d => this._scaleRadius(d.data.path.length, d.y1),\n            relativeRingSizesFunction: ringCount => {\n                const result = relativeRingSizesFunction(ringCount);\n                assertPortionsArray(result, ringCount);\n                return result;\n            },\n        };\n    }\n\n    private _buildArcs(): Arc<any, DefaultArcObject> {\n        return arc()\n            .startAngle((d: any) => d.x0) // TODO: revisit and look for proper typing\n            .endAngle((d: any) => d.x1) // TODO: revisit and look for proper typing\n            .innerRadius(d => this._conf.ringSizes.scaleInnerRadius(d))\n            .outerRadius(d => this._conf.ringSizes.scaleOuterRadius(d));\n    }\n\n    private _isSelectedSlice(d): boolean {\n        return this._isPathFiltered(d.path);\n    }\n\n    private _isPathFiltered(path): boolean {\n        for (let i = 0; i < this.filters().length; i++) {\n            const currentFilter = this.filters()[i];\n            if (currentFilter.isFiltered(path)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // returns all filters that are a parent or child of the path\n    private _filtersForPath(path) {\n        const pathFilter = new HierarchyFilter(path);\n        const filtersList = [];\n        for (let i = 0; i < this.filters().length; i++) {\n            const currentFilter = this.filters()[i];\n            if (currentFilter.isFiltered(path) || pathFilter.isFiltered(currentFilter)) {\n                filtersList.push(currentFilter);\n            }\n        }\n        return filtersList;\n    }\n\n    protected _doRedraw(): this {\n        this._drawChart();\n        return this;\n    }\n\n    private _partitionNodes(data) {\n        const getSortable = function (d) {\n            return { key: d.data.key, value: d.value };\n        };\n        const ordering = this.dataProvider().conf().ordering;\n        const _hierarchy = hierarchy(data)\n            .sum(d => (d.children ? 0 : this._extendedValueAccessor(d)))\n            .sort((a, b) => ascending(ordering(getSortable(a)), ordering(getSortable(b))));\n\n        const _partition = partition().size([2 * Math.PI, this._conf.ringSizes.partitionDy()]);\n\n        _partition(_hierarchy);\n\n        // In D3v4 the returned data is slightly different, change it enough to suit our purposes.\n        const nodes = _hierarchy.descendants().map(d => {\n            // TODO: find a better way to augment `.key`; which is not part of the current type (HierarchyNode)\n            // @ts-ignore\n            d.key = d.data.key;\n            d.path = d.data.path;\n            return d;\n        });\n\n        const relativeSizes = this._conf.ringSizes.relativeRingSizesFunction(_hierarchy.height);\n\n        return {\n            nodes,\n            // TODO: find a better way to augment `.y1`; which is not part of the current type (HierarchyNode)\n            // @ts-ignore\n            rootOffset: _hierarchy.y1,\n            relativeRingSizes: relativeSizes,\n        };\n    }\n\n    private _sliceTooSmall(d): boolean {\n        const angle = d.x1 - d.x0;\n        return isNaN(angle) || angle < this._conf.minAngleForLabel;\n    }\n\n    private _sliceHasNoData(d): boolean {\n        return this._extendedValueAccessor(d) === 0;\n    }\n\n    private _isOffCanvas(d): boolean {\n        return !d || isNaN(d.x0) || isNaN(d.y0);\n    }\n\n    private _fill(d, i?: number): string {\n        return this._colorHelper.getColor(d.data, i);\n    }\n\n    public onClick(d, i?): void {\n        if (this._g.attr('class') === this._emptyCssClass) {\n            return;\n        }\n\n        // Must be better way to handle this, in legends we need to access `d.key`\n        const path = d.path || d.key;\n        const filter = new HierarchyFilter(path);\n\n        // filters are equal to, parents or children of the path.\n        const filtersList = this._filtersForPath(path);\n        let exactMatch = false;\n        // clear out any filters that cover the path filtered.\n        for (let j = filtersList.length - 1; j >= 0; j--) {\n            const currentFilter = filtersList[j];\n            if (arraysIdentical(currentFilter, path)) {\n                exactMatch = true;\n            }\n            this.filter(filtersList[j]);\n        }\n        events.trigger(() => {\n            // if it is a new filter - put it in.\n            if (!exactMatch) {\n                this.filter(filter);\n            }\n            this.redrawGroup();\n        });\n    }\n\n    private _safeArc(_arc, d) {\n        let path = _arc(d);\n        if (path.indexOf('NaN') >= 0) {\n            path = 'M0,0';\n        }\n        return path;\n    }\n\n    private _labelPosition(d, _arc) {\n        let centroid;\n        if (this._conf.externalLabels) {\n            centroid = arc()\n                .outerRadius(this._computedRadius + this._conf.externalLabels)\n                .innerRadius(this._computedRadius + this._conf.externalLabels)\n                .centroid(d);\n        } else {\n            centroid = _arc.centroid(d);\n        }\n        if (isNaN(centroid[0]) || isNaN(centroid[1])) {\n            return 'translate(0,0)';\n        } else {\n            return `translate(${centroid})`;\n        }\n    }\n\n    public legendables(): LegendItem[] {\n        return this.data().map((d, i) => {\n            const legendable: LegendItem = {\n                name: d.key,\n                data: d.value,\n                others: d.others,\n                chart: this,\n            };\n            legendable.color = this._colorHelper.getColor(d, i);\n            return legendable;\n        });\n    }\n\n    public legendHighlight(d: LegendItem) {\n        this._highlightSliceFromLegendable(d, true);\n    }\n\n    public legendReset(d: LegendItem) {\n        this._highlightSliceFromLegendable(d, false);\n    }\n\n    public legendToggle(d: LegendItem) {\n        this.onClick({ key: d.name, others: d.others });\n    }\n\n    private _highlightSliceFromLegendable(legendable: LegendItem, highlighted: boolean): void {\n        this.selectAll<SVGGElement, any>('g.pie-slice').each(function (d) {\n            if (legendable.name === d.key) {\n                select(this).classed('highlight', highlighted);\n            }\n        });\n    }\n\n    private _tweenSlice(d, element) {\n        let current = element._current;\n        if (this._isOffCanvas(current)) {\n            current = { x0: 0, x1: 0, y0: 0, y1: 0 };\n        }\n        const tweenTarget = {\n            x0: d.x0,\n            x1: d.x1,\n            y0: d.y0,\n            y1: d.y1,\n        };\n        const i = interpolate(current, tweenTarget);\n        element._current = i(0);\n        return t => this._safeArc(this._buildArcs(), Object.assign({}, d, i(t)));\n    }\n}\n","import { SunburstChart as SunburstChartNeo } from '../../charts/sunburst-chart';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { ColorMixinExt } from '../base/color-mixin';\nimport { ChartGroupType, ChartParentType } from '../../core/types';\nimport { RingSizeSpecs } from '../../charts/i-sunburst-chart-conf';\n\nexport class SunburstChart extends ColorMixinExt(BaseMixinExt(SunburstChartNeo)) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * Get or set the inner radius of the sunburst chart. If the inner radius is greater than 0px then the\n     * sunburst chart will be rendered as a doughnut chart. Default inner radius is 0px.\n     * @param [innerRadius=0]\n     */\n    public innerRadius(): number;\n    public innerRadius(innerRadius: number): this;\n    public innerRadius(innerRadius?) {\n        if (!arguments.length) {\n            return this._conf.innerRadius;\n        }\n        this.configure({ innerRadius: innerRadius });\n        return this;\n    }\n\n    /**\n     * Get or set the outer radius. If the radius is not set, it will be half of the minimum of the\n     * chart width and height.\n     */\n    public radius(): number;\n    public radius(radius: number): this;\n    public radius(radius?) {\n        if (!arguments.length) {\n            return this._conf.radius;\n        }\n        this.configure({ radius: radius });\n        return this;\n    }\n\n    /**\n     * Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not\n     * display a slice label.\n     * @param [minAngleForLabel=0.5]\n     */\n    public minAngleForLabel(): number;\n    public minAngleForLabel(minAngleForLabel: number): this;\n    public minAngleForLabel(minAngleForLabel?) {\n        if (!arguments.length) {\n            return this._conf.minAngleForLabel;\n        }\n        this.configure({ minAngleForLabel: minAngleForLabel });\n        return this;\n    }\n\n    /**\n     * Title to use for the only slice when there is no data.\n     */\n    public emptyTitle(): string;\n    public emptyTitle(title: string): this;\n    public emptyTitle(title?) {\n        if (arguments.length === 0) {\n            return this._conf.emptyTitle;\n        }\n        this.configure({ emptyTitle: title });\n        return this;\n    }\n\n    /**\n     * Position slice labels offset from the outer edge of the chart.\n     *\n     * The argument specifies the extra radius to be added for slice labels.\n     */\n    public externalLabels(): number;\n    public externalLabels(externalLabels: number): this;\n    public externalLabels(externalLabels?) {\n        if (arguments.length === 0) {\n            return this._conf.externalLabels;\n        } else if (externalLabels) {\n            this.configure({ externalLabels: externalLabels });\n        } else {\n            this.configure({ externalLabels: undefined });\n        }\n\n        return this;\n    }\n\n    /**\n     * Get or set the strategy to use for sizing the charts rings.\n     *\n     * There are three strategies available\n     * * {@link SunburstChart.defaultRingSizes `defaultRingSizes`}: the rings get narrower farther away from the center\n     * * {@link SunburstChart.relativeRingSizes `relativeRingSizes`}: set the ring sizes as portions of 1\n     * * {@link SunburstChart.equalRingSizes `equalRingSizes`}: the rings are equally wide\n     *\n     * You can modify the returned strategy, or create your own, for custom ring sizing.\n     *\n     * RingSizes is a duck-typed interface that must support the following methods:\n     * * `partitionDy()`: used for\n     *   {@link https://github.com/d3/d3-hierarchy/blob/v1.1.9/README.md#partition_size `d3.partition.size`}\n     * * `scaleInnerRadius(d)`: takes datum and returns radius for\n     *    {@link https://github.com/d3/d3-shape/blob/v1.3.7/README.md#arc_innerRadius `d3.arc.innerRadius`}\n     * * `scaleOuterRadius(d)`: takes datum and returns radius for\n     *    {@link https://github.com/d3/d3-shape/blob/v1.3.7/README.md#arc_outerRadius `d3.arc.outerRadius`}\n     * * `relativeRingSizesFunction(ringCount)`: takes ring count and returns an array of portions that\n     *   must add up to 1\n     *\n     * @example\n     * // make rings equally wide\n     * chart.ringSizes(chart.equalRingSizes())\n     * // reset to default behavior\n     * chart.ringSizes(chart.defaultRingSizes()))\n     */\n    public ringSizes(): RingSizeSpecs;\n    public ringSizes(ringSizes: RingSizeSpecs): this;\n    public ringSizes(ringSizes?) {\n        if (!arguments.length) {\n            return this._conf.ringSizes;\n        }\n        this.configure({ ringSizes: ringSizes });\n        return this;\n    }\n}\n\nexport const sunburstChart = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new SunburstChart(parent, chartGroup);\n","import { BaseMixin } from '../base/base-mixin';\nimport { constants } from '../core/constants';\nimport { events } from '../core/events';\nimport { ChartGroupType, ChartParentType } from '../core/types';\nimport { Selection } from 'd3-selection';\nimport { ITextFilterWidgetConf } from './i-text-filter-widget-conf';\n\nconst INPUT_CSS_CLASS = 'dc-text-filter-input';\n\n/**\n * Text Filter Widget\n *\n * The text filter widget is a simple widget designed to display an input field allowing to filter\n * data that matches the text typed.\n * As opposed to the other charts, this doesn't display any result and doesn't update its display,\n * it's just to input an filter other charts.\n *\n */\nexport class TextFilterWidget extends BaseMixin {\n    protected _conf: ITextFilterWidgetConf;\n\n    private _input: Selection<HTMLInputElement, any, any, any>;\n\n    /**\n     * Create Text Filter widget\n     *\n     * @example\n     * ```\n     * const data = [{\"firstName\":\"John\",\"lastName\":\"Coltrane\"}{\"firstName\":\"Miles\",lastName:\"Davis\"}]\n     * const ndx = crossfilter(data);\n     * const dimension = ndx.dimension(d => `${d.lastName.toLowerCase()} ${d.firstName.toLowerCase()}`);\n     *\n     * new TextFilterWidget('#search')\n     *     .dimension(dimension);\n     *     // you don't need the group() function\n     * ```\n     */\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n\n        this.configure({\n            placeHolder: 'search',\n            normalize: s => s.toLowerCase(),\n            filterFunctionFactory: query => {\n                query = this._conf.normalize(query);\n                return d => this._conf.normalize(d).indexOf(query) !== -1;\n            },\n        });\n    }\n\n    public configure(conf: ITextFilterWidgetConf): this {\n        super.configure(conf);\n        return this;\n    }\n\n    public conf(): ITextFilterWidgetConf {\n        return this._conf;\n    }\n\n    protected _doRender(): this {\n        this.select('input').remove();\n\n        this._input = this.root().append('input').classed(INPUT_CSS_CLASS, true);\n\n        const chart = this;\n        this._input.on('input', function () {\n            chart\n                .dataProvider()\n                .conf()\n                .dimension.filterFunction(chart._conf.filterFunctionFactory(this.value));\n            events.trigger(() => {\n                chart.redrawGroup();\n            }, constants.EVENT_DELAY);\n        });\n\n        this._doRedraw();\n\n        return this;\n    }\n\n    protected _doRedraw(): this {\n        this.root().selectAll('input').attr('placeholder', this._conf.placeHolder);\n\n        return this;\n    }\n}\n","import { TextFilterWidget as TextFilterWidgetNeo } from '../../charts/text-filter-widget';\nimport { BaseMixinExt } from '../base/base-mixin';\nimport { BaseAccessor, ChartGroupType, ChartParentType } from '../../core/types';\n\nexport class TextFilterWidget extends BaseMixinExt(TextFilterWidgetNeo) {\n    constructor(parent: ChartParentType, chartGroup: ChartGroupType) {\n        super(parent, chartGroup);\n    }\n\n    /**\n     * This function will be called on values before calling the filter function.\n     * @example\n     * // This is the default\n     * chart.normalize(function (s) {\n     *   return s.toLowerCase();\n     * });\n     */\n    public normalize(): (s) => string;\n    public normalize(normalize: (s) => string): this;\n    public normalize(normalize?) {\n        if (!arguments.length) {\n            return this._conf.normalize;\n        }\n        this.configure({ normalize: normalize });\n        return this;\n    }\n\n    /**\n     * Placeholder text in the search box.\n     * @example\n     * // This is the default\n     * chart.placeHolder('type to filter');\n     * @param [placeHolder='search']\n     */\n    public placeHolder(): string;\n    public placeHolder(placeHolder: string): this;\n    public placeHolder(placeHolder?) {\n        if (!arguments.length) {\n            return this._conf.placeHolder;\n        }\n        this.configure({ placeHolder: placeHolder });\n        return this;\n    }\n\n    /**\n     * This function will be called with the search text, it needs to return a function that will be used to\n     * filter the data. The default function checks presence of the search text.\n     * @example\n     * // This is the default\n     * function (query) {\n     *     query = _normalize(query);\n     *     return function (d) {\n     *         return _normalize(d).indexOf(query) !== -1;\n     *     };\n     * };\n     */\n    public filterFunctionFactory(): (query) => BaseAccessor<boolean>;\n    public filterFunctionFactory(filterFunctionFactory: (query) => BaseAccessor<boolean>): this;\n    public filterFunctionFactory(filterFunctionFactory?) {\n        if (!arguments.length) {\n            return this._conf.filterFunctionFactory;\n        }\n        this.configure({ filterFunctionFactory: filterFunctionFactory });\n        return this;\n    }\n}\n\nexport const textFilterWidget = (parent: ChartParentType, chartGroup: ChartGroupType) =>\n    new TextFilterWidget(parent, chartGroup);\n","import { select, Selection } from 'd3-selection';\n\nimport { isNumber } from '../core/utils';\nimport { constants } from '../core/constants';\nimport { LegendItem, LegendTextAccessor, ParentOfLegend } from '../core/types';\nimport { adaptHandler } from '../core/d3compat';\n\n/**\n * htmlLegend is a attachable widget that can be added to other dc charts to render horizontal/vertical legend\n * labels.\n *\n * @example\n * ```\n * chart.legend(HtmlLegend().container(legendContainerElement).horizontal(false))\n * ```\n */\nexport class HtmlLegend {\n    private _htmlLegendDivCssClass: string;\n    private _legendItemCssClassHorizontal: string;\n    private _legendItemCssClassVertical: string;\n    private _parent: ParentOfLegend;\n    private _container: Selection<HTMLElement, any, any, any>;\n    private _legendText: LegendTextAccessor;\n    private _maxItems: number;\n    private _horizontal: boolean;\n    private _legendItemClass: string;\n    private _highlightSelected: boolean;\n\n    constructor() {\n        this._htmlLegendDivCssClass = 'dc-html-legend';\n        this._legendItemCssClassHorizontal = 'dc-legend-item-horizontal';\n        this._legendItemCssClassVertical = 'dc-legend-item-vertical';\n        this._parent = undefined;\n        this._container = undefined;\n        this._legendText = d => d.name;\n        this._maxItems = undefined;\n        this._horizontal = false;\n        this._legendItemClass = undefined;\n        this._highlightSelected = false;\n    }\n\n    public parent(): ParentOfLegend;\n    public parent(p: ParentOfLegend): this;\n    public parent(p?) {\n        if (!arguments.length) {\n            return this._parent;\n        }\n        this._parent = p;\n        return this;\n    }\n\n    public render() {\n        const defaultLegendItemCssClass = this._horizontal\n            ? this._legendItemCssClassHorizontal\n            : this._legendItemCssClassVertical;\n        this._container.select(`div.${this._htmlLegendDivCssClass}`).remove();\n\n        const container = this._container.append('div').attr('class', this._htmlLegendDivCssClass);\n        container.attr('style', `max-width:${this._container.nodes()[0].style.width}`);\n\n        let legendables: LegendItem[] = this._parent.legendables();\n        const filters = this._parent.filters();\n\n        if (this._maxItems !== undefined) {\n            legendables = legendables.slice(0, this._maxItems);\n        }\n\n        const legendItemClassName = this._legendItemClass\n            ? this._legendItemClass\n            : defaultLegendItemCssClass;\n\n        const itemEnter: Selection<HTMLDivElement, LegendItem, HTMLElement, any> = container\n            .selectAll<HTMLDivElement, any>(`div.${legendItemClassName}`)\n            .data<LegendItem>(legendables)\n            .enter()\n            .append('div')\n            .classed(legendItemClassName, true)\n            .on(\n                'mouseover',\n                adaptHandler(d => this._parent.legendHighlight(d))\n            )\n            .on(\n                'mouseout',\n                adaptHandler(d => this._parent.legendReset(d))\n            )\n            .on(\n                'click',\n                adaptHandler(d => this._parent.legendToggle(d))\n            );\n\n        if (this._highlightSelected) {\n            // TODO: fragile code - there may be other types of filters\n            itemEnter.classed(constants.SELECTED_CLASS, d => filters.indexOf(d.name) !== -1);\n        }\n\n        itemEnter\n            .append('span')\n            .attr('class', 'dc-legend-item-color')\n            .style('background-color', d => d.color);\n\n        itemEnter\n            .append('span')\n            .attr('class', 'dc-legend-item-label')\n            .attr('title', this._legendText)\n            .text(this._legendText);\n    }\n\n    /**\n     * Set the container selector for the legend widget. Required.\n     */\n    public container(): Selection<HTMLElement, any, any, any>;\n    public container(container: string | Selection<HTMLElement, any, any, any>): this;\n    public container(container?) {\n        if (!arguments.length) {\n            return this._container;\n        }\n        this._container = select(container);\n        return this;\n    }\n\n    /**\n     * This can be optionally used to override class for legenditem and just use this class style.\n     * This is helpful for overriding the style of a particular chart rather than overriding\n     * the style for all charts.\n     *\n     * Setting this will disable the highlighting of selected items also.\n     */\n    public legendItemClass(): string;\n    public legendItemClass(legendItemClass: string): this;\n    public legendItemClass(legendItemClass?) {\n        if (!arguments.length) {\n            return this._legendItemClass;\n        }\n        this._legendItemClass = legendItemClass;\n        return this;\n    }\n\n    /**\n     * This can be optionally used to enable highlighting legends for the selections/filters for the\n     * chart.\n     */\n    public highlightSelected(): boolean;\n    public highlightSelected(highlightSelected: boolean): this;\n    public highlightSelected(highlightSelected?) {\n        if (!arguments.length) {\n            return this._highlightSelected;\n        }\n        this._highlightSelected = highlightSelected;\n        return this;\n    }\n\n    /**\n     * Display the legend horizontally instead of vertically\n     */\n    public horizontal(): boolean;\n    public horizontal(horizontal: boolean): this;\n    public horizontal(horizontal?) {\n        if (!arguments.length) {\n            return this._horizontal;\n        }\n        this._horizontal = horizontal;\n        return this;\n    }\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     *\n     * @example\n     * ```\n     * // default legendText\n     * legend.legendText(d => d.name)\n     *\n     * // create numbered legend items\n     * chart.legend(new HtmlLegend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(new HtmlLegend().legendText(function(d) { return d.name + ': ' d.data; }))\n     * ```\n     */\n    public legendText(): LegendTextAccessor;\n    public legendText(legendText: LegendTextAccessor): this;\n    public legendText(legendText?) {\n        if (!arguments.length) {\n            return this._legendText;\n        }\n        this._legendText = legendText;\n        return this;\n    }\n\n    /**\n     * Maximum number of legend items to display\n     */\n    public maxItems(): number;\n    public maxItems(maxItems: number): this;\n    public maxItems(maxItems?) {\n        if (!arguments.length) {\n            return this._maxItems;\n        }\n        this._maxItems = isNumber(maxItems) ? maxItems : undefined;\n        return this;\n    }\n}\n","import { HtmlLegend as HtmlLegendNeo } from '../../charts/html-legend';\n\nexport class HtmlLegend extends HtmlLegendNeo {\n    constructor() {\n        super();\n    }\n}\n\nexport const htmlLegend = () => new HtmlLegend();\n","import { isNumber } from '../core/utils';\nimport { constants } from '../core/constants';\nimport { LegendItem, LegendTextAccessor, ParentOfLegend } from '../core/types';\nimport { Selection } from 'd3-selection';\nimport { adaptHandler } from '../core/d3compat';\n\nconst LABEL_GAP = 2;\n\n/**\n * Legend is a attachable widget that can be added to other dc charts to render horizontal legend\n * labels.\n *\n * Examples:\n * - {@link http://dc-js.github.com/dc.js/ | Nasdaq 100 Index}\n * - {@link http://dc-js.github.com/dc.js/crime/index.html | Canadian City Crime Stats}\n * @example\n * ```\n * chart.legend(new Legend().x(400).y(10).itemHeight(13).gap(5))\n * ```\n */\nexport class Legend {\n    private _parent: ParentOfLegend;\n    private _x: number;\n    private _y: number;\n    private _itemHeight: number;\n    private _gap: number;\n    private _horizontal: boolean;\n    private _legendWidth: number;\n    private _itemWidth: number;\n    private _autoItemWidth: boolean;\n    private _legendText: LegendTextAccessor;\n    private _maxItems: number;\n    private _highlightSelected: boolean;\n    private _g: Selection<SVGGElement, any, SVGElement, any>;\n\n    constructor() {\n        this._parent = undefined;\n        this._x = 0;\n        this._y = 0;\n        this._itemHeight = 12;\n        this._gap = 5;\n        this._horizontal = false;\n        this._legendWidth = 560;\n        this._itemWidth = 70;\n        this._autoItemWidth = false;\n        this._legendText = d => d.name;\n        this._maxItems = undefined;\n        this._highlightSelected = false;\n\n        this._g = undefined;\n    }\n\n    public parent(): ParentOfLegend;\n    public parent(p: ParentOfLegend): this;\n    public parent(p?) {\n        if (!arguments.length) {\n            return this._parent;\n        }\n        this._parent = p;\n        return this;\n    }\n\n    /**\n     * Set or get x coordinate for legend widget.\n     */\n    public x(): number;\n    public x(x: number): this;\n    public x(x?) {\n        if (!arguments.length) {\n            return this._x;\n        }\n        this._x = x;\n        return this;\n    }\n\n    /**\n     * Set or get y coordinate for legend widget.\n     */\n    public y(): number;\n    public y(y: number): this;\n    public y(y?) {\n        if (!arguments.length) {\n            return this._y;\n        }\n        this._y = y;\n        return this;\n    }\n\n    /**\n     * Set or get gap between legend items.\n     */\n    public gap(): number;\n    public gap(gap: number): this;\n    public gap(gap?) {\n        if (!arguments.length) {\n            return this._gap;\n        }\n        this._gap = gap;\n        return this;\n    }\n\n    /**\n     * This can be optionally used to enable highlighting legends for the selections/filters for the\n     * chart.\n     */\n    public highlightSelected(): boolean;\n    public highlightSelected(highlightSelected: boolean): this;\n    public highlightSelected(highlightSelected?) {\n        if (!arguments.length) {\n            return this._highlightSelected;\n        }\n        this._highlightSelected = highlightSelected;\n        return this;\n    }\n\n    /**\n     * Set or get legend item height.\n     */\n    public itemHeight(): number;\n    public itemHeight(itemHeight: number): this;\n    public itemHeight(itemHeight?) {\n        if (!arguments.length) {\n            return this._itemHeight;\n        }\n        this._itemHeight = itemHeight;\n        return this;\n    }\n\n    /**\n     * Position legend horizontally instead of vertically.\n     */\n    public horizontal(): boolean;\n    public horizontal(horizontal: boolean): this;\n    public horizontal(horizontal?) {\n        if (!arguments.length) {\n            return this._horizontal;\n        }\n        this._horizontal = horizontal;\n        return this;\n    }\n\n    /**\n     * Maximum width for horizontal legend.\n     */\n    public legendWidth(): number;\n    public legendWidth(legendWidth: number): this;\n    public legendWidth(legendWidth?) {\n        if (!arguments.length) {\n            return this._legendWidth;\n        }\n        this._legendWidth = legendWidth;\n        return this;\n    }\n\n    /**\n     * Legend item width for horizontal legend.\n     */\n    public itemWidth(): number;\n    public itemWidth(itemWidth: number): this;\n    public itemWidth(itemWidth?) {\n        if (!arguments.length) {\n            return this._itemWidth;\n        }\n        this._itemWidth = itemWidth;\n        return this;\n    }\n\n    /**\n     * Turn automatic width for legend items on or off. If true, {@link Legend.itemWidth | itemWidth} is ignored.\n     * This setting takes into account the {@link Legend.gap | gap}.\n     */\n    public autoItemWidth(): boolean;\n    public autoItemWidth(autoItemWidth: boolean): this;\n    public autoItemWidth(autoItemWidth?) {\n        if (!arguments.length) {\n            return this._autoItemWidth;\n        }\n        this._autoItemWidth = autoItemWidth;\n        return this;\n    }\n\n    /**\n     * Set or get the legend text function. The legend widget uses this function to render the legend\n     * text for each item. If no function is specified the legend widget will display the names\n     * associated with each group.\n     *\n     * @example\n     * // default legendText\n     * ```\n     * legend.legendText(d => d.name)\n     *\n     * // create numbered legend items\n     * chart.legend(new Legend().legendText(function(d, i) { return i + '. ' + d.name; }))\n     *\n     * // create legend displaying group counts\n     * chart.legend(new Legend().legendText(function(d) { return d.name + ': ' d.data; }))\n     * ```\n     */\n    public legendText(): LegendTextAccessor;\n    public legendText(legendText: LegendTextAccessor): this;\n    public legendText(legendText?) {\n        if (!arguments.length) {\n            return this._legendText;\n        }\n        this._legendText = legendText;\n        return this;\n    }\n\n    /**\n     * Maximum number of legend items to display\n     */\n    public maxItems(): number;\n    public maxItems(maxItems: number): this;\n    public maxItems(maxItems?) {\n        if (!arguments.length) {\n            return this._maxItems;\n        }\n        this._maxItems = isNumber(maxItems) ? maxItems : undefined;\n        return this;\n    }\n\n    // Implementation methods\n\n    private _legendItemHeight(): number {\n        return this._gap + this._itemHeight;\n    }\n\n    public render(): void {\n        this._parent.svg().select('g.dc-legend').remove();\n        this._g = this._parent\n            .svg()\n            .append('g')\n            .attr('class', 'dc-legend')\n            .attr('transform', `translate(${this._x},${this._y})`);\n        let legendables: LegendItem[] = this._parent.legendables();\n        const filters = this._parent.filters();\n\n        if (this._maxItems !== undefined) {\n            legendables = legendables.slice(0, this._maxItems);\n        }\n\n        const itemEnter: Selection<SVGGElement, any, SVGGElement, any> = this._g\n            .selectAll<SVGGElement, any>('g.dc-legend-item')\n            .data<LegendItem>(legendables)\n            .enter()\n            .append('g')\n            .attr('class', 'dc-legend-item')\n            .on(\n                'mouseover',\n                adaptHandler(d => {\n                    this._parent.legendHighlight(d);\n                })\n            )\n            .on(\n                'mouseout',\n                adaptHandler(d => {\n                    this._parent.legendReset(d);\n                })\n            )\n            .on(\n                'click',\n                adaptHandler(d => {\n                    d.chart.legendToggle(d);\n                })\n            );\n\n        if (this._highlightSelected) {\n            // TODO: fragile code - there may be other types of filters\n            itemEnter.classed(constants.SELECTED_CLASS, d => filters.indexOf(d.name) !== -1);\n        }\n\n        this._g\n            .selectAll<SVGGElement, any>('g.dc-legend-item')\n            .classed('fadeout', d => d.chart.isLegendableHidden(d));\n\n        if (legendables.some(d => d.dashstyle)) {\n            itemEnter\n                .append('line')\n                .attr('x1', 0)\n                .attr('y1', this._itemHeight / 2)\n                .attr('x2', this._itemHeight)\n                .attr('y2', this._itemHeight / 2)\n                .attr('stroke-width', 2)\n                .attr('stroke-dasharray', d => d.dashstyle)\n                .attr('stroke', d => d.color);\n        } else {\n            itemEnter\n                .append('rect')\n                .attr('width', this._itemHeight)\n                .attr('height', this._itemHeight)\n                .attr('fill', d => (d ? d.color : 'blue'));\n        }\n\n        {\n            const self = this;\n\n            itemEnter\n                .append('text')\n                .text(self._legendText)\n                .attr('x', self._itemHeight + LABEL_GAP)\n                .attr('y', function () {\n                    return (\n                        self._itemHeight / 2 + (this.clientHeight ? this.clientHeight : 13) / 2 - 2\n                    );\n                });\n        }\n\n        let cumulativeLegendTextWidth = 0;\n        let row = 0;\n\n        {\n            const self = this;\n\n            itemEnter.attr('transform', function (d, i) {\n                if (self._horizontal) {\n                    const itemWidth =\n                        self._autoItemWidth === true\n                            ? this.getBBox().width + self._gap\n                            : self._itemWidth;\n                    if (\n                        cumulativeLegendTextWidth + itemWidth > self._legendWidth &&\n                        cumulativeLegendTextWidth > 0\n                    ) {\n                        ++row;\n                        cumulativeLegendTextWidth = 0;\n                    }\n                    const translateBy = `translate(${cumulativeLegendTextWidth},${\n                        row * self._legendItemHeight()\n                    })`;\n                    cumulativeLegendTextWidth += itemWidth;\n                    return translateBy;\n                } else {\n                    return `translate(0,${i * self._legendItemHeight()})`;\n                }\n            });\n        }\n    }\n}\n","import { Legend as LegendNeo } from '../../charts/legend';\n\nexport class Legend extends LegendNeo {\n    constructor() {\n        super();\n    }\n}\n\nexport const legend = () => new Legend();\n"],"names":["dispatch","format","timeFormat","event","nest","groups","ascending","timeSecond","timeMinute","timeHour","timeDay","timeWeek","timeMonth","timeYear","select","range","scaleLinear","timerFlush","quantile","BaseMixin","BaseMixinNeo","descending","min","max","sum","scaleOrdinal","extent","interpolateHcl","scaleQuantize","ColorMixin","ColorMixinNeo","schemeCategory10","axisBottom","brushX","zoom","scaleBand","axisRight","axisLeft","zoomIdentity","CoordinateGridMixin","CoordinateGridMixinNeo","stack","StackMixin","StackMixinNeo","BarChart","BarChartNeo","BoxPlot","BoxPlotNeo","BubbleChart","BubbleChartNeo","mouse","BubbleOverlay","BubbleOverlayNeo","CboxMenu","CboxMenuNeo","CompositeChart","CompositeChartNeo","DataCount","DataCountNeo","ITEM_CSS_CLASS","DataGrid","DataGridNeo","LABEL_CSS_CLASS","SECTION_CSS_CLASS","DataTable","DataTableNeo","geoPath","geoAlbersUsa","GeoChoroplethChart","GeoChoroplethChartNeo","HeatMap","HeatMapNeo","LABEL_PADDING","curveLinear","curveLinearClosed","curveStep","curveStepBefore","curveStepAfter","curveBasis","curveBasisOpen","curveBasisClosed","curveBundle","curveCardinal","curveCardinalOpen","curveCardinalClosed","curveMonotoneX","line","area","LineChart","LineChartNeo","easeQuad","interpolateNumber","NumberDisplay","NumberDisplayNeo","arc","interpolate","pie","PieChart","PieChartNeo","RowChart","RowChartNeo","symbol","brush","ScatterPlot","ScatterPlotNeo","SelectMenu","SelectMenuNeo","SeriesChart","SeriesChartNeo","DEFAULT_MIN_ANGLE_FOR_LABEL","hierarchy","partition","SunburstChart","SunburstChartNeo","TextFilterWidget","TextFilterWidgetNeo","HtmlLegend","HtmlLegendNeo","Legend","LegendNeo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;UAAa,oBAAqB,SAAQ,KAAK;;;UCAlC,SAAS,GAAG;QACrB,WAAW,EAAE,UAAU;QACvB,iBAAiB,EAAE,OAAO;QAC1B,WAAW,EAAE,OAAO;QACpB,gBAAgB,EAAE,YAAY;QAC9B,cAAc,EAAE,UAAU;QAC1B,eAAe,EAAE,WAAW;QAC5B,gBAAgB,EAAE,iBAAiB;QACnC,mBAAmB,EAAE,yBAAyB;QAC9C,WAAW,EAAE,EAAE;QACf,iBAAiB,EAAE,KAAK;KAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTY,YAAgB,SAAQ,KAAQ;QAGzC,YAAY,GAAM,EAAE,IAAO;YACvB,KAAK,EAAE,CAAC;YAHH,eAAU,GAAG,cAAc,CAAC;YAIjC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACd,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAClB;QAED,UAAU,CAAC,KAAQ;YACf,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9C;QAED,SAAS;YACL,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;SACpB;KACJ;;UChBY,0BAA2B,SAAQ,KAAK;QAKjD,YAAY,MAAM;YACd,KAAK,EAAE,CAAC;YALI,eAAU,GAAG,4BAA4B,CAAC;YAOtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACvB;YAED,IAAI,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK,EAAE;gBAC5B,IAAI,CAAC,cAAc,GAAG;oBAClB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5E,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/E,CAAC;aACL;iBAAM;gBACH,IAAI,CAAC,cAAc,GAAG;oBAClB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC;oBACtB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;iBACxB,CAAC;aACL;SACJ;QAEM,UAAU,CAAC,KAAK;YACnB,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,CAAC;YAEN,IAAI,KAAK,YAAY,KAAK,EAAE;gBACxB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aAChB;iBAAM;gBACH,CAAC,GAAG,KAAK,CAAC;gBACV,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjC;YAED,QACI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B;SACL;QAED,SAAS;YACL,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;SACpB;KACJ;;UChDY,oBAAqB,SAAQ,KAAK;QAG3C,YAAY,MAAM;YACd,KAAK,EAAE,CAAC;YAHI,eAAU,GAAG,sBAAsB,CAAC;YAIhD,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SACvB;QAEM,UAAU,CAAC,KAAK;YACnB,QACI,KAAK,CAAC,MAAM;gBACZ,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;gBAC5B,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpB,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EACtB;SACL;QAED,SAAS;YACL,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;SACpB;KACJ;;UCrBY,eAAgB,SAAQ,KAAK;QAGtC,YAAY,IAAI;YACZ,KAAK,EAAE,CAAC;YAHI,eAAU,GAAG,iBAAiB,CAAC;YAK3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;aACrB;SACJ;QAEM,UAAU,CAAC,KAAK;YACnB,MAAM,MAAM,GAAG,IAAI,CAAC;YAEpB,IAAI,EAAE,MAAM,CAAC,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;gBAC5E,OAAO,KAAK,CAAC;aAChB;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE;oBACxB,OAAO,KAAK,CAAC;iBAChB;aACJ;YAED,OAAO,IAAI,CAAC;SACf;QAED,SAAS;YACL,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;SACpB;KACJ;;IC1BM,MAAM,aAAa,GAA6C;QACnE,eAAe,EAAE,KAAK,IAAI,IAAI,eAAe,CAAC,KAAK,CAAC;QACpD,YAAY,EAAE,KAAK,IAAI,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3D,0BAA0B,EAAE,KAAK,IAAI,IAAI,0BAA0B,CAAC,KAAK,CAAC;QAC1E,oBAAoB,EAAE,KAAK,IAAI,IAAI,oBAAoB,CAAC,KAAK,CAAC;KACjE,CAAC;;UCLW,aAAa;QAWtB;YACI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;YACjC,IAAI,CAAC,qBAAqB,GAAGA,mBAAQ,CAAC,gBAAgB,CAAC,CAAC;SAC3D;QAEM,cAAc,CAAC,GAAW,EAAE,QAAQ;YACvC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,kBAAkB,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;SACpE;QAEM,sBAAsB,CAAC,MAA6B;YACvD,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBACvC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;aAC5C;YACD,MAAM,QAAQ,qBAAQ,MAAM,CAAE,CAAC;YAC/B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpD,OAAO,QAAQ,CAAC;SACnB;QAEM,wBAAwB,CAAC,UAAe,EAAE,QAAa;;YAE1D,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACzD,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;SACvD;QAEM,aAAa;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;SACpC;QAEM,eAAe,CAAC,UAAe,EAAE,OAAO;YAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC3D,aAAa;iBACR,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,gBAAgB,KAAK,UAAU,CAAC;iBACrD,OAAO,CAAC,CAAC;gBACN,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;aAC/B,CAAC,CAAC;YAEP,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YACzD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE;gBACpD,QAAQ;gBACR,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;aACzC,CAAC,CAAC;SACN;QAEM,aAAa,CAAC,UAAe,EAAE,OAAO;YACzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SAC1C;QAEM,aAAa,CAAC,UAAe;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;aACrC;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SACxC;QAEM,qBAAqB,CAAC,UAAU;YACnC,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SAC5C;QAEM,mBAAmB,CAAC,UAAU,EAAE,OAAO;;YAE1C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;;;YAIxC,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC3D,IAAI,aAAa,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;gBACnC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAC1C;;YAGD,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SAC7C;QAEM,8BAA8B,CAAC,UAAU,EAAE,KAAK;YACnD,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YACzE,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACjD;QAEM,SAAS,CAAC,EAAE,iBAAiB,KAAqB,EAAE;;;YAGvD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;iBAC3C,GAAG,CAAC,aAAa;;gBAEd,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC;gBAEzD,IAAI,QAAQ,EAAE;oBACV,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;oBACvD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBAChE,IAAI,iBAAiB,EAAE;4BACnB,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;yBAC1C;wBACD,OAAO,KAAK,CAAC;qBAChB;iBACJ;gBACD,OAAO,SAAS,CAAC;aACpB,CAAC;iBACD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACvB;QAEM,OAAO,CAAC,OAA6B;YACxC,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;YAEjE,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAC5B,OAAO,CAAC,GAAG,CAAC,KAAK;;gBAEb,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,UAAmC,KAC1E,UAAU,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC,CAClE,CAAC;;gBAGF,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;;gBAGzE,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAE/C,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;aAChC,CAAC,CACL,CAAC;YAEF,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE;;gBAElD,MAAM,OAAO,GAAG,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC;sBAC1C,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC;sBAChC,EAAE,CAAC;gBAET,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;aACjD;SACJ;QAEO,iBAAiB,CAAC,OAAe,EAAE,OAAc;YACrD,IAAI,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,EAAE;gBAC7C,OAAO;oBACH,OAAO;oBACP,UAAU,EAAE,QAAQ;oBACpB,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC;iBACvB,CAAC;aACL;YAED,MAAM,eAAe,GAAc,OAAO,CAAC;YAC3C,OAAO;gBACH,OAAO;gBACP,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,UAAU;gBACzC,MAAM,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;aAClD,CAAC;SACL;QAEO,mBAAmB,CAAC,UAAU,EAAE,MAAM;;YAE1C,IAAI,UAAU,KAAK,QAAQ,EAAE;gBACzB,OAAO,MAAM,CAAC;aACjB;;YAGD,MAAM,aAAa,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;YAEhD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;KACJ;;IC/KD;;;;;;;;;;;;;;;;;;;;;AAqBA,UAAa,UAAU;;;;QA8CnB;YACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;SAC5C;;;;;;QAOM,IAAI;YACP,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;;;;;;QAOM,GAAG,CAAC,KAAoB;YAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACvC;;;;;;QAOM,QAAQ,CAAC,KAAoB;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;;;;;;QAOM,UAAU,CAAC,KAAoB;YAClC,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;gBACrC,KAAK,CAAC,OAAO,EAAE,CAAC;aACnB;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC;SAC1D;;;;;;;QAQM,KAAK;YACR,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACrB;;;;;;;;;;QAWY,SAAS;;gBAClB,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE;oBAC5C,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;iBAChC;gBAED,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;oBAC9B,KAAK,CAAC,MAAM,EAAE,CAAC;iBAClB;gBAED,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;oBACtC,IAAI,CAAC,SAAS,EAAE,CAAC;iBACpB;aACJ;SAAA;;;;;;;;;;;;;;;;QAiBY,SAAS;;gBAClB,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,UAAU,EAAE;oBAC5C,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;iBAChC;gBAED,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;oBAC9B,KAAK,CAAC,MAAM,EAAE,CAAC;iBAClB;gBAED,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;oBACtC,IAAI,CAAC,SAAS,EAAE,CAAC;iBACpB;aACJ;SAAA;;;;QAKM,SAAS;YACZ,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC9B,KAAK,CAAC,SAAS,EAAE,CAAC;aACrB;SACJ;;;;QAKM,UAAU;YACb,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC9B,IAAI,KAAK,CAAC,KAAK,EAAE;oBACb,KAAK,CAAC,KAAK,EAAE,CAAC;iBACjB;aACJ;SACJ;KACJ;;IClMD;;;;;;;;;;;IAWA,MAAM,aAAa;QAGf;;YAEI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACvB;QAEM,UAAU,CAAC,KAAc;YAC5B,IAAI,CAAC,KAAK,EAAE;gBACR,KAAK,GAAG,SAAS,CAAC,mBAAmB,CAAC;aACzC;YAED,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,UAAU,EAAE,CAAC;aAC5C;YAED,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAChC;;;;QAKM,GAAG,CAAC,KAAoB;YAC3B,KAAK,MAAM,cAAc,IAAI,IAAI,CAAC,SAAS,EAAE;gBACzC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;oBAC/C,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;wBAC3C,OAAO,IAAI,CAAC;qBACf;iBACJ;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;;;;QAIM,KAAK,CAAC,KAAc;YACvB,IAAI,KAAK,EAAE;gBACP,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;oBAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBAChC;aACJ;iBAAM;gBACH,KAAK,MAAM,cAAc,IAAI,IAAI,CAAC,SAAS,EAAE;oBACzC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;wBAC/C,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;qBAC1C;iBACJ;gBACD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACvB;SACJ;;;;;QAMM,IAAI,CAAC,KAAc;YACtB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;SACxC;KACJ;IAED;;;;UAIa,aAAa,GAAG,IAAI,aAAa,EAAE;;IChFhD;;;AAGA,UAAa,MAAM;QAOf;YACI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAE5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC5B;;;;;;;;;QAUM,IAAI,CAAC,GAAW;YACnB,IAAI,OAAO,EAAE;gBACT,IAAI,OAAO,CAAC,IAAI,EAAE;oBACd,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB;qBAAM,IAAI,OAAO,CAAC,GAAG,EAAE;oBACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACpB;aACJ;YAED,OAAO,IAAI,CAAC;SACf;;;;;;;;;QAUM,QAAQ,CAAC,GAAW;YACvB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gBAEhC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;YAED,OAAO,IAAI,CAAC;SACf;;;;;;;;;QAUM,KAAK,CAAC,GAAW;YACpB,IAAI,IAAI,CAAC,cAAc,IAAI,OAAO,EAAE;gBAChC,IAAI,OAAO,CAAC,KAAK,EAAE;oBACf,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACtB;qBAAM,IAAI,OAAO,CAAC,GAAG,EAAE;oBACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACpB;aACJ;YAED,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,MAAM,GAAG,IAAI,MAAM,EAAE;;ICrElC;;;AAGA,UAAa,MAAM;QAoBf;;;;YAVO,gBAAW,GAAGC,eAAM,CAAC,KAAK,CAAC,CAAC;YAW/B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,kBAAkB,CAAC;YAEhD,IAAI,CAAC,UAAU,GAAGC,uBAAU,CAAC,UAAU,CAAC,CAAC;YAEzC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACnC;QAiBM,aAAa,CAAC,MAAO;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;gBAEnB,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM,CAAC,kBAAkB,EAAE;oBACnD,MAAM,CAAC,QAAQ,CACX,sEAAsE;wBAClE,2FAA2F;wBAC3F,mFAAmF;wBACnF,mEAAmE;wBACnE,qEAAqE,CAC5E,CAAC;iBACL;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;YACD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;;IAED;IACA;IACc,yBAAkB,GAAe;QAC3C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;QACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;QACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;QACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;KAAC,CAAC;IAG/D;;;UAGa,MAAM,GAAG,IAAI,MAAM,EAAE;;IC9ElC;IACA,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,+BAA+B;;ICGxD;;;;AAIA,aAAgB,aAAa,CAAC,KAAoB,EAAE,KAAc;QAC9D,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED;;;;AAIA,aAAgB,eAAe,CAAC,KAAoB,EAAE,KAAc;QAChE,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAED;;;AAGA,aAAgB,QAAQ,CAAC,KAAoB;QACzC,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED;;;AAGA,aAAgB,mBAAmB,CAAC,KAAM;QACtC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED;;;;AAIA,aAAgB,SAAS,CAAC,KAAc;QACpC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC;IAED;;;;AAIA,aAAgB,UAAU,CAAC,KAAc;QACrC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC;IAED;;;;AAIA,aAAgB,SAAS,CAAC,KAAc;QACpC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;;QAG5C,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;;YAE5B,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC5B;IACL,CAAC;IAED;;;;;;AAMA,aAAgB,SAAS,CAAC,KAAc;QACpC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;;QAG5C,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;;YAE5B,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SAC5B;IACL,CAAC;;IChFD;;;;;;;;;;;;;AAaA,aAAgB,UAAU,CAAC,SAAS,EAAE,QAAiB,EAAE,KAAc,EAAE,IAAa;;QAElF,IAAI,MAAM,CAAC,kBAAkB,IAAI,QAAQ,IAAI,CAAC,EAAE;YAC5C,OAAO,SAAS,CAAC;SACpB;QAED,IAAI,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,KAAK,SAAS,EAAE;YACzC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAC5B;QACD,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,SAAS,EAAE;YACnC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;QAED,OAAO,CAAC,CAAC;IACb,CAAC;IAED;AACA,aAAgB,kBAAkB,CAC9B,MAAe,EACf,QAAiB,EACjB,KAAc,EACd,IAAa;QAEb,IAAI,MAAM,EAAE;YACR,OAAO,UAAU,SAAS;gBACtB,OAAO,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACvD,CAAC;SACL;aAAM;YACH,OAAO,UAAU,SAAS;gBACtB,OAAO,SAAS,CAAC;aACpB,CAAC;SACL;IACL,CAAC;IAED;AACA,aAAgB,eAAe,CAAC,WAAW,EAAE,QAAQ;QACjD,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9B;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,WAAW;iBACN,IAAI,CAAC;gBACF,EAAE,CAAC,CAAC;aACP,CAAC;iBACD,EAAE,CAAC,KAAK,EAAE;gBACP,IAAI,CAAC,EAAE,CAAC,EAAE;oBACN,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC9B;aACJ,CAAC,CAAC;SACV;IACL,CAAC;AAED,aAAgB,eAAe,CAAC,CAAM;QAClC,OAAO,CAAC,YAAY,MAAM,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC;IACvD,CAAC;;aCnEe,SAAS,CAAC,CAAmB;QACzC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;YAEnB,OAAO,MAAM,CAAC,UAAU,CAAC;SAC5B;;QAED,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;IAChB,CAAC;;ICPD;IACA;IACA;IACA;IACA;AACA,aAAgB,YAAY,CAAC,OAAO;QAChC,OAAO,UAAU,CAAC,EAAE,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;;gBAEf,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;iBAAM;;gBAEH,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAEC,iBAAK,CAAC,CAAC;aAChC;SACJ,CAAC;IACN,CAAC;IASD,SAAS,WAAW,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAiB;QACtE,MAAM,MAAM,GAAGC,iBAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,QAAQ,EAAE;YACV,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAC7B;QACD,IAAI,UAAU,EAAE;YACZ,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACjC;QACD,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,WAAW,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAiB;QACtE,IAAI,UAAU,EAAE;YACZ,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,IAAI,GAAG,GAAGC,cAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,QAAQ,EAAE;YACV,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;;QAGD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK;YACjB,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;YACd,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;SACf,CAAC,CAAC,CAAC;IACR,CAAC;AAED,aAAgB,gBAAgB,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAiB;QAClF,IAAIA,cAAM,EAAE;;YAER,OAAO,WAAW,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;SAC9D;aAAM;;YAEH,OAAO,WAAW,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;SAC9D;IACL,CAAC;;IChED;AAOA,UAAa,MAAM,GAAY;QAC3B,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,SAAS;KACrB,CAAC;IAEF;;;;;;;;;;;;;;;;;;IAkBA,MAAM,CAAC,OAAO,GAAG,UAAU,OAAmB,EAAE,KAAc;QAC1D,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,EAAE,CAAC;YACV,OAAO;SACV;QAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAEzB,UAAU,CAAC;YACP,IAAI,OAAO,KAAK,MAAM,CAAC,OAAO,EAAE;gBAC5B,OAAO,EAAE,CAAC;aACb;SACJ,EAAE,KAAK,CAAC,CAAC;IACd,CAAC,CAAC;;ICpCF;;;;;;;;;;;;;;;;;AAkBA,UAAa,OAAO,GAAG;;;;;;;;;QASnB,YAAY,EAAE,CAAC,GAAG,EAAE,IAAI,KAAK,IAAI,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC;;;;;;;;;;QAWxD,oBAAoB,EAAE,MAAM,IAAI,IAAI,oBAAoB,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;QAkBhE,0BAA0B,EAAE,MAAM,IAAI,IAAI,0BAA0B,CAAC,MAAM,CAAC;;;;;;;;;QAU5E,eAAe,EAAE,IAAI,IAAI,IAAI,eAAe,CAAC,IAAI,CAAC;KACrD;;UC1EY,qBAAsB,SAAQ,KAAK;KAAG;;ICO5C,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC;QAChC,OAAO,UAAU,CAAC,EAAE,CAAC;YACjB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,CAAC;IACN,CAAC,CAAC;AAEF,aAAgB,MAAM,CAAC,IAAI,EAAE,QAAyB;;QAElD,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACvB,OAAOC,iBAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C,CAAC,CAAC;IACP,CAAC;IAED;;;AAGA,aAAgB,gBAAgB,CAAC,MAAM;QACnC,IAAI,CAAC,GAAW,GAAG,MAAM,EAAE,CAAC;QAE5B,IAAI,MAAM,YAAY,IAAI,EAAE;YACxB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACjC;aAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YACnC,CAAC,GAAG,MAAM,CAAC;SACd;aAAM,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;YACxB,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAClC;aAAM,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1B,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;SAC/B;QAED,OAAO,CAAC,CAAC;IACb,CAAC;IAED;IACA,SAAS,WAAW,CAAC,CAAC;QAClB,MAAM,QAAQ,GAAG;YACb,MAAM,EAAEC,iBAAU;YAClB,MAAM,EAAEC,iBAAU;YAClB,IAAI,EAAEC,eAAQ;YACd,GAAG,EAAEC,cAAO;YACZ,IAAI,EAAEC,eAAQ;YACd,KAAK,EAAEC,gBAAS;YAChB,IAAI,EAAEC,eAAQ;SACjB,CAAC;QACF,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;AAoBA,aAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE;QACxB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACvB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,IAAI,EAAE;YACnB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACvB,CAAC,GAAG,CAAC,CAAC,CAAC;aACV;YACD,IAAI,CAAC,KAAK,QAAQ,EAAE;gBAChB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;aACpC;YACD,CAAC,GAAG,CAAC,IAAIH,cAAO,CAAC;YACjB,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;gBACzB,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;aACtB;YACD,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB;aAAM,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YAC9B,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;SAC9D;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,CAAC;SAChB;IACL,CAAC;IAED;;;;;;;;;;;;;;;;;;;AAmBA,aAAgB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE;QAC7B,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACvB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,IAAI,EAAE;YACnB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACvB,CAAC,GAAG,CAAC,CAAC,CAAC;aACV;YACD,IAAI,CAAC,KAAK,QAAQ,EAAE;gBAChB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;aACpC;YACD,CAAC,GAAG,CAAC,IAAIA,cAAO,CAAC;YACjB,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;gBACzB,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;aACtB;YACD,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B;aAAM,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YAC9B,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;SAC9D;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,CAAC;SAChB;IACL,CAAC;IAED;;;AAGA,aAAgB,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB,CAAC;IAED;;;AAGA,aAAgB,OAAO,CAAC,CAAC;;QAErB,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAED;;;AAGA,aAAgB,SAAS,CAAC,CAAC;;QAEvB,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAED;;;AAGA,aAAgB,YAAY,CAAC,CAAC;QAC1B,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,iBAAiB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;IACjG,CAAC;IAED;;;AAGA,aAAgB,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;QAC/B,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACnD,CAAC;IAED;;;IAGA,IAAI,UAAU,GAAG,CAAC,CAAC;AACnB,aAAgB,QAAQ;QACpB,OAAO,EAAE,UAAU,CAAC;IACxB,CAAC;IAED;;;AAGA,aAAgB,QAAQ,CAAC,IAAI;QACzB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED;;;AAGA,aAAgB,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAI;QACjD,GAAG,GAAG,GAAG,IAAI,QAAQ,CAAC;QACtB,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,OAAO,CAAC,KAAK,EAAE,EAAE;YACjB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAChC;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAED;;;AAGA,aAAgB,UAAU,CAAC,CAAC;QACxB,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED;;;AAGA,aAAgB,WAAW,CAAC,EAAE,EAAE,EAAE;QAC9B,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;YACZ,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;YACZ,OAAO,KAAK,CAAC;SAChB;QAED,QACI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM;;;YAGvB,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAC3D;IACN,CAAC;IAED;AACA,aAAgB,WAAW,CAAC,IAAI;QAC5B,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;IACA;AACA,aAAgB,WAAW,CAAC,IAAI,EAAE,QAAQ;QACtC,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;YACvB,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,WAAW,GAAG,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1C,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;gBACtC,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,SAAS,CAAC;gBACd,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;;oBAEtB,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;oBAG3C,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE;wBACtB,SAAS,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;wBAC/D,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAC5B;oBACD,WAAW,GAAG,SAAS,CAAC;iBAC3B;qBAAM;;oBAEH,SAAS,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;oBAC9D,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC5B;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,SAAS,UAAU,CAAC,QAAQ,EAAE,QAAQ;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;gBAC9B,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;aACtB;SACJ;IACL,CAAC;AAED,aAAgB,YAAY,CAAC,IAAI;QAC7B,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,OAAO,OAAO,CAAC,MAAM,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;AAED,aAAgB,eAAe,CAAC,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;YAChB,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,CAAC,EAAE,EAAE;YACR,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACf,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;;ICnTD;;;AAGA,aAAgB,YAAY,CAAC,OAAO;QAChC,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAED;;;AAGA,aAAgB,WAAW,CAAC,MAAM;QAC9B,IAAI,CAAC,GAAG,EAAE,CAAC;QAEX,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,IAAI,EAAE;YAClD,IAAI,MAAM,YAAY,KAAK,EAAE;gBACzB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;iBAChE;qBAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC3B,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnC;aACJ;iBAAM;gBACH,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;aAChC;SACJ;QAED,OAAO,CAAC,CAAC;IACb,CAAC;;UC1BY,QAAQ,GAAG;QACpB,MAAM,EAAE,WAAW;QACnB,OAAO,EAAE,YAAY;KACxB;;ICFD;;;;;;;;;;;;;AAaA,IAAO,MAAM,YAAY,GAAW,UAAU,KAAa,EAAE,GAAW;QACpE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF;;;;;;;;;;;;;;;;;;;;AAoBA,IAAO,MAAM,YAAY,GAAW,UAAU,KAAK,EAAE,GAAG;QACpD,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;IACnF,CAAC,CAAC;IAEF;;;;;;;;;;;;;;;;;;;;AAoBA,IAAO,MAAM,iBAAiB,GAAG,UAAU,SAAiB;QACxD,MAAM,EAAE,GAAW,UAAU,CAAS,EAAE,CAAS;YAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACjC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxB;iBAAM;gBACH,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvB;SACJ,CAAC;QACF,EAAE,CAAC,UAAU,GAAG,SAAS,CAAC;QAC1B,OAAO,EAAE,CAAC;IACd,CAAC,CAAC;;UCzEW,KAAK,GAAG;QACjB,QAAQ,EAAE,YAAY;QACtB,OAAO,EAAE,YAAY;QACrB,EAAE,EAAE,EAAE,SAAS,EAAE,iBAAiB,EAAE;KACvC;;ICcD;;;;;;;;;;;;;;;;;;UAkBa,KAAK,GAAG,UAAU,CAAC,EAAE,CAAE;QAChC,IAAI,CAAC,CAAC,EAAE;YACJ,OAAO,UAAU,CAAC;gBACd,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACf,CAAC;SACL;QACD,OAAO,UAAU,CAAC,EAAE,CAAC;YACjB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,CAAC;IACN,CAAC,CAAC;AAEF,UAAa,KAAK,GAAG;QACjB,GAAG,EAAE,GAAG;QACR,WAAW,EAAE,WAAW;QACxB,cAAc,EAAE,cAAc;QAC9B,WAAW,EAAE,WAAW;QACxB,eAAe,EAAE,eAAe;QAChC,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,UAAU,CAAC;YACjB,OAAO,MAAM,CAAC,CAAC;SAClB;QACD,YAAY,EAAE,YAAY;QAC1B,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,SAAS;QACpB,YAAY,EAAE,YAAY;QAC1B,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,gBAAgB,EAAE,gBAAgB;QAClC,UAAU,EAAE,UAAU;QACtB,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,WAAW;QACxB,QAAQ,EAAE,QAAQ;KACrB;;ICtED;AACA,IAuCA;;;;;AAKA,UAAa,KAAK,GAAG;QACjB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,KAAK,GAAG,MAAM,CAAC;QACnB,IAAI,QAAQ,GAAG,WAAW,CAAC;QAC3B,IAAI,SAAS,GAAG,YAAY,CAAC;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC;;QAGtB,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAC7B,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,IAAI,WAAW,GAAG,GAAG,CAAC;QACtB,IAAI,gBAAgB,GAAG,GAAG,CAAC;QAC3B,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,IAAI,WAAW,GAAG,KAAK,CAAC;;QAGxB,SAAS,GAAG,CAAC,CAAC;YACV,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,KAAK;gBACxB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAACJ,iBAAS,CAAC,CAAC;gBACvC,MAAM,EAAE,GAAGQ,kBAAM,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBACtB,IAAI,GAAG,CAAC;gBACR,IAAI,GAAG,CAAC;;gBAGR,IAAI,CAAC,KAAK,CAAC,EAAE;oBACT,OAAO;iBACV;;gBAGD,MAAM,YAAY,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;gBAGxD,MAAM,cAAc,GAAG,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBACpE,MAAM,WAAW,GAAG,cAAc,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;;gBAIzE,MAAM,cAAc,GAAG,cAAc;sBAC/BC,aAAK,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAACA,aAAK,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnEA,aAAK,CAAC,CAAC,CAAC,CAAC;;gBAGf,IAAI,YAAY,EAAE;oBACd,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACd,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACrB;qBAAM;oBACH,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjC;gBACD,MAAM,YAAY,GAAGA,aAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;gBAGrE,MAAM,EAAE,GAAGC,mBAAW,EAAE;qBACnB,MAAM,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;qBAChE,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;gBAGxB,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,IAAIA,mBAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;;gBAGnF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;;;;;gBAQpB,MAAM,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;gBAElF,MAAM;qBACD,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC;qBACtB,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;qBACvB,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;qBACrB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;qBACrB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACzB,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;qBACtB,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;qBACnB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE/B,MAAM;qBACD,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;qBACnB,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;qBACrB,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;qBACrB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE/B,MAAM;qBACD,IAAI,EAAE;qBACN,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;qBACtB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACzB,MAAM,EAAE,CAAC;;gBAGd,MAAM,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAE3D,IAAI,CAAC,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;qBACpB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;qBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxC,KAAK,CAAC,cAAc,EAAE,gBAAgB,GAAG,GAAG,GAAG,CAAC,CAAC;qBACjD,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE9C,IAAI,CAAC,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;qBACpB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAG9C,MAAM,UAAU,GAAG,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEvE,UAAU;qBACL,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;qBACvB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;qBACjB,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAEpB,UAAU;qBACL,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;qBACjB,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;gBAGpB,MAAM,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;gBAErE,OAAO;qBACF,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC;qBAC9B,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;qBACxB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;qBACjB,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;qBACtB,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAEzB,OAAO;qBACF,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;qBACjB,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAEzB,OAAO;qBACF,IAAI,EAAE;qBACN,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;qBACd,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;qBACtB,MAAM,EAAE,CAAC;;gBAGd,IAAI,YAAY,EAAE;oBACd,MAAM,YAAY,GAAG,WAAW,GAAG,aAAa,GAAG,SAAS,CAAC;oBAC7D,MAAM,WAAW,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;oBACxC,MAAM,QAAQ,GAAG,WAAW;0BACtB;4BACI,OAAO,IAAI,CAAC,KAAK,CACb,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK,GAAG,gBAAgB,CAAC;gCACtC,CAAC;gCACD,CAAC,KAAK,GAAG,KAAK,GAAG,gBAAgB,IAAI,CAAC,CAC7C,CAAC;yBACL;0BACD;4BACI,OAAO,KAAK,GAAG,CAAC,CAAC;yBACpB,CAAC;oBAER,MAAM,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;oBAEpF,OAAO;yBACF,KAAK,EAAE;yBACP,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;yBACxB,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;yBAC3B,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC;yBACtB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;yBACpB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;yBACtB,UAAU,EAAE;yBACZ,QAAQ,CAAC,QAAQ,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC;yBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;oBAE3B,IAAI,WAAW,EAAE;wBACb,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;wBACpC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9C;oBAED,OAAO;yBACF,UAAU,EAAE;yBACZ,QAAQ,CAAC,QAAQ,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC;yBACZ,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;yBACpB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;oBAE3B,OAAO;yBACF,IAAI,EAAE;yBACN,UAAU,EAAE;yBACZ,QAAQ,CAAC,QAAQ,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC;yBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;yBACb,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;yBACtB,MAAM,EAAE,CAAC;iBACjB;;gBAGD,IAAI,gBAAgB,EAAE;oBAClB,MAAM,KAAK,GAAG,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAE7D,KAAK;yBACA,KAAK,EAAE;yBACP,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;yBACxB,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;yBACrB,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC;yBACrB,IAAI,CAAC,IAAI,EAAE,MACR,IAAI,CAAC,KAAK,CACN,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK,GAAG,gBAAgB,CAAC;wBACtC,CAAC;wBACD,CAAC,KAAK,GAAG,KAAK,GAAG,gBAAgB,IAAI,CAAC,CAC7C,CACJ;yBACA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;yBACtB,UAAU,EAAE;yBACZ,QAAQ,CAAC,QAAQ,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC;yBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B,KAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;oBAEnC,IAAI,WAAW,EAAE;wBACb,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;wBAClC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5C;oBAED,KAAK;yBACA,UAAU,EAAE;yBACZ,QAAQ,CAAC,QAAQ,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC;yBACZ,IAAI,CAAC,IAAI,EAAE,MACR,IAAI,CAAC,KAAK,CACN,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK,GAAG,gBAAgB,CAAC;wBACtC,CAAC;wBACD,CAAC,KAAK,GAAG,KAAK,GAAG,gBAAgB,IAAI,CAAC,CAC7C,CACJ;yBACA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B,KAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;oBAEnC,KAAK;yBACA,IAAI,EAAE;yBACN,UAAU,EAAE;yBACZ,QAAQ,CAAC,QAAQ,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC;yBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;yBACb,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;yBACtB,MAAM,EAAE,CAAC;iBACjB;;gBAGD,MAAM,MAAM,GAAG,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;gBAG9C,MAAM,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;gBAI5D,OAAO;qBACF,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;qBACpB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;qBAClB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACtC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;qBACxC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;qBACb,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC;qBACxD,IAAI,CAAC,MAAM,CAAC;qBACZ,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAEnB,OAAO;qBACF,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,MAAM,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;qBACxC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;;;;;gBAOnB,MAAM,WAAW,GAAG,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;gBAEzE,WAAW;qBACN,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;qBACxB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;qBAClB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;qBAChB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;qBACb,IAAI,CAAC,MAAM,CAAC;qBACZ,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;qBACtB,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;qBACb,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAEzB,WAAW;qBACN,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,MAAM,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;qBAChB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;qBACb,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAEzB,WAAW;qBACN,IAAI,EAAE;qBACN,UAAU,EAAE;qBACZ,QAAQ,CAAC,QAAQ,CAAC;qBAClB,KAAK,CAAC,KAAK,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;qBACb,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;qBACtB,MAAM,EAAE,CAAC;;gBAGd,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB,CAAC,CAAC;YACHC,kBAAU,EAAE,CAAC;SAChB;QAED,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC;aAChB;YACD,KAAK,GAAG,CAAC,CAAC;YACV,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,MAAM,CAAC;aACjB;YACD,MAAM,GAAG,CAAC,CAAC;YACX,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,UAAU,CAAC;aACrB;YACD,UAAU,GAAG,CAAC,CAAC;YACf,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,YAAY,CAAC;aACvB;YACD,YAAY,GAAG,CAAC,CAAC;YACjB,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,WAAW,CAAC;aACtB;YACD,WAAW,GAAG,CAAC,CAAC;YAChB,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,gBAAgB,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,gBAAgB,CAAC;aAC3B;YACD,gBAAgB,GAAG,CAAC,CAAC;YACrB,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,WAAW,CAAC;aACtB;YACD,WAAW,GAAG,CAAC,CAAC;YAChB,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,WAAW,CAAC;aACtB;YACD,WAAW,GAAG,CAAC,CAAC;YAChB,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,gBAAgB,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,gBAAgB,CAAC;aAC3B;YACD,gBAAgB,GAAG,CAAC,CAAC;YACrB,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,QAAQ,CAAC;aACnB;YACD,QAAQ,GAAG,CAAC,CAAC;YACb,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,MAAM,CAAC;aACjB;YACD,MAAM,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;YAChE,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC;aAChB;YACD,KAAK,GAAG,CAAC,CAAC;YACV,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,QAAQ,CAAC;aACnB;YACD,QAAQ,GAAG,CAAC,CAAC;YACb,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,SAAS,CAAC;aACpB;YACD,SAAS,GAAG,CAAC,CAAC;YACd,OAAO,GAAG,CAAC;SACd,CAAC;QAEF,OAAO,GAAG,CAAC;IACf,CAAC,CAAC;IAEF;;;;;IAKA,SAAS,WAAW,CAAC,CAAC;QAClB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED;;;;;IAKA,SAAS,YAAY,CAAC,CAAC;QACnB,OAAO,CAACC,gBAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAEA,gBAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAEA,gBAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC;;UCnjBY,aAAa;QAA1B;YACY,aAAQ,GAAU,EAAE,CAAC;SAyJhC;QAxJG,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;QAED,IAAI,OAAO,CAAC,KAAY;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;;;;QAKM,SAAS,CAAC,MAAO;YACpB,IAAI,MAAM,KAAK,IAAI,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;gBAClD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;aAClC;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC;SAC7D;;;;;QAMS,YAAY;;SAErB;;;;;QAMS,eAAe,CAAC,MAAM,KAAI;QAsD7B,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC3D;YAED,IAAI,MAAM,KAAK,IAAI,EAAE;gBACjB,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;iBAAM,IACH,MAAM,YAAY,KAAK;gBACvB,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK;gBAC1B,CAAE,MAAc,CAAC,UAAU,EAC7B;;gBAEE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aAChD;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAE7B,OAAO,IAAI,CAAC;SACf;QAEM,YAAY,CAAC,MAAM;YACtB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACxB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC7B;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC1B;SACJ;;;;;;;;QASS,SAAS,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACxB;;;;;;;;QASM,YAAY,CAAC,MAAM;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;SAC1E;;;;QAKM,YAAY;YACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACrB;;;;QAKM,OAAO;;SAEb;KACJ;;UCnJY,eAAgB,SAAQ,aAAa;QAG9C,YAAY,OAA6B,EAAE;YACvC,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACxB;QACM,SAAS,CAAC,IAA0B;YACvC,IAAI,CAAC,KAAK,mCAAQ,IAAI,CAAC,KAAK,GAAK,IAAI,CAAE,CAAC;YACxC,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEM,YAAY;YACf,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACxD,OAAO;aACV;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrC;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;;gBAEjE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACrD;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,cAAc,EAAE;;gBAEnF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACrD;iBAAM;gBACH,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;oBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC/B,IAAI,MAAM,CAAC,UAAU,EAAE;4BACnB,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;gCACtB,OAAO,IAAI,CAAC;6BACf;yBACJ;6BAAM,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE;4BACnC,OAAO,IAAI,CAAC;yBACf;qBACJ;oBACD,OAAO,KAAK,CAAC;iBAChB,CAAC,CAAC;aACN;SACJ;KACJ;;UCzCY,mBAAoB,SAAQ,eAAe;QAIpD,YAAY,OAA2B,EAAE;YACrC,KAAK;;gBAED,YAAY,EAAE,IAAI,IACf,IAAI,EACT,CAAC;SACN;QAEM,IAAI;YACP,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;SACvB;QAEM,SAAS,CAAC,IAAwB;YACrC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC;SACf;QAEO,yBAAyB;YAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC3B,OAAO;aACV;;;YAKD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAEtC,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBACxB,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,KAAK,UAAU,EAAE;;oBAElD,OAAO;iBACV;;gBAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,sBAAsB,CAAC;gBACrE,UAAU;gBACV,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB;gBAC7C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC3B,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY;gBACrC,YAAY,EAAE,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE;aAC/C,CAAC,CAAC;SACN;QAEO,mBAAmB;YACvB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,wBAAwB,CAC7C,IAAI,CAAC,iBAAiB,CAAC,UAAU,EACjC,IAAI,CAAC,iBAAiB,CACzB,CAAC;YACF,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;SACtC;QAEO,WAAW;YACf,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;gBACzB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SACrE;QAED,IAAI,OAAO,CAAC,KAAY;YACpB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC;SACrE;QAEM,eAAe,CAAC,OAAO;YAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC,CAAC;SACzE;QAEM,OAAO;YACV,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;SACJ;KACJ;;UCrFY,eAAgB,SAAQ,mBAAmB;QAGpD,YAAY,OAA6B,EAAE;YACvC,KAAK,iBACD,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAC3B,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IACjB,IAAI,EACT,CAAC;SACN;QAEM,SAAS,CAAC,IAA0B;YACvC,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAChC;QAEM,IAAI;YACP,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;SACvB;;QAGM,IAAI;YACP,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;YAGxC,QAAQ,CAAC,GAAG,CAAC,GAAG,uBAAU,GAAG,EAAG,CAAC,CAAC;YAElC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACd,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAC1C,CAAC,CAAC;YAEH,OAAO,QAAQ,CAAC;SACnB;KACJ;;ICzBD;;;;;AAKA,UAAa,SAAS;;;;QA8BlB,YAAY,MAAM,EAAE,UAA0B;YAC1C,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAE1B,IAAI,CAAC,UAAU,GAAG,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAEpB,IAAI,CAAC,SAAS,CAAC;gBACX,QAAQ,EAAE,GAAG;gBACb,SAAS,EAAE,GAAG;gBACd,kBAAkB,EAAE,KAAK;gBACzB,aAAa,EAAE,YAAY;gBAC3B,qBAAqB,EAAE,KAAK;gBAC5B,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;gBAClB,aAAa,EAAE,SAAS;gBACxB,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG;gBACvB,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG;gBACjB,WAAW,EAAE,KAAK;gBAClB,WAAW,EAAE,IAAI;gBACjB,KAAK,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;aAC1D,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;YAEzC,IAAI,CAAC,iBAAiB,GAAG,OAAO;gBAC5B,MAAM,KAAK,GACP,OAAO,IAAI,OAAO,CAAC,qBAAqB,IAAI,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;gBACtF,OAAO,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC7E,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAEzC,IAAI,CAAC,kBAAkB,GAAG,OAAO;gBAC7B,MAAM,MAAM,GACR,OAAO,IAAI,OAAO,CAAC,qBAAqB,IAAI,OAAO,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;gBACvF,OAAO,MAAM,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAClF,CAAC;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC3C,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YAEzB,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,IAAI,CAAC,UAAU,GAAGlB,mBAAQ,CACtB,WAAW,EACX,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,UAAU,EACV,QAAQ,EACR,WAAW,EACX,eAAe,CAClB,CAAC;YAEF,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAC5B;;;;;;QAOM,OAAO;YACV,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;aAChC;SACJ;;;;QAKM,SAAS,CAAC,IAAoB;YACjC,IAAI,CAAC,KAAK,mCAAQ,IAAI,CAAC,KAAK,GAAK,IAAI,CAAE,CAAC;YACxC,OAAO,IAAI,CAAC;SACf;;;;;;;;;QAUM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAOM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;YAGD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;aAChC;YAED,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAElC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;gBACzB,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE;gBAC1B,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ;gBAC5B,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,aAAa;gBAC9C,gBAAgB,EAAE,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;aAC3D,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;SACf;QA6BM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;;oBAEzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;iBACtD;gBACD,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,WAAW,GAAG,MAAM;kBACnB,OAAO,MAAM,KAAK,UAAU;sBACxB,MAAM;sBACN,MAAM,MAAM;kBAChB,IAAI,CAAC,kBAAkB,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,OAAO,IAAI,CAAC;SACf;QAiBM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;;oBAExB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;iBACpD;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,IAAI,CAAC,UAAU,GAAG,KAAK;kBACjB,OAAO,KAAK,KAAK,UAAU;sBACvB,KAAK;sBACL,MAAM,KAAK;kBACf,IAAI,CAAC,iBAAiB,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;;;;;;;QAQM,IAAI;YACP,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SACpC;;;;QAKS,qBAAqB,CAAC,IAAI;YAChC,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC;SAC3D;;;;;;;QAQM,SAAS;YACZ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5B;;;;;;;;;;;;;;;;;;;;;;;;QAyBM,MAAM,CAA+B,GAAG;YAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAc,GAAG,CAAC,CAAC;SAC9C;;;;;;;;;;;;;;;;;;;;;QAsBM,SAAS,CAAyC,GAAG;YACxD,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAwB,GAAG,CAAC,GAAG,IAAI,CAAC;SAC/E;QAaM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE;gBACzB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;gBAC/B,IAAK,IAAI,CAAC,OAAe,CAAC,QAAQ,EAAE;;oBAEhC,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;iBAC5C;gBACD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACxB;iBAAM,IAAI,MAAM,EAAE;gBACf,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;;oBAEjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;iBAChC;qBAAM;oBACH,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;iBACzB;gBACD,IAAI,CAAC,KAAK,GAAGc,kBAAM,CAAC,IAAI,CAAC,OAAc,CAAC,CAAC;gBACzC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;iBAAM;gBACH,MAAM,IAAI,oBAAoB,CAAC,wBAAwB,CAAC,CAAC;aAC5D;YACD,OAAO,IAAI,CAAC;SACf;QAEO,cAAc,CAAC,UAA0B;YAC7C,OAAO,CAAC,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ;kBAC9C,aAAa,CAAC,UAAU,CAAC,UAAoB,CAAC;kBAC9C,UAAU,CAAC;SACpB;;;;;QAMM,UAAU;YACb,MAAM,CAAC,GAAqB,IAAI,CAAC,MAAM,EAAE,CAAC;YAC1C,IAAI,CAAC,EAAE;gBACH,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBAC7B;qBAAM,IAAI,CAAC,CAAC,EAAE,EAAE;oBACb,OAAO,CAAC,CAAC,EAAE,CAAC;iBACf;aACJ;YACD,OAAO,WAAW,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;SACtC;QAeM,IAAI,CAAC,WAAY;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;YACD,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;YACzB,OAAO,IAAI,CAAC;SACf;QAgBM,GAAG,CAAC,UAAW;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;YACD,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;;;;;;;QAQS,QAAQ;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC7B;;;;QAKS,OAAO;YACb,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;oBAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;iBACvE;qBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;iBACrE;aACJ;SACJ;;;;QAKS,WAAW;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC,IAAI,CAAC;SACpB;;;;;;;;;;;;;;QAeM,cAAc;YACjB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,YAAY,GAAG,SAAS,CAAC;gBAC9E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;qBACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;qBAC9C,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAC/B;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;QAQM,eAAe;YAClB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,YAAY,GAAG,SAAS,CAAC;gBAC9E,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,QAAQ,GAAG,MAAM,CAAC;gBACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;aACzE;YACD,OAAO,IAAI,CAAC;SACf;;;;QAaS,oBAAoB,CAAC,CAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,wBAAwB,CAAC;aACxC;YACD,IAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC;YAClC,OAAO,IAAI,CAAC;SACf;;;;QAKS,2BAA2B,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACxB,MAAM,IAAI,qBAAqB,CAC3B,6BAA6B,CAAC,yBAAyB,IAAI,CAAC,UAAU,EAAE,GAAG,CAC9E,CAAC;aACL;SACJ;;;;;;;;;QAUM,MAAM;YACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;;;YAM9C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAEhC,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aACzB;YAED,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YAEvC,OAAO,MAAM,CAAC;SACjB;;;;;QAMM,mBAAmB,CAAC,KAAM;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;gBAChD,IAAI,CAAC,IAAI;qBACJ,UAAU,EAAE;qBACZ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;qBACvC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;qBACjC,EAAE,CAAC,KAAK,EAAE;oBACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC9C,IAAI,KAAK,EAAE;wBACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC3C;iBACJ,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC9C,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC3C;aACJ;SACJ;;;;;;;;;;;;QAaM,MAAM;YACT,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAEhC,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aACzB;YAED,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YAEvC,OAAO,MAAM,CAAC;SACjB;;;;;;;;;QAUM,WAAW;YACd,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM;oBAC1C,IAAI,KAAK,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACtB;yBAAM;wBACH,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;qBACjC;iBACJ,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;aACjC;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;;QAUM,WAAW;YACd,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM;oBAC1C,IAAI,KAAK,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACtB;yBAAM;wBACH,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;qBACjC;iBACJ,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;aACjC;YACD,OAAO,IAAI,CAAC;SACf;;;;QAKS,uBAAuB,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,SAAS,EAAE;gBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;aACnD;SACJ;;;;QAKS,qBAAqB;YAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC9C;;;;;;;;;;QAWM,SAAS,CAAC,MAAO;YACpB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC/C;;;;;;;;;;QAWM,aAAa,CAAC,MAAM;;YAEvB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YAElC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;QAaM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;aACtC;YACD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAElC,OAAO,IAAI,CAAC;SACf;;;;;;QAOS,eAAe,CAAC,OAAO;YAC7B,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;YAEtC,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACzC,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;SACJ;;;;;;;;;;;QAYM,OAAO;YACV,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;SACrC;;;;QAKM,iBAAiB,CAAC,CAAC;YACtBA,kBAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAClDA,kBAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;SACxD;;;;QAKM,cAAc,CAAC,CAAC;YACnBA,kBAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YACnDA,kBAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;SACvD;;;;QAKM,cAAc,CAAC,CAAC;YACnBA,kBAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YACnDA,kBAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;SACxD;;;;;;;;;;;;;;;;QAiBM,OAAO,CAAC,KAAU,EAAE,CAAU;YACjC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;;;;;;QAOS,SAAS;;YAEf,OAAO,IAAI,CAAC;SACf;;;;;;QAOS,SAAS;;YAEf,OAAO,IAAI,CAAC;SACf;;;;;;;QAQM,WAAW;;YAEd,OAAO,EAAE,CAAC;SACb;;;;;;QAOM,eAAe,CAAC,CAAc;;SAEpC;;;;;;QAOM,WAAW,CAAC,CAAc;;SAEhC;;;;;;QAOM,YAAY,CAAC,CAAc;;SAEjC;;;;;;QAOM,kBAAkB,CAAC,CAAc;;YAEpC,OAAO,KAAK,CAAC;SAChB;QAWM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACnC;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;QAaS,WAAW;;YAEjB,OAAO,IAAI,CAAC;SACf;QAaM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;;;;;;QAOM,OAAO;YACV,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;;;;;;;;;;;QAYM,OAAO,CAAC,IAAI;YACf,MAAM,YAAY,GAAG;gBACjB,QAAQ;gBACR,OAAO;gBACP,YAAY;gBACZ,YAAY;gBACZ,OAAO;gBACP,OAAO;gBACP,OAAO;gBACP,UAAU;gBACV,gBAAgB;aACnB,CAAC;YAEF,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;gBAClB,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBAC/B,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC5D,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBAChC;yBAAM;wBACH,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC/B;iBACJ;qBAAM;oBACH,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC;iBACxD;aACJ;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8BM,EAAE,CAAC,KAAK,EAAE,QAAQ;YACrB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;;;;;;;;;;;;;QAyBM,SAAS,CAAC,iBAAiB;YAC9B,MAAM,CAAC,QAAQ,CACX,yGAAyG,CAC5G,CAAC;YACF,IAAI,CAAC,EAAE,CAAC,aAAa,QAAQ,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;SACf;KACJ;;aC7/Be,YAAY,CAA0C,IAAW;QAC7E,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;YAQM,QAAQ,CAAC,QAAS;gBACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;iBAC9B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACvC,OAAO,IAAI,CAAC;aACf;YAUM,SAAS,CAAC,SAAU;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC/B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;gBACzC,OAAO,IAAI,CAAC;aACf;YAuBM,kBAAkB,CAAC,kBAAmB;gBACzC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;iBACxC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAC;aACf;YAkBM,SAAS,CAAC,SAAU;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;iBAC/C;gBACD,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO,IAAI,CAAC;aACf;YAqBM,KAAK,CAAC,KAAM,EAAE,IAAK,EAAE,QAAS;gBACjC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;iBAC1C;gBACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO,IAAI,CAAC;aACf;YAYM,QAAQ,CAAC,aAAc;gBAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;iBAC7C;gBACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC,CAAC;gBAC1D,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO,IAAI,CAAC;aACf;YAsBM,aAAa,CAAC,qBAAsB;gBACvC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,qBAAqB,EAAE,CAAC,CAAC;gBACzD,OAAO,IAAI,CAAC;aACf;YAOM,kBAAkB,CAAC,QAAS;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;iBACxC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,kBAAkB,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAOM,eAAe,CAAC,KAAM;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACrC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACf;YAQM,qBAAqB,CAAC,qBAAsB;gBAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;iBAC3C;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,CAAC,CAAC;gBACjE,OAAO,IAAI,CAAC;aACf;YAaM,aAAa,CAAC,aAAc;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAgBM,KAAK,CAAC,aAAc,EAAE,YAAa;gBACtC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;iBAC3B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;gBACzC,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,EAAE;oBAC5C,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzC;gBACD,OAAO,IAAI,CAAC;aACf;YAQM,WAAW,CAAC,WAAY;gBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACjC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;aACf;YASM,WAAW,CAAC,WAAY;gBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACjC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;aACf;YAsBM,KAAK,CAAC,aAAc;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;iBAC3B;gBACD,IAAI,CAAC,SAAS,CAAC;oBACX,KAAK,EAAE,aAAa;iBACvB,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;aACf;YAcM,WAAW,CAAC,WAAY;gBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACjC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;aACf;YAeM,aAAa,CAAC,aAAc;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;iBACnD;gBACD,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBAChE,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;UAEYK,WAAS,GAAG,YAAY,CAACC,SAAY,CAAC,CAAC;UAEvC,SAAS,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,WAAS,CAAC,MAAM,EAAE,UAAU,CAAC;;IC/UlF;;;IAGA;AACA,aAAgB,WAAW,CAAyC,IAAW;;QAE3E,OAAO,cAAc,IAAI;YAuBrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;gBAEf,IAAI,CAAC,SAAS,CAAC;oBACX,WAAW,EAAE,IAAI;oBACjB,qBAAqB,EAAE,GAAG;oBAC1B,kBAAkB,EAAE,EAAE;oBACtB,cAAc,EAAE,KAAK;oBACrB,aAAa,EAAE,KAAK;oBACpB,kBAAkB,EAAE,IAAI;oBACxB,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;iBAChC,CAAC,CAAC;;gBAGH,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;gBAChC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBAErB,IAAI,CAAC,EAAE,GAAGH,mBAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aAC5C;;;;YAKM,SAAS,CAAC,IAAsB;gBACnC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC;aACf;;;;YAKM,IAAI;gBACP,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;YAKM,IAAI;gBACP,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;;oBAE3B,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;oBACtD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAKK,kBAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzE;gBACD,OAAO,IAAI,CAAC;aACf;YAUM,CAAC,CAAC,iBAAkB;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;iBAClB;gBACD,IAAI,CAAC,EAAE,GAAG,iBAAiB,CAAC;gBAC5B,OAAO,IAAI,CAAC;aACf;;;;YAKM,qBAAqB;gBACxB,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBAC1B,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBAC/C;aACJ;;;;YAKM,IAAI;gBACP,IAAI,MAAM,GAAa,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBACvE,IAAI,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;oBAC/B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;iBAC9C;gBACD,OAAOC,WAAG,CAAC,MAAM,CAAC,CAAC;aACtB;;;;YAKM,IAAI;gBACP,OAAOC,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE;;;;YAKM,OAAO,CAAC,CAAC;gBACZ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;oBACxB,CAAC,GAAG,CAAC,CAAC;iBACT;gBACD,OAAO,CAAC,CAAC;aACZ;;;;YAKM,cAAc,CAAC,CAAC;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC9B;;;;YAKM,YAAY,CAAC,CAAC;gBACjB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;aAC1D;;;;YAKM,aAAa,CAAC,CAAC;gBAClB,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACvC;;;;YAKM,kBAAkB,CAAC,CAAC;gBACvB,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;aAChD;;;;YAKM,cAAc,CAAC,YAAY;gBAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACxB,IAAI,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExC,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;wBACf,KAAK,GAAG,YAAY;6BACf,MAAM,CAAC,MAAM,CAAC;6BACd,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;6BAC7B,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;6BAClB,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;qBACT;oBAED,KAAK;yBACA,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;yBAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;yBACvD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,UAAU,CACN,KAAK,EACL,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD;aACJ;;;;YAKM,cAAc,CAAC,YAAY;gBAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACxB,MAAM,MAAM,GAAG,YAAY;yBACtB,MAAM,CAAC,MAAM,CAAC;yBACd,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;yBACvD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,UAAU,CACN,MAAM,EACN,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD;aACJ;;;;YAKM,cAAc,CAAC,CAAC;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC9B;;;;YAKM,eAAe,CAAC,CAAC;gBACpB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACxB,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAEhC,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;wBACf,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;qBACvD;iBACJ;aACJ;;;;YAKM,cAAc,CAAC,CAAC;gBACnB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACxB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;aACJ;YAOM,SAAS,CAAC,MAAO;gBACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,UAAU,CAAC;iBAC1B;gBACD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;gBACzB,OAAO,IAAI,CAAC;aACf;;;;YAKM,kBAAkB,CAAC,SAA+B;gBACrD,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAClB,MAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;wBAC3D,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;4BACzB,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;yBACjC;6BAAM;4BACH,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;yBAC9B;qBACJ,CAAC,CAAC;iBACN;qBAAM;oBACH,MAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC;wBAChD,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;qBAC9B,CAAC,CAAC;iBACN;aACJ;;;;YAKM,cAAc,CAAC,CAAM;gBACxB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAChC;;;;;YAMM,OAAO,CAAC,CAAM;gBACjB,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;gBACrB,MAAM,CAAC,OAAO,CAAC;oBACX,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACpB,IAAI,CAAC,WAAW,EAAE,CAAC;iBACtB,CAAC,CAAC;aACN;SACJ,CAAC;IACN,CAAC;;aC1Te,cAAc,CAA0C,IAAW;QAC/E,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;YASM,cAAc,CAAC,cAAe;gBACjC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;iBACpC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;gBACnD,OAAO,IAAI,CAAC;aACf;YAUM,mBAAmB,CAAC,mBAAoB;gBAC3C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;iBACzC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,CAAC,CAAC;gBAC7D,OAAO,IAAI,CAAC;aACf;YASM,kBAAkB,CAAC,MAAO;gBAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;iBACxC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,kBAAkB,EAAE,MAAM,EAAE,CAAC,CAAC;gBAC/C,OAAO,IAAI,CAAC;aACf;YASM,qBAAqB,CAAC,YAAa;gBACtC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;iBAC3C;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,qBAAqB,EAAE,YAAY,EAAE,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;aACf;YASM,aAAa,CAAC,aAAc;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAQM,kBAAkB,CAAC,WAAY;gBAClC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;iBACxC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,kBAAkB,EAAE,WAAW,EAAE,CAAC,CAAC;gBACpD,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;;UC5FY,eAAgB,SAAQ,eAAe;QAIhD,YAAY,OAA6B,EAAE;YACvC,MAAM,oBAAoB,GAAG,CAAC,QAAQ,EAAE,SAAS;;gBAE7C,MAAM,YAAY,GAAGC,WAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;gBAEnD,IAAI,YAAY,GAAG,CAAC,EAAE;oBAClB,OAAO,QAAQ,CAAC,MAAM,CAAC;wBACnB;4BACI,MAAM,EAAE,IAAI;4BACZ,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;4BAC3B,MAAM,EAAE,YAAY;yBACvB;qBACJ,CAAC,CAAC;iBACN;gBACD,OAAO,QAAQ,CAAC;aACnB,CAAC;YAEF,KAAK,iBACD,GAAG,EAAE,QAAQ,EACb,SAAS,EAAE,IAAI,EACf,WAAW,EAAE,QAAQ,EACrB,aAAa,EAAE,oBAAoB,EACnC,QAAQ,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,IACtB,IAAI,EACT,CAAC;SACN;QAEM,SAAS,CAAC,IAA0B;YACvC,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAChC;QAEM,IAAI;YACP,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;SACvB;QAEM,IAAI;YACP,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEtD,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,QAAQ,EAAE;gBAC7B,OAAO,KAAK,CAAC;aAChB;;;YAID,IAAI,IAAI,CAAC;YAET,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;gBAChB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACtB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC1C;qBAAM;oBACH,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACzD,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBAC7B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC9B;aACJ;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACtC,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAChD;YAED,OAAO,KAAK,CAAC;SAChB;QAIM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;aACzB;YAED,IAAI,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;;;;gBAInC,MAAM,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAC5D,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAClC;YAED,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC/B;KACJ;;aC1Fe,WAAW,CAA0C,IAAW;QAC5E,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;gBAEf,IAAI,CAAC,YAAY,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;aAC5C;YA+BM,GAAG,CAAC,KAAM;gBACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;oBAEnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;iBACxC;;gBAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;aACf;YAUM,SAAS,CAAC,SAAU;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;oBAEnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;iBAC9C;;gBAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;gBACvD,OAAO,IAAI,CAAC;aACf;YAQM,WAAW,CAAC,KAAM;gBACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;oBAEnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;iBAChD;;gBAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;gBACrD,OAAO,IAAI,CAAC;aACf;YA2BM,aAAa,CAAC,eAAgB;gBACjC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;oBAEnB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;iBAClD;;gBAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,eAAe,EAAE,CAAC,CAAC;gBACjE,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;AAED,aAAgB,QAAQ,CAA0C,IAAW;QACzE,OAAO,cAAc,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAChD,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;SACJ,CAAC;IACN,CAAC;;UCjIY,mBAAmB;;;;;;;QAerB,QAAQ,CAAC,CAAC,EAAE,CAAU;YACzB,OAAO,SAAS,CAAC;SACpB;;;;;;;QAQM,KAAK,CAAC,aAAmC;YAC5C,OAAO,IAAI,CAAC;SACf;KACJ;;UC3BY,gBAAiB,SAAQ,mBAAmB;QAIrD,YAAY,UAAgC;YACxC,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAChC;QAED,QAAQ,CAAC,CAAC,EAAE,CAAU;YAClB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACpD;;;;;;;QAQD,KAAK,CAAC,aAAmC;YACrC,MAAM,WAAW,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1D,WAAW,CAAC,aAAa,GAAG,aAAa,CAAC;YAC1C,OAAO,WAAW,CAAC;SACtB;KACJ;;ICxBD;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,UAAa,aAAc,SAAQ,gBAAgB;QAC/C,YAAY,MAAyB;YACjC,MAAM,KAAK,GAAGC,oBAAY,EAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACxD,KAAK,CAAC,KAAK,CAAC,CAAC;SAChB;KACJ;;ICpBD;;;;IAIA;AACA,aAAgB,UAAU,CAAyC,IAAW;QAC1E,OAAO,cAAc,IAAI;YAWrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;gBAEf,IAAI,CAAC,SAAS,CAAC;oBACX,aAAa,EAAE,CAAC,CAAC,EAAE,CAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;iBACtD,CAAC,CAAC;gBAEH,IAAI,CAAC,WAAW,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;aAC/D;YAEM,SAAS,CAAC,IAAqB;gBAClC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,eAAe,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC9C,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;iBACxD;gBACD,OAAO,IAAI,CAAC;aACf;YAEM,IAAI;gBACP,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;YAuBM,WAAW,CAAC,WAAY;gBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,YAAY,CAAC;iBAC5B;gBACD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;gBAC3D,OAAO,IAAI,CAAC;aACf;;;;;;;;;;;;;YAcM,aAAa,CAAC,SAAmB;gBACpC,IAAI,CAAC,WAAW,CAAC,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/C,OAAO,IAAI,CAAC;aACf;;;;;;;;;;YAWM,oBAAoB;gBACvB,MAAM,KAAK,GAAuB,IAAI,CAAC,YAAiC;qBACnE,UAA+B,CAAC;gBAErC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;oBACvB,KAAK,CAAC,MAAM,CAACC,cAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC/D;gBAED,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;;ICtHD;;;;;;;;;AASA,UAAa,eAAgB,SAAQ,mBAAmB;;;;QAOpD,YAAY,eAAqC;YAC7C,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;SACnC;KACJ;;UCnBY,YAAa,SAAQ,gBAAgB;QAC9C,YAAY,KAAuB;YAC/B,MAAM,KAAK,GAAGV,mBAAW,EAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAACW,4BAAc,CAAC,CAAC;YAClF,KAAK,CAAC,KAAK,CAAC,CAAC;SAChB;KACJ;;aCGe,aAAa,CAA0C,IAAW;QAC9E,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;YAcM,aAAa,CAAC,aAAc;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAaM,eAAe,CAAC,eAAgB;gBACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;iBACtC;gBACD,IAAI,CAAC,WAAW,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC;gBACvD,OAAO,IAAI,CAAC;aACf;YAkBM,MAAM,CAAC,UAAW;gBACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAQ,IAAI,CAAC,WAAW,EAAuB,CAAC,UAAU,CAAC;iBAC9D;gBACD,IAAI,QAAQ,CAAC;gBACb,IAAI,UAAU,YAAY,KAAK,EAAE;oBAC7B,QAAQ,GAAGC,qBAAa,EAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;iBACxD;qBAAM;oBACH,QAAQ,GAAG,OAAO,UAAU,KAAK,UAAU,GAAG,UAAU,GAAG,MAAM,UAAU,CAAC;iBAC/E;gBAED,IAAI,CAAC,WAAW,CAAC,IAAI,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;;;;YAKM,YAAY,CAAC,CAAmB;gBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,OAAO,IAAI,CAAC;aACf;YAWM,WAAW,CAAC,MAAO;gBACtB,MAAM,KAAK,GAAI,IAAI,CAAC,WAAW,EAAuB,CAAC,UAA+B,CAAC;gBACvF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;iBACzB;gBACD,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACrB,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;AAED,aAAgBC,YAAU,CAA0C,IAAW;QAC3E,OAAO,cAAc,aAAa,CAACC,UAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;YACjE,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;SACJ,CAAC;IACN,CAAC;;ICtHD;;;;AAIA,UAAa,WAAY,SAAQ,SAAS;QAQtC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,QAAQ,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;SAChE;QAEM,SAAS,CAAC,IAAsB;YACnC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAcM,OAAO,CAAC,OAAQ;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;;;;;;QAOM,cAAc;YACjB,OAAO,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SACpE;;;;;;QAOM,eAAe;YAClB,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;SACrE;KACJ;;ICvCD,MAAM,eAAe,GAAG,WAAW,CAAC;IACpC,MAAM,gBAAgB,GAAG,YAAY,CAAC;IACtC,MAAM,cAAc,GAAG,UAAU,CAAC;IAClC,MAAM,kBAAkB,GAAG,cAAc,CAAC;IAC1C,MAAM,kBAAkB,GAAG,cAAc,CAAC;IAC1C,MAAM,yBAAyB,GAAG,qBAAqB,CAAC;IACxD,MAAM,0BAA0B,GAAG,EAAE,CAAC;IAEtC;;;;AAIA,UAAa,mBAAoB,SAAQ,UAAU,CAAC,WAAW,CAAC;QAsC5D,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,WAAW,CAAC,IAAI,aAAa,CAACC,iCAAgB,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAE7B,IAAI,CAAC,SAAS,CAAC;gBACX,MAAM,EAAE,YAAY;gBACpB,YAAY,EAAE,CAAC;gBACf,gBAAgB,EAAErB,cAAO;gBACzB,QAAQ,EAAE,KAAK;gBACf,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,SAAS;gBAChB,yBAAyB,EAAE,KAAK;gBAChC,uBAAuB,EAAE,KAAK;gBAC9B,SAAS,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC;gBACxB,eAAe,EAAE,IAAI;gBACrB,aAAa,EAAE,KAAK;gBACpB,SAAS,EAAE,KAAK;gBAChB,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,KAAK;gBACpB,OAAO,EAAE,IAAI;gBACb,aAAa,EAAE,KAAK;aACvB,CAAC,CAAC;YAEH,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,MAAM,GAAGsB,iBAAU,CAAC,SAAS,CAAC,CAAC;;;YAGpC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAE5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAE9B,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;YAGnB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAE5B,IAAI,CAAC,MAAM,GAAGC,cAAM,EAAE,CAAC;YAEvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAE5B,IAAI,CAAC,KAAK,GAAGC,WAAI,EAAE,CAAC,EAAE,CAClB,MAAM,EACN,YAAY,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAC9C,CAAC;YACF,IAAI,CAAC,SAAS,GAAGA,WAAI,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAE/B,IAAI,CAAC,EAAE,CAAC,sBAAsB,EAAE;gBAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B,CAAC,CAAC;;;YAIH,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;YACnC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC/B;QAEM,SAAS,CAAC,IAA8B;YAC3C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;;;;;;;;QAUM,OAAO;YACV,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QASM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;;;;QAKS,UAAU,CAAC,MAA6C;YAC9D,IAAI,MAAM,KAAK,SAAS,EAAE;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;aAC7B;iBAAM;gBACH,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACzB;YAED,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE;iBACrB,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;iBAC3B,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC;iBAC7E,IAAI,CAAC,WAAW,EAAE,OAAO,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAEhE,OAAO,IAAI,CAAC,EAAE,CAAC;SAClB;QAWM,CAAC,CAAC,QAAS;YACd,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;QASM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAmBM,CAAC,CAAC,MAAO;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;YACjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YACzC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;SACf;;;;;;QAOM,eAAe;YAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAChC;QA0BM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;;;;;;;;QASM,UAAU;YACb,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;gBAC/B,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;;oBAElB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC;iBAC9C;qBAAM;oBACH,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;oBAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;oBAGnD,IAAI,CAAC,UAAU,GAAG,SAAS,YAAY,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;iBAC/E;aACJ;YAED,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;;;;;;;;QASM,SAAS;YACZ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC;SAC7C;;;;QAKM,gBAAgB;YACnB,OAAO,IAAI,CAAC;SACf;;;;QAKS,eAAe;YACrB,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACvD,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC7C;QAEO,aAAa,CAAC,CAAuB,EAAE,MAAe;YAC1D,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBACnB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACrB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;iBACtD;aACJ;iBAAM;;;;;gBAKH,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE;;;oBAGpB,MAAM,CAAC,IAAI,CACP,+EAA+E;wBAC3E,gEAAgE;wBAChE,4DAA4D;wBAC5D,0DAA0D,CACjE,CAAC;oBACF,IAAI,CAAC,EAAE,GAAGC,iBAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;iBAClD;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtD,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;iBAC1C;aACJ;;YAGD,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;gBACjD,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;YAGzB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,EAAE;qBACF,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;qBAC/B,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC;qBACrC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;aACjF;iBAAM;gBACH,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAE1C,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;SACpC;;;;QAKS,YAAY,CAAC,CAAuB;YAC1C,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAE7B,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;gBAChB,MAAM,GAAG,CAAC;qBACL,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;qBACvB,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;aACjF;YAED,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,kBAAkB,EAAE,CAAC,CAAC;YACtD,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;gBACvC,QAAQ,GAAG,CAAC;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,kBAAkB,CAAC;qBACjC,IAAI,CACD,WAAW,EACX,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,IACtD,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,kBACzB,GAAG,CACN;qBACA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;aACtC;YACD,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,EAAE;gBAC5D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;aACpC;YAED,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACxE,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC;iBACxE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAChF,WAAW,EACX,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,IACtD,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,kBACzB,GAAG,CACN,CAAC;SACL;QAEO,wBAAwB,CAAC,CAAuB;YACpD,IAAI,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,cAAc,EAAE,CAAC,CAAC;YAEhD,IAAI,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE;gBACpC,IAAI,SAAS,CAAC,KAAK,EAAE,EAAE;oBACnB,SAAS,GAAG,CAAC;yBACR,MAAM,CAAC,GAAG,EAAE,cAAc,CAAC;yBAC3B,IAAI,CAAC,OAAO,EAAE,GAAG,eAAe,IAAI,cAAc,EAAE,CAAC;yBACrD,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;iBACrF;gBAED,IAAI,KAAK,CAAC;gBACV,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE;oBAC1B,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;iBACpC;qBAAM,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,UAAU,EAAE;oBAC5C,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;iBACrE;qBAAM;oBACH,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;iBAC5B;gBAED,MAAM,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;gBAGtD,MAAM,WAAW,GAAG,KAAK;qBACpB,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC3B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;qBAC/C,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC3B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACxB,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CACnF,SAAS,EACT,GAAG,CACN,CAAC;;gBAGF,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;qBACvE,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC3B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;qBAC/C,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAC3B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;gBAGnB,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;aACzB;iBAAM;gBACH,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;aACxC;SACJ;QAEO,OAAO;YACX,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;SAChD;;;;QAKS,YAAY;YAClB,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;SAChC;QAQM,UAAU,CAAC,SAAU,EAAE,OAAQ;YAClC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC;YACjD,IAAI,CAAC,kBAAkB,GAAG,OAAO,KAAK,SAAS,GAAG,0BAA0B,GAAG,OAAO,CAAC;YACvF,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAEO,YAAY;YAChB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,GAAGC,gBAAS,CAAC,SAAS,CAAC,GAAGC,eAAQ,CAAC,SAAS,CAAC,CAAC;SAChF;;;;QAKS,aAAa,CAAC,CAAuB;YAC3C,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAC9C,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE;oBACvB,IAAI,CAAC,EAAE,GAAGrB,mBAAW,EAAE,CAAC;iBAC3B;gBACD,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAClC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACrE;YAED,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;aACrC;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,iCAAiC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACnE;;;;;;QAOM,iBAAiB,CACpB,SAAiB,EACjB,IAAY,EACZ,QAAgB,EAChB,cAAuB;YAEvB,cAAc,GAAG,cAAc,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAE3D,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,kBAAkB,IAAI,SAAS,QAAQ,CAAC,CAAC;YAChF,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACpE,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE;gBAC1B,QAAQ,GAAG,IAAI,CAAC,CAAC,EAAE;qBACd,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CACD,WAAW,EACX,aAAa,cAAc,IAAI,cAAc,YAAY,QAAQ,GAAG,CACvE;qBACA,IAAI,CAAC,OAAO,EAAE,GAAG,kBAAkB,IAAI,SAAS,QAAQ,CAAC;qBACzD,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;qBAC7B,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB;YACD,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;gBAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;YACD,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAChF,WAAW,EACX,aAAa,cAAc,IAAI,cAAc,YAAY,QAAQ,GAAG,CACvE,CAAC;SACL;;;;;;QAOM,cAAc,CAAC,SAAiB,EAAE,IAAe,EAAE,QAAgB;YACtE,IAAI,MAAM,GAAyB,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE,CAAC,CAAC;YACrE,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;gBAChB,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE;qBACZ,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,OAAO,EAAE,QAAQ,SAAS,EAAE,CAAC;qBAClC,IAAI,CAAC,WAAW,EAAE,aAAa,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;aAC1E;YAED,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACxE,IAAI,CAAC,WAAW,EAAE,aAAa,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC;iBACjE,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;;;;;;QAOM,YAAY;YACf,MAAM,YAAY,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa;kBAC/C,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK;kBACnC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;YACpD,MAAM,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa;kBAChD,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,kBAAkB;kBACtC,IAAI,CAAC,kBAAkB,CAAC;YAC9B,MAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;YAC7D,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;SAC3E;;;;QAKS,iCAAiC,CACvC,CAAuB,EACvB,KAAqB,EACrB,IAAe;YAEf,IAAI,SAAS,GAAyB,CAAC,CAAC,MAAM,CAAC,KAAK,gBAAgB,EAAE,CAAC,CAAC;YAExE,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE;;gBAEtC,IAAI,KAAU,CAAC;gBACf,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;oBACnB,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;iBAC7B;qBAAM,IAAI,KAAK,CAAC,KAAK,EAAE;oBACpB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;iBAC1D;qBAAM;oBACH,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;iBAC1B;gBAED,IAAI,SAAS,CAAC,KAAK,EAAE,EAAE;oBACnB,SAAS,GAAG,CAAC;yBACR,MAAM,CAAC,GAAG,EAAE,cAAc,CAAC;yBAC3B,IAAI,CAAC,OAAO,EAAE,GAAG,eAAe,IAAI,gBAAgB,EAAE,CAAC;yBACvD,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;iBACrF;gBAED,MAAM,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;gBAGtD,MAAM,WAAW,GAAG,KAAK;qBACpB,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;qBAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACxB,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CACnF,SAAS,EACT,GAAG,CACN,CAAC;;gBAGF,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;qBACvE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;qBACzB,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;qBAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAG/B,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;aACzB;iBAAM;gBACH,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;aACxC;SACJ;;;;QAKS,OAAO;YACb,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;SAC/F;QASM,UAAU,CAAC,SAAU,EAAE,OAAQ;YAClC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAC/C,IAAI,CAAC,kBAAkB,GAAG,OAAO,KAAK,SAAS,GAAG,0BAA0B,GAAG,OAAO,CAAC;YACvF,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QAQM,CAAC,CAAC,MAAO;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;YACjB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;SACf;QA8BM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrC;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;;;;;;QAOM,QAAQ;;YAEX,MAAM,CAAC,GAAGM,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;SAC5E;;;;;;QAOM,QAAQ;;YAEX,MAAM,CAAC,GAAGC,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;SACvE;;;;;;QAOM,QAAQ;;;YAGX,MAAM,CAAC,GAAGD,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAC1C,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC/C;;;;;;QAOM,QAAQ;;;YAGX,MAAM,CAAC,GAAGC,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAC1C,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC1C;;;;QAKS,YAAY;YAClB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;SACjC;QAOM,iBAAiB,CAAC,CAAE;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;YACD,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QAOM,sBAAsB,CAAC,CAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,uBAAuB,CAAC;aACvC;YACD,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;SACf;;;;QAKS,eAAe;YACrB,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YAExC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACtB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aAC9C;SACJ;QAeM,KAAK,CAAC,CAAE;YACX,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;;;;QAKS,YAAY,CAAC,CAAuB,EAAE,YAAqB;YACjE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,EAAE,CACV,iBAAiB,EACjB,YAAY,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAChD,CAAC;;gBAGF,IAAI,CAAC,OAAO,GAAG,CAAC;qBACX,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;qBACtB,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;gBAElF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;gBAEpC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;gBAEzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,YAAY,CAAC,CAAC;aAClD;SACJ;;;;QAKS,uBAAuB,CAAC,MAA4B,EAAE,YAAqB;YACjF,IAAI,YAAY,GAAqD,MAAM;iBACtE,SAAS,CAAsB,QAAQ,yBAAyB,EAAE,CAAC;iBACnE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YAE1C,YAAY,GAAG,YAAY;iBACtB,KAAK,EAAE;iBACP,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,yBAAyB,CAAC;iBACxC,KAAK,CAAC,YAAY,CAAC,CAAC;YAEzB,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1D;;;;QAKS,YAAY,CAAC,cAAgC;YACnD,IAAI,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACpC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3D;YACD,OAAO,cAAc,CAAC;SACzB;;;;QAKS,aAAa,CAAC,cAAgC;YACpD,OAAO,CAAC,cAAc,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC;SACpE;;;;QAKS,SAAS,CAAC,GAAG;YACnB,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBACzB,OAAO;aACV;YAED,MAAM,iBAAiB,GAAG,GAAG,CAAC,SAAS,CAAC;YACxC,IAAI,cAAgC,CAAC;YAErC,IAAI,iBAAiB,EAAE;gBACnB,cAAc,GAAG,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;aAC3D;YAED,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YAEnD,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YAEzC,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;kBACjD,IAAI;kBACJ,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7D,MAAM,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;aAC3C,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;SAC7B;QAEO,oBAAoB,CAAC,YAAY;YACrC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;;;;QAKS,mBAAmB,CAAC,OAAO;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAE/B,IAAI;gBACA,OAAO,EAAE,CAAC;aACb;oBAAS;gBACN,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;aACtC;SACJ;;;;QAKS,gBAAgB,CAAC,YAAqB;YAC5C,IAAI,CAAC,mBAAmB,CAAC;;gBAErB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACf,CAAC,CAAC,EAAE,CAAC,CAAC;oBACN,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;iBAClD,CAAC,CAAC;aACN,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC;;;;QAKS,YAAY,CAAC,cAAgC,EAAE,YAAqB;YAC1E,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;gBACpC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAChB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;iBACvC;gBAED,IAAI,CAAC,cAAc,EAAE;oBACjB,IAAI,CAAC,mBAAmB,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC7C,CAAC,CAAC;oBAEH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;iBACvF;qBAAM;oBACH,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEjF,MAAM,MAAM,GAAG,kBAAkB,CAC7B,YAAY,EACZ,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAEhB,IAAI,CAAC,mBAAmB,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;qBAClD,CAAC,CAAC;oBAEH,MAAM;yBACD,SAAS,CAAC,QAAQ,yBAAyB,EAAE,CAAC;yBAC9C,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC;yBACrB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,aAAa,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;yBAC1E,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClD;aACJ;YACD,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;SAC3C;;;;;;QAOM,kBAAkB,CAAC,cAAgC;;SAEzD;QAEO,iBAAiB,CAAC,CAAC;YACvB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACX,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;;YAGrC,QACI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,IACvE,GAAG,GAAG,CACV,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EACrF;SACL;QAEO,cAAc;YAClB,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,OAAO,CAAC;SACnE;QAEO,iBAAiB;YACrB,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;;;YAGlD,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACjC,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAEhF,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;YAE3C,cAAc,CAAC,aAAa,EAAE,MAAM,CAAC;iBAChC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,GAAG,OAAO,CAAC;iBAC5C,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,GAAG,OAAO,CAAC;iBAC7C,IAAI,CAAC,WAAW,EAAE,cAAc,IAAI,CAAC,KAAK,CAAC,WAAW,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;SAC/F;;;;QAKS,eAAe,MAAW;;;;QAK1B,SAAS;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,OAAO,IAAI,CAAC;SACf;;;;QAKS,SAAS;YACf,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,OAAO,IAAI,CAAC;SACf;QAEO,UAAU,CAAC,MAAe;YAC9B,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;aACtC;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAE7B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;aAC/B;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,EAAE;gBACjD,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;YAED,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;aACtC;iBAAM;;gBAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACxB;;;;;;QAOM,QAAQ;;YAEX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC9C;QAEO,mBAAmB;;YAEvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YAE7B,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;iBAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;SACJ;QAEO,gBAAgB;YACpB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAElC,MAAM,MAAM,GAAyC;gBACjD,CAAC,CAAC,EAAE,CAAC,CAAC;gBACN,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;aAClD,CAAC;YAEF,IAAI,CAAC,KAAK;iBACL,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBACjC,MAAM,CAAC,MAAM,CAAC;iBACd,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAE7C,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;;gBAE5B,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3F;YAED,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;YAG7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjC;QAEO,iBAAiB;YACrB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;QAEO,gBAAgB,CAAC,SAAS,EAAE,aAAsB;YACtD,IAAI,SAAS,YAAY,KAAK,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpD,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAC9B;iBAAM;gBACH,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC1C;YAED,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,IAAI,CAAC,aAAa,EAAE;gBAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC;oBACX,IAAI,CAAC,WAAW,EAAE,CAAC;iBACtB,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;aAC7B;SACJ;;QAGO,sBAAsB,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM;YACxD,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAErC,OAAOe,mBAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACjD;;QAGO,sBAAsB;YAC1B,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,kBAAkB,CAAC;oBACpB,IAAI,CAAC,KAAK,CAAC,SAAS,CAChB,IAAI,CAAC,IAAI,EAAE,EACX,IAAI,CAAC,sBAAsB,CACvB,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,EACjB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,MAAM,CACd,CACJ,CAAC;iBACL,CAAC,CAAC;aACN;SACJ;;;;QAKS,kBAAkB,CAAC,OAAO;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACxC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAE9B,IAAI;gBACA,OAAO,EAAE,CAAC;aACb;oBAAS;gBACN,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;aACrC;SACJ;QAEO,OAAO,CAAC,GAAG;;YAEf,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBACxB,OAAO;aACV;YAED,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACzB;;QAGO,aAAa,CAAC,GAAqB,EAAE,WAA6B;YACtE,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtE,OAAO,GAAG,CAAC;aACd;YAED,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE;gBACpD,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;aAC3D;;YAED,OAAO;gBACH,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;gBACjD,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;aAChC,CAAC;SACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCM,KAAK,CAAC,KAAuB;YAChC,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;;gBAE5B,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC5D;YAED,IAAI,SAAS,CAAC;YACd,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5C,SAAS,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACpD;iBAAM;gBACH,SAAS,GAAG,IAAI,CAAC;aACpB;YACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAE9B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACvC;;;;;;;;;QAUM,SAAS;YACZ,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACjE;KACJ;;aChzCe,cAAc,CAA0C,IAAW;QAC/E,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;SACJ,CAAC;IACN,CAAC;;aCFe,sBAAsB,CAA0C,IAAW;QACvF,OAAO,cAAc,IAAI;YAIrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;gBAEf,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;gBAC7B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;aAChC;YAwCM,MAAM,CAAC,MAAO;gBACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;iBAC5B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC;aACf;YAcM,YAAY,CAAC,OAAQ;gBACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;iBAClC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC1C,OAAO,IAAI,CAAC;aACf;YAgBM,gBAAgB,CAAC,IAAK;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;iBACtC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACf;YASM,QAAQ,CAAC,QAAS;gBACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;iBAC9B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC;aACf;YAaM,YAAY,CAAC,OAAQ;gBACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;iBAClC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC1C,OAAO,IAAI,CAAC;aACf;YASM,QAAQ,CAAC,QAAS;gBACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;iBAC9B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC;aACf;YAWM,KAAK,CAAC,KAAM;gBACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;iBAC3B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjC,OAAO,IAAI,CAAC;aACf;YAQM,yBAAyB,CAAC,yBAA0B;gBACvD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC;iBAC/C;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;aACf;YAQM,uBAAuB,CAAC,uBAAwB;gBACnD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC;iBAC7C;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,CAAC,CAAC;gBACrE,OAAO,IAAI,CAAC;aACf;YAQM,SAAS,CAAC,MAAO;gBACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC/B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;gBACtC,OAAO,IAAI,CAAC;aACf;YAQM,eAAe,CAAC,eAAgB;gBACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACrC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;gBACrD,OAAO,IAAI,CAAC;aACf;YAUM,aAAa,CAAC,aAAc;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAUM,WAAW,CAAC,OAAQ;gBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACjC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;gBACzC,OAAO,IAAI,CAAC;aACf;YAUM,aAAa,CAAC,aAAc;gBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;;;gBAID,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,aAAa,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC3D,MAAM,CAAC,IAAI,CACP,oEAAoE;wBAChE,2CAA2C;wBAC3C,oEAAoE,CAC3E,CAAC;iBACL;gBAED,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAgBM,UAAU,CAAC,UAAW;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;iBAC3B;gBACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;gBAC9B,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;;gBAEpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,OAAO,IAAI,CAAC;aACf;YAIM,UAAU,CAAC,CAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;iBAC3B;gBACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,OAAO,IAAI,CAAC;aACf;YAaM,OAAO,CAAC,OAAQ;gBACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC7B;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC5B,OAAO,IAAI,CAAC;aACf;YAUM,aAAa,CAAC,OAAQ;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;IAED;UACaC,qBAAmB,GAAG,sBAAsB,CACrD,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,mBAAsB,CAAC,CAAC,CAAC,CACtE;;UCjWY,cAAe,SAAQ,eAAe;QAG/C,YAAY,OAA4B,EAAE;YACtC,KAAK,iBACD,MAAM,EAAE,EAAE,EACV,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,IACxB,IAAI,EACT,CAAC;SACN;QAEM,SAAS,CAAC,IAAyB;YACtC,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAChC;QAEM,IAAI;YACP,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;SACvB;;QAGM,IAAI;;YAEP,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,KAAK;gBAC1B,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;;gBAEtE,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,qCAAU,GAAG,KAAE,MAAM,EAAE,aAAa,CAAC,GAAG,CAAC,IAAG,CAAC,CAAC;gBAEvF,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;aACxC,CAAC,CAAC;SACN;QAEM,MAAM;YACT,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;;gBAElB,MAAM,UAAU,GAAc,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBAEtF,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACjD;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC5B;QAEM,WAAW,CAAC,IAAY;YAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;SACvD;KACJ;;IChDD;;;AAGA,UAAa,UAAW,SAAQ,mBAAmB;;;;;;QAgB/C,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI;gBAC1B,aAAa,EAAE,KAAK;gBACpB,iBAAiB,EAAE,KAAK;aAC3B,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC;YAExC,IAAI,CAAC,YAAY,GAAGC,aAAK,EAAE,CAAC;YAE5B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SAC3B;;;;QAKM,SAAS,CAAC,IAAqB;YAClC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;;;;QAKM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QASM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;aAC/B;YACD,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC3C;;;;;QAMM,IAAI;YACP,IAAI,MAAM,GAAU,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC;YAC/C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAChB,OAAO,EAAE,CAAC;aACb;YAED,MAAM,CAAC,OAAO,CAAC,CAAC;gBACZ,MAAM,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;oBACvC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC/B,CAAC,EAAE,CAAC,CAAC,MAAM;oBACX,IAAI,EAAE,CAAC;oBACP,IAAI,EAAE,CAAC,CAAC,IAAI;iBACf,CAAC,CAAC,CAAC;gBAEJ,CAAC,CAAC,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,SAAS,GAAG,CAAC,CAAC,YAAY,CAAC;aACxE,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBACrC,MAAM,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBACvB,MAAM,CAAC,OAAO,CAAC,KAAK;oBAChB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;aACd,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YACvD,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBACvB,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;oBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC/B,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;iBAClC,CAAC,CAAC;aACN,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACjB;QAEO,aAAa;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE;gBACX,OAAO,MAAM,IAAI,CAAC;aACrB;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YAClC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;;;gBAGlB,OAAO,MAAM,IAAI,CAAC;aACrB;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACrB,OAAO,MAAM,IAAI,CAAC;aACrB;YACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACvE;;;;;;;QAQM,SAAS,CAAC,SAAS;YACtB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;;;;;;;QAQM,SAAS,CAAC,SAAS;YACtB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;QAEO,eAAe,CAAC,SAAS;YAC7B,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SACzC;;;;;;QAOM,QAAQ;YACX,MAAM,CAAC,GAAGnB,WAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxE,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC/C;;;;;;QAOM,QAAQ;YACX,MAAM,CAAC,GAAGC,WAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxE,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC1C;;QAGO,aAAa;;YAEjB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;SAC3D;;;;;;QAOM,QAAQ;YACX,MAAM,CAAC,GAAGD,WAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;SAC5E;;;;;;QAOM,QAAQ;YACX,MAAM,CAAC,GAAGC,WAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,OAAO,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;SACvE;;;;QAKS,OAAO,CAAC,SAAiB;YAC/B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;SAClF;QAWM,WAAW,CAAC,MAAO;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;;;;QAKS,eAAe;YACrB,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACnD,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC9C;;;;QAKM,WAAW;YACd,OAAO,IAAI,CAAC,YAAY,EAAE;iBACrB,MAAM,EAAE;iBACR,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM;gBAChB,KAAK,EAAE,IAAI;gBACX,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,MAAM,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC;gBACzC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;aAC9C,CAAC,CAAC,CAAC;SACX;;;;QAKM,kBAAkB,CAAC,CAAa;YACnC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACxC;;;;QAKM,YAAY,CAAC,CAAa;YAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;oBAC5B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC1B;qBAAM;oBACH,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC1B;;gBAED,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;SACJ;KACJ;;aCrQe,aAAa,CAA0C,IAAW;QAC9E,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;YAkBM,KAAK,CAAC,KAAM,EAAE,IAAK,EAAE,QAAS;gBACjC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;iBACtC;gBAED,MAAM,KAAK,GAAI,IAAI,CAAC,aAAa,CAAC,IAAI,EAA0B,CAAC,MAAM,CAAC;gBAExE,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,QAAQ,GAAG,IAAI,CAAC;iBACnB;gBAED,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC9D,MAAM,KAAK,GAAc,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gBACzC,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;oBAChC,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC;iBAClC;gBAED,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAElB,OAAO,IAAI,CAAC;aACf;YAIM,KAAK,CAAC,CAAE,EAAE,CAAE,EAAE,CAAE;gBACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;iBACxB;gBACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;oBACzB,MAAM,EAAE,EAAE;iBACb,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC;oBACX,MAAM,EAAE,EAAE;iBACb,CAAC,CAAC;gBACH,IAAI,CAAC,EAAE;oBACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;iBACtD;gBACD,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;YAmBM,KAAK,CAAC,SAAU,EAAE,aAAc;gBACnC,IAAI,CAAC,SAAS,EAAE;oBACZ,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;iBACxB;gBAED,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;oBACjC,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBACjC;gBACD,IACI,SAAS,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS;oBAClD,OAAO,aAAa,KAAK,UAAU,EACrC;oBACE,OAAO,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;iBACrC;gBAED,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;oBACrC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;iBACxD;gBAED,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC;gBAE7C,OAAO,IAAI,CAAC;aACf;;;;;;YAOM,aAAa,CAAC,aAAa;gBAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACf;YAgBM,iBAAiB,CAAC,iBAAkB;gBACvC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;iBACvC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,CAAC,CAAC;gBACzD,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;UAEYmB,YAAU,GAAG,aAAa,CACnC,sBAAsB,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,UAAa,CAAC,CAAC,CAAC,CAAC,CACrF;;ICxID,MAAM,aAAa,GAAG,CAAC,CAAC;IACxB,MAAM,wBAAwB,GAAG,CAAC,CAAC;IACnC,MAAM,aAAa,GAAG,CAAC,CAAC;IAExB;;;;;;;AAOA,UAAa,QAAS,SAAQ,UAAU;;;;;;;;;;;;;;;;;;;;;QA0BpC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,KAAK,EAAE,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxC,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,KAAK;gBAChB,iBAAiB,EAAE,KAAK;aAC3B,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,GAAG,wBAAwB,CAAC;YAErC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B;QAEM,SAAS,CAAC,IAAmB;YAChC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAQM,YAAY,CAAC,OAAQ;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;aACxC;YACD,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;SAC/C;QAEM,OAAO;YACV,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,IAAI,CAAC;SACf;QAEM,MAAM;YACT,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;gBAC3E,MAAM,CAAC,IAAI,CACP,+DAA+D;oBAC3D,oDAAoD,CAC3D,CAAC;aACL;YAED,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;SACzB;QAEM,QAAQ;YACX,IAAI,MAAM,GAAyB,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAE5F,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,MAAM,GAAG,MAAM;iBACV,KAAK,EAAE;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC;iBACtC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEnB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC/B;gBACI,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBACtB,MAAM,KAAK,GAAG7B,kBAAM,CAAC,IAAI,CAAC,CAAC;oBAE3B,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAE/B,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,KAAK,CAAC,EAAE;wBACvC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBACpC;iBACJ,CAAC,CAAC;aACN;SACJ;QAEO,UAAU,CAAC,CAAC;YAChB,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtE;QAEO,UAAU,CAAC,CAAC;YAChB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACvB,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC7C,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aACtB;YACD,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;SACxB;QAEO,UAAU,CAAC,CAAC;YAChB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAE7B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;gBACT,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAC3B;YAED,OAAO,UAAU,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;SACxC;QAEO,aAAa,CAAC,KAA2B,EAAE,UAAkB,EAAE,IAAI;YACvE,MAAM,MAAM,GAAyD,KAAK;iBACrE,SAAS,CAAsB,eAAe,CAAC;iBAC/C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAEjC,MAAM,iBAAiB,GAAyD,MAAM;iBACjF,KAAK,EAAE;iBACP,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;iBACzB,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;iBAC7B,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAClC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAClC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEnB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,iBAAiB,CAAC,EAAE,CAChB,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;gBACF,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;aAC/C;YAED,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACnF,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAClC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAClC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBAC/E,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACjB,MAAM,EAAE,CAAC;SACjB;QAEO,QAAQ,CAAC,CAAC;YACd,IAAI,CAAC,GAAW,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACtB,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC7C,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aACtB;YACD,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;SACxB;QAEO,WAAW,CAAC,KAA2B,EAAE,UAAkB,EAAE,IAAI;YACrE,MAAM,IAAI,GAAqD,KAAK;iBAC/D,SAAS,CAAsB,UAAU,CAAC;iBAC1C,IAAI,CAAM,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAEtC,MAAM,KAAK,GAAqD,IAAI;iBAC/D,KAAK,EAAE;iBACP,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;iBACpB,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAChC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;iBAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;YAGvB,MAAM,eAAe,GAAyD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEhG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvE;YAED,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,eAAe,CAAC,EAAE,CACd,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;aACL;YAED,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACjF,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAChC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACR,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBAE7B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBACT,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC3B;gBAED,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;aACxB,CAAC;iBACD,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;iBAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBACvC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEnD,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBAC7E,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;iBACnC,MAAM,EAAE,CAAC;SACjB;QAEM,kBAAkB;YACrB,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;gBAGvC,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;iBACrD;qBAAM,IAAI,IAAI,CAAC,IAAI,EAAE;oBAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CACvB,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,YAAY,CACxE,CAAC;iBACL;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CACvB,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,YAAY,CAC/D,CAAC;iBACL;gBAED,IACI,IAAI,CAAC,SAAS,KAAK,QAAQ;oBAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;oBACrB,IAAI,CAAC,SAAS,GAAG,aAAa,EAChC;oBACE,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;iBAClC;aACJ;SACJ;QAEM,kBAAkB,CAAC,cAAgC;;YAEtD,MAAM,IAAI,GAAqD,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAEvG,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAClB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvE;qBAAM;oBACH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;oBAC9C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;iBACnD;aACJ;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBACvD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE;oBACrC,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;oBAChC,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;oBAE9B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;iBAC5E;qBAAM;oBACH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;iBACnD;aACJ;SACJ;QAEM,OAAO,CAAC,CAAC,EAAE,CAAE;YAChB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC5B;QAUM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACnC;YACD,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,gBAAgB;YACnB,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC;SAClC;QASM,GAAG,CAAC,GAAI;YACX,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;YACD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;QAEM,YAAY,CAAC,cAAc;YAC9B,IACI,cAAc;gBACd,IAAI,CAAC,KAAK,CAAC,KAAK;iBACf,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EACzD;gBACE,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3D;YACD,OAAO,cAAc,CAAC;SACzB;QAEM,eAAe,CAAC,CAAC;YACpB,MAAM,WAAW,GAAG,CAAC,KAAK,EAAE,GAAI,KAC5B;gBACI,MAAM,IAAI,GAAGA,kBAAM,CAAC,IAAI,CAAC,CAAC;gBAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC;gBAC1C,OAAO,GAAG,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;aAC/B,CAAC;YAEN,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBAC7B,IAAI,CAAC,CAAC,EAAE;qBACH,SAAS,CAAC,UAAU,CAAC;qBACrB,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;qBAC1C,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;aACvD;SACJ;QAEM,WAAW;YACd,IAAI,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACxF;QAEM,QAAQ;YACX,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACnC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;gBACzC,GAAG,GAAI,GAAc,GAAG,GAAG,CAAC;aAC/B;YACD,OAAO,GAAG,CAAC;SACd;KACJ;;UCvXY8B,UAAS,SAAQ,aAAa,CACvC,sBAAsB,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,QAAW,CAAC,CAAC,CAAC,CAAC,CACnF;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAQM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QAeM,iBAAiB,CAAC,iBAAkB;YACvC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;aACvC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,QAAQ,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACxE,IAAID,UAAQ,CAAC,MAAM,EAAE,UAAU,CAAC;;ICjCpC;IACA,SAAS,kBAAkB,CAAC,CAAS;QACjC,OAAO,CAAC;YACJ,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAE1B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAEjB,GAAG;gBACC,EAAE,CAAC,CAAC;aACP,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE;YAE1B,GAAG;gBACC,EAAE,CAAC,CAAC;aACP,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE;YAE1B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACjB,CAAC;IACN,CAAC;IAED;;;;;;;;;AASA,UAAa,OAAQ,SAAQ,mBAAmB;;;;;;;;;;;;;;;;;QAuB5C,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,MAAM,gBAAgB,GAAG,GAAG,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;YAEtD,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC;gBACX,MAAM,EAAE,YAAY;gBACpB,UAAU,EAAE,IAAI;gBAChB,gBAAgB,EAAE,KAAK;gBACvB,WAAW,EAAE,GAAG;gBAChB,gBAAgB,EAAE,GAAG;gBACrB,YAAY,EAAE,IAAI;gBAClB,WAAW,EAAE,KAAK;;;gBAIlB,aAAa,EAAE,CAAC;aACnB,CAAC,CAAC;YAEH,IAAI,CAAC,SAAS,GAAG,CAAC,eAAe,EAAE,MAAM;gBACrC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAClB,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;iBAC/B;qBAAM;oBACH,OAAO,eAAe,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,MAAM,CAAC;iBAC7D;aACJ,CAAC;;YAGF,IAAI,CAAC,CAAC,CAACT,iBAAS,EAAE,CAAC,CAAC;YAEpB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SAC1B;QAEM,SAAS,CAAC,IAAkB;YAC/B,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEM,IAAI;;;;YAIP,OAAO,KAAK;iBACP,IAAI,EAAE;iBACN,GAAG,CAAC,CAAC;gBACF,CAAC,CAAC,GAAG,GAAG,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxC,OAAO,CAAC,CAAC;aACZ,CAAC;iBACD,MAAM,CAAC,CAAC;gBACL,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;gBACxB,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;aAC9B,CAAC,CAAC;SACV;QAUM,UAAU,CAAC,OAAQ;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACnC;YACD,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SAC1C;QAUM,YAAY,CAAC,OAAQ;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;aACxC;YACD,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;SAC/C;QAmBM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,GAAG,MAAM,QAAQ,CAAC;YAC5E,OAAO,IAAI,CAAC;SACf;QAEM,aAAa,CAAC,CAAC,EAAE,CAAS;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvD,OAAO,aAAa,OAAO,MAAM,CAAC;SACrC;QAES,eAAe;YACrB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACrB,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aACvB;SACJ;QAEM,QAAQ;YACX,MAAM,kBAAkB,GAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAE5F,IAAI,CAAC,IAAI;iBACJ,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;iBACxB,KAAK,CAAC,kBAAkB,CAAC;iBACzB,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC9B,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;iBACpB,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;iBACzB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;iBACvC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;iBACjC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;iBAC7C,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACnC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;iBAC7C,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACnC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;iBACrC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAEzC,MAAM,MAAM,GAAyB,IAAI,CAAC,UAAU,EAAE;iBACjD,SAAS,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAE/C,MAAM,iBAAiB,GAAyB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC1E,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAE1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC1C;QAEM,YAAY,CAAC,MAA4B;YAC5C,MAAM,WAAW,GAAyB,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAErE,WAAW;iBACN,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;iBACpB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;iBACf,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC;gBACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CACL,CAAC;YACN,OAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACpC;QAEM,YAAY,CAAC,MAA4B;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC;YACnB,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACxE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;iBACf,IAAI,CAAC,UAAU,CAAC;gBACb,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChDrB,kBAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACpDA,kBAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAC7D,CAAC,CAAC;SACV;QAEM,YAAY,CAAC,MAA4B;YAC5C,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1C;QAEM,aAAa;;YAEhB,OAAOQ,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAIA,WAAG,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACvD;QAEM,aAAa;;YAEhB,OAAOC,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAIA,WAAG,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACvD;QAEM,gBAAgB;YACnB,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;SACjF;QAEM,kBAAkB,CAAC,cAAgC;YACtD,MAAM,KAAK,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAClB,IAAI,CAAC,CAAC,EAAE;yBACH,SAAS,CAAC,OAAO,CAAC;yBAClB,IAAI,CAAC,UAAU,CAAC;wBACb,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;4BACzB,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;yBACjC;6BAAM;4BACH,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;yBAC9B;qBACJ,CAAC,CAAC;iBACV;qBAAM;oBACH,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;wBACnD,OAAO;qBACV;oBACD,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;oBAChC,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,CAAC,EAAE;yBACH,SAAS,CAAC,OAAO,CAAC;yBAClB,IAAI,CAAC,UAAU,CAAC;wBACb,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;4BAC3B,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;yBAC9B;6BAAM;4BACH,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;yBACjC;qBACJ,CAAC,CAAC;iBACV;aACJ;iBAAM;gBACH,IAAI,CAAC,CAAC,EAAE;qBACH,SAAS,CAAC,OAAO,CAAC;qBAClB,IAAI,CAAC;oBACF,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC9B,CAAC,CAAC;aACV;SACJ;QAEM,cAAc,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;QAEM,QAAQ;YACX,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACnE,OAAO,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAW,CAAC;SACtF;QAEM,QAAQ;YACX,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACnE,OAAO,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAW,CAAC;SACjF;KACJ;;UCjUYuB,SAAQ,SAAQ,sBAAsB,CAC/C,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,OAAU,CAAC,CAAC,CAAC,CAC1D;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAWM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAWM,gBAAgB,CAAC,IAAK;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACtC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAWM,WAAW,CAAC,OAAQ;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QAYM,aAAa,CAAC,aAAc;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAWM,gBAAgB,CAAC,UAAW;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACtC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAWM,YAAY,CAAC,IAAK;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;QAWM,WAAW,CAAC,IAAK;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,OAAO,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,SAAO,CAAC,MAAM,EAAE,UAAU,CAAC;;IC3H9E;;;;;;;;;;;;AAYA,UAAa,WAAY,SAAQ,WAAW,CAAC,mBAAmB,CAAC;;;;;;;;;;;;;;QAgB7D,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;;gBAEX,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;aACrB,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,aAAa,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;SACnF;;;;QAKM,QAAQ;YACX,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAE1F,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,OAAO,GAAyB,IAAI,CAAC,UAAU,EAAE;iBAChD,SAAS,CAAC,KAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBACxC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;;gBAE3B,OAAO,CAAC,KAAK,EAAE,CAAC;aACnB;YAED,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAE3B,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAErC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAE3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC1C;QAEO,YAAY,CAAC,OAA6B;YAC9C,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEjD,YAAY;iBACP,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC;iBACrC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBAC9C,MAAM,CAAC,QAAQ,CAAC;iBAChB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE,CAAC;iBACrD,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC;iBACA,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAElB,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEtC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACzE,MAAM,CAAC,UAAU,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBAC/B,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAEzD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAElC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;YAEnC,OAAO,OAAO,CAAC;SAClB;QAEO,YAAY,CAAC,OAA6B;YAC9C,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACzE,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBAC9C,MAAM,CAAC,UAAU,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBAC/B,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAEzD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SAChC;QAEO,YAAY,CAAC,OAA6B;YAC9C,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;SAC3B;QAEO,QAAQ,CAAC,CAAC;YACd,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC1B,CAAC,GAAG,CAAC,CAAC;aACT;YACD,OAAO,CAAC,CAAC;SACZ;QAEO,QAAQ,CAAC,CAAC;YACd,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC1B,CAAC,GAAG,CAAC,CAAC;aACT;YACD,OAAO,CAAC,CAAC;SACZ;;;;QAKM,WAAW;;SAEjB;;;;QAKM,WAAW,CAAC,cAAgC,EAAE,YAAqB;;YAEtE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;SAC3C;KACJ;;UChJYE,aAAY,SAAQ,cAAc;IAC3C;IACA,sBAAsB,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,WAAc,CAAC,CAAC,CAAC,CAAC,CACtF;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;KACJ;UAEY,WAAW,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,aAAW,CAAC,MAAM,EAAE,UAAU,CAAC;;ICLtF,MAAM,oBAAoB,GAAG,gBAAgB,CAAC;IAC9C,MAAM,iBAAiB,GAAG,MAAM,CAAC;IACjC,MAAM,YAAY,GAAG,QAAQ,CAAC;IAE9B;;;;;;;;;AASA,UAAa,aAAc,SAAQ,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;QA0BjE,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,MAAM,EAAE,EAAE;aACb,CAAC,CAAC;YAEH,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YAEpB,IAAI,CAAC,SAAS,CAAC;;gBAEX,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;gBAClB,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK;aACpC,CAAC,CAAC;SACN;;;;QAKM,SAAS,CAAC,IAAwB;YACrC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;;;;QAKM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAaM,GAAG,CAAC,UAAW;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC;aACtB;YACD,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;;;;QAKS,SAAS;YACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAE/B,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAEnF,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;SACf;QAEO,aAAa;YACjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAc,KAAK,oBAAoB,EAAE,CAAC,CAAC;YAChE,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;aACxE;YACD,OAAO,IAAI,CAAC,EAAE,CAAC;SAClB;QAEO,kBAAkB;YACtB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;gBAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAE1C,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,YAAY,EAAE,CAAC,CAAC;gBAEpD,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;oBAChB,MAAM,GAAG,KAAK;yBACT,MAAM,CAAC,QAAQ,CAAC;yBAChB,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;yBAC3B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;yBACZ,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACxD,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;iBACT;gBAED,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAC9E,GAAG,EACH,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CACvB,CAAC;gBAEF,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAE3B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN;QAEO,QAAQ;YACZ,MAAM,IAAI,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK;gBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;aAC/C,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACf;QAEO,SAAS,CAAC,KAA6C,EAAE,IAAI;YACjE,MAAM,eAAe,GAAG,GAAG,iBAAiB,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YAEvE,IAAI,KAAK,GAAyB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE9E,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;gBACf,KAAK,GAAG,IAAI,CAAC,EAAE;qBACV,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC;qBAC9B,IAAI,CAAC,WAAW,EAAE,aAAa,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;aAC9D;YAED,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAE9B,OAAO,KAAK,CAAC;SAChB;;;;QAKS,SAAS;YACf,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;SACf;QAEO,cAAc;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;gBAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAE1C,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,YAAY,EAAE,CAAC,CAAC;gBAEtD,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;qBACxE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;qBAC/B,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAE9D,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAE3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aAC9B,CAAC,CAAC;SACN;;;;;;;;QASM,KAAK,CAAC,OAAgB,KAAK;YAC9B,IAAI,IAAI,EAAE;gBACN,IAAI,MAAM,GAAyB,IAAI,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBAEnF,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;oBAChB,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,iBAAiB,CAAC,CAAC;iBAC9E;gBAED,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAEpE,MAAM;qBACD,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;qBAC3B,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;qBAC7B,EAAE,CAAC,WAAW,EAAE;oBACb,MAAM,QAAQ,GAAGE,iBAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;oBACtC,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC7C,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACvB,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;aACrC;YAED,OAAO,IAAI,CAAC;SACf;KACJ;;UC9OYC,eAAc,SAAQ,cAAc,CAAC,aAAa,CAAC,YAAY,CAACC,aAAgB,CAAC,CAAC,CAAC;QAC5F,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;;;;;;;;;QAUM,KAAK,CAAC,IAAY,EAAE,CAAS,EAAE,CAAS;YAC3C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,aAAa,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,eAAa,CAAC,MAAM,EAAE,UAAU,CAAC;;ICf1F,MAAM,eAAe,GAAG,eAAe,CAAC;IACxC,MAAM,cAAc,GAAG,cAAc,CAAC;IAEtC;;;;;AAKA,UAAa,QAAS,SAAQ,SAAS;;;;;;;;;;;;;;;;;;;QAwBnC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,YAAY;gBACxB,WAAW,EAAE,IAAI;gBACjB,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;gBAClC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK7C,iBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACnF,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YAEvB,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,CAAC;SAC/B;QAEM,SAAS,CAAC,IAAmB;YAChC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEM,IAAI;YACP,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAC1D;QAES,SAAS;YACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;QAES,SAAS;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACzC,IAAI,CAAC,KAAK;qBACL,SAAS,CAAC,OAAO,CAAC;;qBAElB,QAAQ,CACL,SAAS,EACT,CAAC,IACG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACpE,KAAK,CACZ,CAAC;aACT;iBAAM,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;oBAC/C,IAAI,CAAC,CAAC,EAAE;wBACJ,OAAO,KAAK,CAAC;qBAChB;oBACD,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;iBACtD,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC;SACf;QAEO,cAAc;YAClB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,GAAG,OAAO,CAAC;YAE7D,IAAI,OAAO,GAAwD,IAAI,CAAC,KAAK;iBACxE,SAAS,CAAqB,MAAM,cAAc,EAAE,CAAC;iBACrD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvD,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAExB,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEpF,OAAO;iBACF,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;iBACvB,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBAC7C,IAAI,CAAC,MAAM,EAAE,UAAU,IAAI,CAAC,SAAS,EAAE,CAAC;iBACxC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1D,OAAO;iBACF,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,SAAS,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;iBACrD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE5B,MAAM,KAAK,GAAG,IAAI,CAAC;;YAEnB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACrB,IAAI,CAAC,KAAK;qBACL,MAAM,CAAC,IAAI,CAAC;qBACZ,MAAM,CAAC,OAAO,CAAC;qBACf,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;qBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;qBAC3B,EAAE,CACC,OAAO,EACP,YAAY,CAAC,UAAU,CAAC,EAAE,GAAG;oBACzB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;iBACxC,CAAC,CACL,CAAC;aACT;iBAAM;gBACH,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;qBACb,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;qBACvB,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;qBACrC,IAAI,CAAC,MAAM,EAAE,UAAU,IAAI,CAAC,SAAS,EAAE,CAAC;qBACxC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,SAAS,IAAI,CAAC,SAAS,MAAM,CAAC;qBACnD,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBAC/B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;qBACb,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,SAAS,IAAI,CAAC,SAAS,MAAM,CAAC;qBACpD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEpE,IAAI,CAAC,KAAK,CAAC,EAAE,CACT,QAAQ,EACR,YAAY,CAAC,UAAU,CAAC,EAAE,GAAG;gBACzB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;aACxC,CAAC,CACL,CAAC;YACF,OAAO,OAAO,CAAC;SAClB;QAEO,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,OAAoB;YAC1C,IAAI,MAAM,CAAC;YACX,MAAM,MAAM,GAAGQ,kBAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClC,IAAI,OAAmE,CAAC;YAExE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE;gBACjB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC;aAC3C;iBAAM;gBACH,OAAO,GAAGA,kBAAM,CAAC,OAAO,CAAC;qBACpB,SAAS,CAAwB,OAAO,CAAC;qBACzC,MAAM,CAAC,UAAU,CAAC;oBACf,IAAI,CAAC,EAAE;wBACH,OAAO,IAAI,CAAC,OAAO,CAAC;qBACvB;iBACJ,CAAC,CAAC;gBACP,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;;gBAErD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7C,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBACtB;aACJ;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACzB;;QAGM,QAAQ,CAAC,GAAG;YACf,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;iBAAM,IAAI,GAAG,EAAE;gBACZ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACH,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;YACD,MAAM,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;KACJ;;UClMYuC,UAAS,SAAQ,YAAY,CAACC,QAAW,CAAC;QACnD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAcM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aAC3B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;SACf;QAUM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAaM,eAAe,CAAC,eAAgB;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;aACrC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;QAWM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;QAUM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAE7C,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,QAAQ,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACxE,IAAID,UAAQ,CAAC,MAAM,EAAE,UAAU,CAAC;;ICrFpC,MAAM,eAAe,GAAG,KAAK,CAAC;IAC9B,MAAM,kCAAkC,GAAG,EAAE,CAAC;IAE9C;;;;;AAKA,UAAa,cAAe,SAAQ,mBAAmB;;;;;;;;;;;;;QAwBnD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;gBAClB,WAAW,EAAE,KAAK;gBAClB,UAAU,EAAE,IAAI;aACnB,CAAC,CAAC;YAEH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAEpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAExB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,WAAW,GAAGjB,gBAAS,CAAC,SAAS,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,uBAAuB,GAAG,kCAAkC,CAAC;YAClE,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YAEjC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YAE9B,IAAI,CAAC,EAAE,CAAC,+BAA+B,EAAE,KAAK;;;;gBAI1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;;oBAExB,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE;wBAClC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;qBACtC;iBACJ,CAAC,CAAC;aACN,CAAC,CAAC;SACN;QAEM,SAAS,CAAC,IAAyB;YACtC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEM,UAAU;YACb,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC5C,MAAM,KAAK,GAAwB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAErD,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAE/B,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE;oBACxC,KAAK,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;iBACvF;gBACD,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;oBACpC,KAAK,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC/E;gBACD,KAAK;qBACA,YAAY,EAAE;qBACd,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;gBAE1E,KAAK,CAAC,SAAS,CAAC;oBACZ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;oBACzB,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB;oBACjD,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe;oBAC3C,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;oBACnC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;iBAChC,CAAC,CAAC;gBAEH,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;gBACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBACtB,KAAK,CAAC,SAAS,CAAC;oBACZ,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;oBACjC,OAAO,EAAE,KAAK;iBACjB,CAAC,CAAC;aACN;YAED,OAAO,CAAC,CAAC;SACZ;QAEM,OAAO;YACV,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;gBACxB,KAAK,CAAC,OAAO,EAAE,CAAC;aACnB,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;SACf;QAIM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC3B;YACD,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAEzB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;gBACxB,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC5B,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;SACf;QAES,aAAa;YACnB,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;YACtD,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAEvD,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aAClC;YACD,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;aACnC;YAED,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBACnE,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;aAC5E;iBAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9C,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aACpF;SACJ;QAEM,YAAY;YACf,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;aACvD;YAED,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;gBAClF,IAAI,CAAC,iBAAiB,CAClB,IAAI,EACJ,IAAI,CAAC,eAAe,EAAE,EACtB,EAAE,EACF,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,uBAAuB,CAC9C,CAAC;aACL;SACJ;QAEM,qBAAqB,CAAC,IAAa,EAAE,KAAc;YACtD,IAAI,SAAS,CAAC;YACd,IAAI,SAAS,CAAC;YACd,IAAI,SAAS,CAAC;YACd,IAAI,SAAS,CAAC;YACd,IAAI,MAAM,CAAC;YAEX,IAAI,IAAI,EAAE;gBACN,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC7B,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;aAChC;YAED,IAAI,KAAK,EAAE;gBACP,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBAClC,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;aACrC;YAED,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,IAAI,KAAK,EAAE;gBACpC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC/E;YAED,OAAO,MAAM,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;SACnE;QAEM,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;;;;;;;;YAS/D,MAAM,WAAW,GAAG,CAAC,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC;YAEtE,OAAO;gBACH,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC;gBACvD,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC;gBACvD,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC;gBACvD,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,GAAG,WAAW,CAAC;aAC1D,CAAC;SACL;QAEM,kBAAkB,CAAC,MAAM;YAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACtE,MAAM,SAAS,GAAG,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhD,IAAI,IAAI,CAAC,MAAM,EAAE,KAAK,SAAS,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAACpB,mBAAW,EAAE,CAAC,CAAC;aAC9B;YACD,IAAI,UAAU,EAAE;gBACZ,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACtD;YAED,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;;SAI3D;QAEM,iBAAiB,CAAC,MAAM;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACjE,MAAM,SAAS,GAAG,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhD,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK,SAAS,EAAE;gBACxB,IAAI,CAAC,CAAC,CAACA,mBAAW,EAAE,CAAC,CAAC;aACzB;YACD,IAAI,UAAU,EAAE;gBACZ,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACjD;YAED,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;SAI5C;QAEM,eAAe,CAAC,KAAK,EAAE,CAAC;YAC3B,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3B,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,eAAe,KAAK,CAAC,EAAE,CAAC,CAAC;SACvD;QAEM,QAAQ;YACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAEhC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAClC;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC3E;gBAED,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAElB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBAE1B,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,EAAE;oBAC5B,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;iBAClC;qBAAM;oBACH,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC7B;gBAED,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAEjB,KAAK,CAAC,mBAAmB,EAAE,CAAC;aAC/B;SACJ;QASM,qBAAqB,CAAC,qBAAsB;YAC/C,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACnC;YAED,IAAI,CAAC,mBAAmB,GAAG,qBAAqB,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAQM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;YACD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;gBACxB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACrC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACf;QAEM,kBAAkB,CAAC,cAAc;YACpC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAChC,KAAK,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;iBAC5C;aACJ;SACJ;QAOM,eAAe,CAAC,eAAgB,EAAE,OAAQ;YAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;YACD,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC;YACrD,IAAI,CAAC,uBAAuB;gBACxB,OAAO,KAAK,SAAS,GAAG,kCAAkC,GAAG,OAAO,CAAC;YACzE,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4BM,OAAO,CAAC,aAAoC;YAC/C,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;gBACxB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC5B,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC1B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;gBAE9B,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;oBACvB,KAAK,CAAC,SAAS,CAAC;wBACZ,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;qBAC1B,CAAC,CAAC;iBACN;gBAED,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACrC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;SACf;QAEM,oBAAoB,CAAC,IAAI,EAAE,KAAK;YACnC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;gBACxB,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;aACtB,CAAC,CAAC;SACN;QAKM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;aACzB;YACD,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACrB,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;QAIM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;aACxB;YACD,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC;SACf;QAIM,OAAO,CAAC,OAAQ;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;aAC1B;YACD,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACvB,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAC9C,OAAO,IAAI,CAAC;SACf;;;;QAKM,QAAQ;YACX,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;QASM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;SACf;QAQM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;SACf;QAEM,kBAAkB;YACrB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC;SACtE;QAEM,mBAAmB;YACtB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC;SACrE;;QAIM,YAAY,CAAC,MAAM;YACtB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SACxC;QAEM,SAAS;YACZ,OAAOM,WAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;SAC5D;QAEM,cAAc;YACjB,OAAOA,WAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;SAC7D;QAEM,YAAY,CAAC,MAAM;YACtB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SACxC;QAEM,SAAS;YACZ,OAAO,GAAG,CAACC,WAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC1F;QAEM,cAAc;YACjB,OAAO,GAAG,CAACA,WAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAC3F;QAEM,8BAA8B;YACjC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChD;QAEM,QAAQ;YACX,OAAO,QAAQ,CACXD,WAAG,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC,EAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,EACvB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAC9B,CAAC;SACL;QAEM,8BAA8B;YACjC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChD;QAEM,QAAQ;YACX,OAAO,GAAG,CACNC,WAAG,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC,EAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,EACvB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAC9B,CAAC;SACL;QAEM,WAAW;YACd,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK;gBACtC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC3E;gBACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC7C,OAAO,KAAK,CAAC;aAChB,EAAE,EAAE,CAAC,CAAC;SACV;QAEM,eAAe,CAAC,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;aAC5B;SACJ;QAEM,WAAW,CAAC,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ;QAEM,YAAY;YACf,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;SACtE;QAyBM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAEM,QAAQ;YACX,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;QAEM,QAAQ;YACX,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;KACJ;;aC9lBe,iBAAiB,CAA0C,IAAW;QAClF,OAAO,cAAc,IAAI;YACrB,YAAY,GAAG,IAAW;gBACtB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;aAClB;YAWM,WAAW,CAAC,WAAY;gBAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBACjC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC;aACf;YAYM,UAAU,CAAC,UAAW;gBACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;iBAChC;gBACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;IACN,CAAC;UAEYgC,gBAAc,GAAG,iBAAiB,CAC3C,sBAAsB,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,cAAiB,CAAC,CAAC,CAAC,CAAC,CACzF,CAAC;UAEW,cAAc,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,gBAAc,CAAC,MAAM,EAAE,UAAU,CAAC;;IC3C5F;;;;;;;;;;;;;;;AAeA,UAAa,SAAU,SAAQ,SAAS;;;;;;;;;;;;;;;QAoBpC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,YAAY,EAAEtD,eAAM,CAAC,IAAI,CAAC;gBAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;aAC9B,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,oBAAoB,CAAC,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC;SAC1D;QAEM,SAAS,CAAC,IAAoB;YACjC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAES,SAAS;YACf,MAAM,GAAG,GAAW,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;YAC9C,MAAM,GAAG,GAAW,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC;YAC5C,MAAM,GAAG,GAAW,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACjD,MAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAEtD,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE;gBAC3C,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,QAAQ,CAAC,CACtF,CAAC;aACL;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;gBACpC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,QAAQ,CAAC,CACvF,CAAC;aACL;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClD;YACD,OAAO,IAAI,CAAC;SACf;QAES,SAAS;YACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;QAIM,WAAW,CAAC,EAAG;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC;SACf;QAIM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;KACJ;;UChHYwD,WAAU,SAAQ,YAAY,CAACC,SAAY,CAAC;QAG9C,SAAS,CAAC,EAAG;YAChB,MAAM,CAAC,QAAQ,CACX,iFAAiF,CACpF,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;aAC7B;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SAC/B;QAIM,KAAK,CAAC,QAAS;YAClB,MAAM,CAAC,QAAQ,CAAC,0EAA0E,CAAC,CAAC;YAC5F,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC1B;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAClC;QAgBM,IAAI,CAAC,OAAQ;YAChB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,OAAO,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;aACrC;YACD,IAAI,OAAO,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;aACvC;YACD,OAAO,IAAI,CAAC;SACf;QAWM,YAAY,CAAC,SAAU;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,SAAS,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,WAAS,CAAC,MAAM,EAAE,UAAU,CAAC;;ICjElF,MAAM,eAAe,GAAG,eAAe,CAAC;IACxC,MAAME,gBAAc,GAAG,cAAc,CAAC;IACtC,MAAM,iBAAiB,GAAG,+BAA+B,CAAC;IAC1D,MAAM,cAAc,GAAG,aAAa,CAAC;IAErC;;;;;;;AAOA,UAAa,QAAS,SAAQ,SAAS;;;;QAMnC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,GAAG;gBACT,IAAI,EAAE,CAAC,IAAI,kDAAkD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAChF,MAAM,EAAE,CAAC,IAAI,CAAC;gBACd,KAAK,EAAErD,iBAAS;gBAChB,UAAU,EAAE,CAAC;gBACb,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,CAAC,IACV,eAAe,iBAAiB,gBAAgB,eAAe,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CACtF,CAAC,CACJ,aAAa;aACrB,CAAC,CAAC;YAEH,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;SACvD;QAEM,SAAS,CAAC,IAAmB;YAChC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAES,SAAS;YACf,IAAI,CAAC,SAAS,CAAC,OAAO,cAAc,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;YAEjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;SACf;QAEO,eAAe;YACnB,MAAM,QAAQ,GAAiD,IAAI,CAAC,IAAI,EAAE;iBACrE,SAAS,CAAsB,OAAO,cAAc,EAAE,CAAC;iBACvD,IAAI,CAAM,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpE,MAAM,WAAW,GAAiD,QAAQ;iBACrE,KAAK,EAAE;iBACP,MAAM,CAAC,KAAK,CAAC;iBACb,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;YAEnC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aACpD;YAED,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YACzB,OAAO,WAAW,CAAC;SACtB;QAEO,YAAY;;YAEhB,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAExE,OAAO,GAAG,OAAO;iBACZ,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5E,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEvD,OAAO,gBAAgB,CAAC;gBACpB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBAC1B,OAAO;aACV,CAAC,CAAC;SACN;QAEO,YAAY,CAAC,QAAsD;YACvE,IAAI,KAAK,GAA4D,QAAQ;iBACxE,KAAK,EAAE;iBACP,SAAS,CAAsB,OAAOqD,gBAAc,EAAE,CAAC;iBACvD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAEzB,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAEtB,KAAK,GAAG,KAAK;iBACR,KAAK,EAAE;iBACP,MAAM,CAAC,KAAK,CAAC;iBACb,IAAI,CAAC,OAAO,EAAEA,gBAAc,CAAC;iBAC7B,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC7B,KAAK,CAAC,KAAK,CAAC,CAAC;YAElB,OAAO,KAAK,CAAC;SAChB;QAES,SAAS;YACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;KACJ;;IC1GD;AACA,UAAaC,UAAS,SAAQ,YAAY,CAACC,QAAW,CAAC;QACnD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAeM,OAAO,CAAC,OAAQ;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aAC7B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;;QAWM,KAAK,CAAC,OAAQ;YACjB,MAAM,CAAC,QAAQ,CAAC,uEAAuE,CAAC,CAAC;YACzF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAChC;QASM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAQM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;QAQM,IAAI,CAAC,IAAK;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAWM,IAAI,CAAC,IAAK;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QASM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAOM,SAAS,CAAC,WAAY;YACzB,MAAM,CAAC,QAAQ,CACX,+EAA+E,CAClF,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;aAC7B;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SACxC;QAYM,MAAM,CAAC,cAAe;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC5B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAWM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aAC3B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,QAAQ,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACxE,IAAID,UAAQ,CAAC,MAAM,EAAE,UAAU,CAAC;;IC9KpC,MAAME,iBAAe,GAAG,gBAAgB,CAAC;IACzC,MAAM,aAAa,GAAG,cAAc,CAAC;IACrC,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC3C,MAAMC,mBAAiB,GAAG,iCAAiC,CAAC;IAC5D,MAAM,cAAc,GAAG,eAAe,CAAC;IAEvC;;;;;;;;;;;;;;;;;;;;AAoBA,UAAa,SAAU,SAAQ,SAAS;;;;QAMpC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,CAAC,IAAI,CAAC;gBACd,KAAK,EAAEzD,iBAAS;gBAChB,UAAU,EAAE,CAAC;gBACb,QAAQ,EAAE,SAAS;gBACnB,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,MAAM,EAAE;aACpB,CAAC,CAAC;YAEH,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SAC5C;QAEM,SAAS,CAAC,IAAoB;YACjC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAES,SAAS;YACf,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;YAEjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;YAEzC,OAAO,IAAI,CAAC;SACf;QAEO,oBAAoB,CAAC,CAAC,EAAE,CAAC;YAC7B,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;;gBAEzB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACf;YACD,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;;gBAEvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACf;;YAED,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB;QAEO,qBAAqB,CAAC,CAAsB;;;;YAIhD,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;gBACzB,OAAO,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;aAC5C;YACD,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;aAC5C;YACD,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC1B;QAEO,yBAAyB,CAAC,CAAS;;YAEvC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACjD;;QAGO,yBAAyB,CAAC,CAAmB;;YAEjD,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAClB,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACT,MAAM,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,EAAE,IAAI,CAAC,EAAE;oBACT,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC5B,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACrC,IAAI,EAAE,IAAI,CAAC,EAAE;wBACT,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;qBACrC;iBACJ;aACJ;YACD,OAAO,CAAC,CAAC;SACZ;QAEO,eAAe;;;;;;;;YAQnB,IAAI,aAAa,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxB,aAAa,GAAG,aAAa,IAAI,OAAO,CAAC,KAAK,UAAU,CAAC;aAC5D,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,EAAE;;;gBAGhB,IAAI,KAAK,GACL,IAAI,CAAC,SAAS,CAA+B,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpE,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;gBACtB,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;gBAGnD,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAA2B,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxE,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;gBACxB,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;gBAGtD,MAAM,QAAQ,GAAG,OAAO;qBACnB,SAAS,CAAkC,IAAI,CAAC;qBAChD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC9B,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;gBACzB,QAAQ;qBACH,KAAK,EAAE;qBACP,MAAM,CAAC,IAAI,CAAC;qBACZ,KAAK,CAAC,QAAQ,CAAC;qBACf,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC;qBAC7B,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;YAED,MAAM,QAAQ,GAA0D,IAAI,CAAC,IAAI,EAAE;iBAC9E,SAAS,CAA+B,OAAO,CAAC;iBAChD,IAAI,CAAM,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpE,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAEpD,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,IAAI,EAAE;gBAClC,UAAU;qBACL,MAAM,CAAC,IAAI,CAAC;qBACZ,IAAI,CAAC,OAAO,EAAEyD,mBAAiB,CAAC;qBAChC,MAAM,CAAC,IAAI,CAAC;qBACZ,IAAI,CAAC,OAAO,EAAED,iBAAe,CAAC;qBAC9B,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;qBAC1C,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;YAED,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAEzB,OAAO,UAAU,CAAC;SACrB;QAEO,YAAY;;YAEhB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;YAEvD,IAAI,OAAO,CAAC;YACZ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAKxD,iBAAS,EAAE;gBAChC,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC/C;iBAAM;gBACH,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5C;YAED,OAAO,GAAG,OAAO;iBACZ,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5E,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEvD,OAAO,gBAAgB,CAAC;gBACpB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBAC1B,OAAO;aACV,CAAC,CAAC;SACN;QAEO,WAAW,CAAC,QAA+D;YAC/E,MAAM,IAAI,GAA0E,QAAQ;iBACvF,KAAK,EAAE;iBACP,SAAS,CAA2B,MAAM,aAAa,EAAE,CAAC;iBAC1D,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAEzB,MAAM,QAAQ,GAKV,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;YAE3D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,QAAQ;qBACH,MAAM,CAAC,IAAI,CAAC;qBACZ,IAAI,CAAC,OAAO,EAAE,GAAG,gBAAgB,KAAK,CAAC,EAAE,CAAC;qBAC1C,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACnD,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAErB,OAAO,IAAI,CAAC;SACf;QAES,SAAS;YACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;KACJ;;IC/ND;AACA,UAAa0D,WAAU,SAAQ,YAAY,CAACC,SAAY,CAAC;QACrD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAgBM,OAAO,CAAC,OAAQ;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aAC7B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;;QAWM,KAAK,CAAC,OAAQ;YACjB,MAAM,CAAC,QAAQ,CAAC,yEAAyE,CAAC,CAAC;YAC3F,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAChC;QAQM,IAAI,CAAC,IAAK;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAaM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAQM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;QA8EM,OAAO,CAAC,OAAQ;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aAC7B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;QAYM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC5B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;SACf;QAaM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aAC3B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;SACf;QAYM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QAQM,UAAU,CAAC,YAAa;YAC3B,MAAM,CAAC,QAAQ,CACX,mFAAmF,CACtF,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC1C;KACJ;UAEY,SAAS,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACzE,IAAID,WAAS,CAAC,MAAM,EAAE,UAAU,CAAC;;ICvPrC;;;;;;;;AAQA,UAAa,kBAAmB,SAAQ,UAAU,CAAC,SAAS,CAAC;;;;;;;;;;;;;;QAoBzD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,aAAa,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC1B,QAAQ,EAAE,EAAE;aACf,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,GAAGE,aAAO,EAAE,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAChC;QAEM,SAAS,CAAC,IAA6B;YAC1C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAES,SAAS;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE;gBAC5E,MAAM,MAAM,GAA0C,IAAI,CAAC,GAAG,EAAE;qBAC3D,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,OAAO,EAAE,QAAQ,UAAU,EAAE,CAAC,CAAC;gBAEzC,IAAI,OAAO,GAAG,MAAM;qBACf,SAAS,CAAmB,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;qBAClE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;gBAE1C,OAAO,GAAG,OAAO;qBACZ,KAAK,EAAE;qBACP,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;qBAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;gBAEpB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;gBAE3E,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAExB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aAC9B;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAE7B,OAAO,IAAI,CAAC;SACf;QAEO,SAAS,CAAC,UAAkB;YAChC,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAEzC,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;gBAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBAEhD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;gBAE7C,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;aACjD;SACJ;QAEO,oBAAoB;YACxB,MAAM,IAAI,GAAG,EAAE,CAAC;YAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;aAClE;YACD,OAAO,IAAI,CAAC;SACf;QAEO,YAAY,CAAC,UAAkB;YACnC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC;SAClD;QAEO,cAAc,CAAC,UAAkB;YACrC,MAAM,OAAO,GAAiD,IAAI,CAAC,GAAG,EAAE;iBACnE,SAAS,CAAmB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;iBAC5D,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;iBACzD,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;iBAC7D,IAAI,CAAC,OAAO,EAAE,CAAC;gBACZ,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;gBACtD,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,WAAW,GAAG,GAAG,cAAc,IAAI,WAAW,EAAE,CAAC;gBACrD,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;oBACjC,WAAW,IAAI,WAAW,CAAC;iBAC9B;gBACD,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;oBACnC,WAAW,IAAI,aAAa,CAAC;iBAChC;gBACD,OAAO,WAAW,CAAC;aACtB,CAAC,CAAC;YACP,OAAO,OAAO,CAAC;SAClB;QAEO,cAAc,CAAC,UAAkB;YACrC,OAAO,UAAU,UAAU,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;SACrE;QAEO,WAAW,CAAC,UAAU,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1E;QAEO,aAAa,CAAC,UAAkB,EAAE,CAAC;YACvC,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3E;QAEO,OAAO,CAAC,UAAkB,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACnD;QAEO,QAAQ,CAAC,KAAa;YAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACrC;QAEO,YAAY,CAChB,OAAqD,EACrD,UAAkB,EAClB,IAAI;YAEJ,MAAM,KAAK,GAAoD,OAAO;iBACjE,MAAM,CAAiB,MAAM,CAAC;iBAC9B,IAAI,CAAC,MAAM,EAAE;gBACV,MAAM,WAAW,GAAGpD,kBAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC9C,IAAI,WAAW,EAAE;oBACb,OAAO,WAAW,CAAC;iBACtB;gBACD,OAAO,MAAM,CAAC;aACjB,CAAC;iBACD,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CACjD,CAAC;YAEN,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAC7E,MAAM,EACN,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1F,CAAC;SACL;QAEM,OAAO,CAAC,CAAC,EAAE,UAAU;YACxB,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;QAEO,aAAa,CACjB,OAAqD,EACrD,UAAkB,EAClB,IAAI;YAEJ,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;oBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;oBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;iBAC3C,CAAC,CAAC;aACN;SACJ;QAES,SAAS;YACf,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE;gBAC5E,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,eAAe,EAAE;oBACtB,IAAI,CAAC,GAAG,EAAE;yBACL,SAAS,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,OAAO,CAAC;yBACrD,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;iBACtC;aACJ;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAE7B,OAAO,IAAI,CAAC;SACf;QAgBM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YAED,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QAEO,WAAW;YACf,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;gBAChC,MAAM,CAAC,IAAI,CACP,2DAA2D;oBACvD,4DAA4D,CACnE,CAAC;gBACF,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAACqD,kBAAY,EAAE,CAAC,CAAC;aACnD;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrD;;;;;;;QAQM,OAAO;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;KACJ;;UCjQYC,oBAAmB,SAAQ,aAAa,CAAC,YAAY,CAACC,kBAAqB,CAAC,CAAC;QACtF,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;;;;;;QAOM,QAAQ;YACX,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;SAC9B;;;;;;;;;;;;;;;;;;;;QAqBM,cAAc,CAAC,IAAI,EAAE,IAAY,EAAE,WAA8B;YACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACjD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;oBACjD,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YAC5D,OAAO,IAAI,CAAC;SACf;;;;QAKM,aAAa,CAAC,IAAY;YAC7B,MAAM,QAAQ,GAAG,EAAE,CAAC;YAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACjD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;oBACrB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACxB;aACJ;YAED,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,kBAAkB,GAAG,CAAC,MAAuB,EAAE,UAA0B,KAClF,IAAID,oBAAkB,CAAC,MAAM,EAAE,UAAU,CAAC;;ICxD9C,MAAM,qBAAqB,GAAG,IAAI,CAAC;IAEnC;;;AAGA,UAAa,OAAQ,SAAQ,UAAU,CAAC,WAAW,CAAC;;;;;;;;;;;;;QAoBhD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,SAAS;gBACf,WAAW,EAAE9D,iBAAS;gBACtB,WAAW,EAAEA,iBAAS;gBACtB,aAAa,EAAE,qBAAqB;gBACpC,aAAa,EAAE,qBAAqB;gBACpC,SAAS,EAAE,CAAC,IAAI,CAAC;gBACjB,SAAS,EAAE,CAAC,IAAI,CAAC;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;gBAE/B,YAAY,EAAE,CAAC;oBACX,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC1B;gBACD,YAAY,EAAE,CAAC;oBACX,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC1B;gBACD,UAAU,EAAE,CAAC;oBACT,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;oBACrB,MAAM,CAAC,OAAO,CAAC;wBACX,IAAI,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;qBACtB,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAE5B,IAAI,CAAC,SAAS,GAAG6B,iBAAS,EAAE,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAGA,iBAAS,EAAE,CAAC;YAE7B,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACxC;QAEM,SAAS,CAAC,IAAkB;YAC/B,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEO,WAAW,CAAC,IAAY,EAAE,KAAK;YACnC,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAkB,YAAY,CAAC,CAAC,MAAM,CACpE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAC7B,CAAC;YAEF,MAAM,qBAAqB,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAE9E,MAAM,CAAC,OAAO,CAAC;gBACX,MAAM,SAAS,GAAG,qBAAqB,CAAC,KAAK,EAAE,GAAG,WAAW,GAAG,qBAAqB,CAAC;gBACtF,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,oBAAoB,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;QAIM,MAAM,CAAC,MAAO;YACjB,MAAM,iBAAiB,GAAG,CAAC;gBACvB,MAAM,CAAC,QAAQ,CACX,wGAAwG,CAC3G,CAAC;gBACF,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;aACnD,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;aACzB;YACD,IACI,MAAM,KAAK,IAAI;gBACf,MAAM,CAAC,UAAU,KAAK,sBAAsB;gBAC5C,EACI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;oBACrB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,sBAAsB,CACrD,EACH;gBACE,OAAO,iBAAiB,CAAC,MAAM,CAAC,CAAC;aACpC;YACD,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC/B;QAES,SAAS;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE;iBACvB,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;iBACxB,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YAElF,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;QAES,SAAS;YACf,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAE/D,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAC5C;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAC5C;YACD,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEnC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,QAAQ,CAAC,CAAC;YAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,QAAQ,CAAC,CAAC;YAEhE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAE7C,IAAI,KAAK,GAAyD,IAAI,CAAC,UAAU;iBAC5E,SAAS,CAAmB,aAAa,CAAC;iBAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAEjF,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAEtB,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAEpE,MAAM;iBACD,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;iBACzB,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;iBACrB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACvD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;iBACnC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAEtD,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE5B,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACvB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAChD;YAED,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACtF,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACvD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;iBACnC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACpC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACpC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;iBACvB,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YAE/B,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAc,QAAQ,CAAC,CAAC;YAC1D,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;gBACf,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;aAClE;YACD,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAsB,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAEjF,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAE1B,SAAS,GAAG,SAAS;iBAChB,KAAK,EAAE;iBACP,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;iBACtC,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC;iBAC9B,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;iBACjC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;iBACd,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;iBAClD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC1B,KAAK,CAAC,SAAS,CAAC,CAAC;YAEtB,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBAC3E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;iBACtC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;YAEvC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAc,QAAQ,CAAC,CAAC;YAC1D,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;gBACf,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;aAClE;YAED,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAsB,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAEjF,SAAS,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAE1B,SAAS,GAAG,SAAS;iBAChB,KAAK,EAAE;iBACP,MAAM,CAAC,MAAM,CAAC;iBACd,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC;iBAC3B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;iBACZ,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACd,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;iBACvC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;iBACb,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;iBAClD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC1B,KAAK,CAAC,SAAS,CAAC,CAAC;YAEtB,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBAC3E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;YAE7C,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC1C,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;wBAC1B,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;qBACjC;yBAAM;wBACH,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;qBAC9B;iBACJ,CAAC,CAAC;aACN;iBAAM;gBACH,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;oBAC/B,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC9B,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC;SACf;QAEO,eAAe,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAChC;KACJ;;UC1PYmC,SAAQ,SAAQ,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,OAAU,CAAC,CAAC,CAAC;QAChF,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAYM,SAAS,CAAC,aAAc;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAYM,SAAS,CAAC,aAAc;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAQM,IAAI,CAAC,IAAK;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAQM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAQM,IAAI,CAAC,IAAK;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC1B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACf;QAQM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAiBM,UAAU,CAAC,OAAQ;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;SACf;QASM,YAAY,CAAC,OAAQ;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC;SACf;QASM,YAAY,CAAC,OAAQ;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC;SACf;QAQM,aAAa,CAAC,aAAc;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAQM,aAAa,CAAC,aAAc;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,OAAO,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACvE,IAAID,SAAO,CAAC,MAAM,EAAE,UAAU,CAAC;;IC/JnC,MAAM,kBAAkB,GAAG,CAAC,CAAC;IAC7B,MAAM,eAAe,GAAG,YAAY,CAAC;IACrC,MAAM,gBAAgB,GAAG,KAAK,CAAC;IAC/B,MAAM,qBAAqB,GAAG,MAAM,CAAC;IACrC,MAAM,qBAAqB,GAAG,MAAM,CAAC;IACrC,MAAM,mBAAmB,GAAG,IAAI,CAAC;IACjC,MAAME,eAAa,GAAG,CAAC,CAAC;IAExB;;;;;;;AAOA,UAAa,SAAU,SAAQ,UAAU;;;;;;;;;;;;;;;QA2BrC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;gBAClB,KAAK,EAAE,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxC,WAAW,EAAE,KAAK;aACrB,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;YACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,qBAAqB,GAAG,mBAAmB,CAAC;YACjD,IAAI,CAAC,uBAAuB,GAAG,mBAAmB,CAAC;YACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;SAC7B;QAEM,QAAQ;YACX,MAAM,SAAS,GAAyB,IAAI,CAAC,UAAU,EAAE,CAAC;YAC1D,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,CAAc,cAAc,CAAC,CAAC;YAE/D,IAAI,UAAU,CAAC,KAAK,EAAE,EAAE;gBACpB,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;aAClE;YAED,IAAI,MAAM,GAAG,UAAU,CAAC,SAAS,CAAmB,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAEjF,MAAM,WAAW,GAAG,MAAM;iBACrB,KAAK,EAAE;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC;YAE5C,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEpC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEpC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAElC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC5B;SACJ;QAmCM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;QAmBM,WAAW,CAAC,WAAY;YAC3B,MAAM,CAAC,QAAQ,CACX,+FAA+F,CAClG,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,OAAO,IAAI,CAAC;SACf;QAkBM,OAAO,CAAC,OAAQ;YACnB,MAAM,CAAC,QAAQ,CACX,2FAA2F,CAC9F,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAgBM,OAAO,CAAC,OAAQ;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAcM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;YACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QASM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;;;;QAKO,gBAAgB;YACpB,IAAI,KAAK,GAAG,IAAI,CAAC;;YAGjB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;YAGD,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;gBACzC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;aAC7B;iBAAM;;gBAEH,MAAM,OAAO,GAAG;oBACZ,MAAM,EAAEC,mBAAW;oBACnB,eAAe,EAAEC,yBAAiB;oBAClC,IAAI,EAAEC,iBAAS;oBACf,aAAa,EAAEC,uBAAe;oBAC9B,YAAY,EAAEC,sBAAc;oBAC5B,KAAK,EAAEC,kBAAU;oBACjB,YAAY,EAAEC,sBAAc;oBAC5B,cAAc,EAAEC,wBAAgB;oBAChC,MAAM,EAAEC,mBAAW;oBACnB,QAAQ,EAAEC,qBAAa;oBACvB,eAAe,EAAEC,yBAAiB;oBAClC,iBAAiB,EAAEC,2BAAmB;oBACtC,QAAQ,EAAEC,sBAAc;iBAC3B,CAAC;gBACF,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACtC;;YAGD,IAAI,CAAC,KAAK,EAAE;gBACR,KAAK,GAAGZ,mBAAW,CAAC;aACvB;YAED,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;gBACxB,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;oBACrC,MAAM,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;iBACvF;qBAAM;oBACH,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACxC;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;QAEO,SAAS,CAAC,WAAiC,EAAE,MAA4B;YAC7E,MAAM,KAAK,GAAGa,YAAI,EAAE;iBACf,CAAC,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5B,CAAC,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;iBACnC,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAEpC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChC;YAED,MAAM,IAAI,GAAG,WAAW;iBACnB,MAAM,CAAiB,MAAM,CAAC;iBAC9B,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;iBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAEhE,IAAI,IAAI,CAAC,UAAU,EAAE;;;gBAGjB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAClD;YAED,UAAU,CACN,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B;;iBAEI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC1D,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACrD;QAEO,SAAS,CAAC,WAAiC,EAAE,MAA4B;YAC7E,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,MAAM,KAAK,GAAGC,YAAI,EAAE;qBACf,CAAC,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5B,EAAE,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;qBACpC,EAAE,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBAC9B,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAkB,CAAC,CAAC;gBAEpD,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAChC;gBAED,WAAW;qBACN,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;qBACrB,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACxD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAElD,UAAU,CACN,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B;;qBAEI,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACxD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACrD;SACJ;QAEO,MAAM,CAAC,CAAS;YACpB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;SACnD;QAEO,SAAS,CAAC,SAA+B,EAAE,MAA4B;YAC3E,IACI,IAAI,CAAC,QAAQ,EAAE,KAAK,QAAQ;iBAC3B,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,EACxE;gBACE,MAAM,gBAAgB,GAAG,GAAG,eAAe,OAAO,CAAC;gBACnD,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAc,KAAK,gBAAgB,EAAE,CAAC,CAAC;gBAEtE,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE;oBAClB,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;iBACpE;gBAED,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,UAAU;oBACzB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACf,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACzC;oBAED,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAc,KAAK,eAAe,KAAK,UAAU,EAAE,CAAC,CAAC;oBAC5E,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBACX,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,eAAe,KAAK,UAAU,EAAE,CAAC,CAAC;qBAC/E;oBAED,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBAExB,MAAM,IAAI,GAAuD,CAAC;yBAC7D,SAAS,CAAwB,UAAU,gBAAgB,EAAE,CAAC;yBAC9D,IAAI,CAAM,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEjC,MAAM,KAAK,GAAG,IAAI,CAAC;oBACnB,MAAM,eAAe,GAAG,IAAI;yBACvB,KAAK,EAAE;yBACP,MAAM,CAAC,QAAQ,CAAC;yBAChB,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC;yBAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC1C,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACjD,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;yBAC/B,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC;yBACjD,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,uBAAuB,CAAC;yBACrD,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACxD,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBAC1D,EAAE,CAAC,WAAW,EAAE;wBACb,MAAM,GAAG,GAAGzE,kBAAM,CAAC,IAAI,CAAC,CAAC;wBACzB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;wBACpB,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBAC/B,CAAC;yBACD,EAAE,CAAC,UAAU,EAAE;wBACZ,MAAM,GAAG,GAAGA,kBAAM,CAAC,IAAI,CAAC,CAAC;wBACzB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;wBACpB,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;qBAC1B,CAAC;yBACD,KAAK,CAAC,IAAI,CAAC,CAAC;oBAEjB,eAAe,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;oBAE5D,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;yBACrD,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC1C,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACjD,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAE9D,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;iBACxB,CAAC,CAAC;aACN;SACJ;QAEO,WAAW,CAAC,MAA4B;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU;gBAClC,MAAM,KAAK,GAAGA,kBAAM,CAAC,IAAI,CAAC,CAAC;gBAC3B,MAAM,MAAM,GAAG,KAAK;qBACf,SAAS,CAAsB,gBAAgB,CAAC;qBAChD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEjC,MAAM,iBAAiB,GAAG,MAAM;qBAC3B,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;qBAC1B,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;qBAC7B,KAAK,CAAC,MAAM,CAAC,CAAC;gBAEnB,UAAU,CAAC,iBAAiB,EAAE,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC;qBACxD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC1C,IAAI,CAAC,GAAG,EAAE,CAAC;oBACR,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG0D,eAAa,CAAC;oBAChD,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;iBACxB,CAAC;qBACD,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAErC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;aACxF,CAAC,CAAC;SACN;QAEO,eAAe,CAAC,CAAuB;YAC3C,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAiB,QAAQ,qBAAqB,EAAE,CAAC,CAAC;YAEzE,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE;gBAClB,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;aACpE;YAED,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YAElE,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAiB,QAAQ,qBAAqB,EAAE,CAAC,CAAC;YAEzE,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE;gBAClB,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;aACpE;YAED,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;SACrE;QAEO,QAAQ,CACZ,GAA0D;YAE1D,GAAG,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAC/B,GAAG,CAAC,KAAK,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;YACjC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/B,OAAO,GAAG,CAAC;SACd;QAEO,aAAa,CACjB,GAA0D,EAC1D,CAAuB;YAEvB,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YACpD,MAAM,aAAa,GAAG,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClD,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC/D,CAAC,CAAC,MAAM,CAAC,QAAQ,qBAAqB,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;YACxF,CAAC,CAAC,MAAM,CAAC,QAAQ,qBAAqB,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;SAC3F;QAEO,aAAa;YACjB,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC;SACnD;QAEO,QAAQ,CAAC,GAA0D;YACvE,GAAG,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC;iBAChD,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,uBAAuB,CAAC;iBACrD,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;SACxC;QAEO,aAAa,CAAC,CAAuB;YACzC,CAAC,CAAC,MAAM,CAAC,QAAQ,qBAAqB,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACnE,CAAC,CAAC,MAAM,CAAC,QAAQ,qBAAqB,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SACtE;QAEO,cAAc,CAAC,GAAuD,EAAE,CAAC;YAC7E,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC7B,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAClE;SACJ;QAYM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;QAQM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;YACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QAiBM,gBAAgB,CAAC,OAAQ;YAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO;oBACH,WAAW,EAAE,IAAI,CAAC,qBAAqB;oBACvC,aAAa,EAAE,IAAI,CAAC,uBAAuB;oBAC3C,MAAM,EAAE,IAAI,CAAC,gBAAgB;iBAChC,CAAC;aACL;iBAAM,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,qBAAqB,GAAG,mBAAmB,CAAC;gBACjD,IAAI,CAAC,uBAAuB,GAAG,mBAAmB,CAAC;gBACnD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAChC;iBAAM;gBACH,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,WAAW,IAAI,GAAG,CAAC;gBACxD,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC,aAAa,IAAI,GAAG,CAAC;gBAC5D,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;aAC/C;YACD,OAAO,IAAI,CAAC;SACf;QAEM,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,GAAI;YACtC,OAAO;gBACH,MAAM,IAAI,GAAG1D,kBAAM,CAAC,IAAI,CAAC,CAAC;gBAC1B,MAAM,KAAK,GACP,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK;oBAC1B,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;yBACxB,SAAS,YAAY,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;oBACjE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC;gBAChC,OAAO,GAAG,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;aAC/B,CAAC;SACL;QAEM,eAAe,CAAC,CAAa;YAChC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBAC7B,IAAI,CAAC,CAAC,EAAE;qBACH,SAAS,CAAC,sBAAsB,CAAC;qBACjC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;qBAC7D,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;aAC1E;SACJ;QAEM,WAAW;YACd,IAAI,CAAC,CAAC,EAAE;iBACH,SAAS,CAAC,sBAAsB,CAAC;iBACjC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC;iBAC3B,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SAClC;QAEM,WAAW;YACd,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBAClB,OAAO,WAAW,CAAC;aACtB;YACD,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC9B,OAAO,CAAC,CAAC;aACZ,CAAC,CAAC;SACN;KACJ;;UCpoBY0E,WAAU,SAAQ,aAAa,CACxC,sBAAsB,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,SAAY,CAAC,CAAC,CAAC,CAAC,CACpF;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;KACJ;UAEY,SAAS,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACzE,IAAID,WAAS,CAAC,MAAM,EAAE,UAAU,CAAC;;ICTrC,MAAM,UAAU,GAAG,gBAAgB,CAAC;IAIpC;;;;;;;;;;;;;;AAcA,UAAa,aAAc,SAAQ,SAAS;;;;;;;;;QAcxC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;gBAClB,YAAY,EAAEvF,eAAM,CAAC,KAAK,CAAC;aAC9B,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;gBAC1B,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,KAAK;aAC3B,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;YAC7C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;YAG5B,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACxC;QAEM,SAAS,CAAC,IAAwB;YACrC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAGM,IAAI;YACP,MAAM,KAAK,GAAgC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;YAE5E,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;YAEvE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC3D;QAqBM,IAAI,CAAC,IAAK;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aAC/B;iBAAM,IAAI,IAAI,CAAC,GAAG,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;aAC9B;iBAAM,IAAI,IAAI,CAAC,IAAI,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aAC/B;YACD,IAAI,IAAI,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;aAC7B;iBAAM,IAAI,IAAI,CAAC,IAAI,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aAC/B;iBAAM,IAAI,IAAI,CAAC,GAAG,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC;SACf;;;;QAKM,KAAK;YACR,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;SACtB;QAEO,OAAO,CAAC,GAAG;YACf,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACb,OAAO,IAAI,CAAC;aACf;YACD,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;YAC/C,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACpC;QAES,SAAS;YACf,MAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,EAAE,CAAC;YACtC,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAuB,IAAI,UAAU,EAAE,CAAC,CAAC;YAElE,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACtF;YAED;gBACI,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,UAAU,EAAE;qBACZ,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC;qBACxC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC;qBAClC,IAAI,CAACyF,eAAQ,CAAC;qBACd,KAAK,CAAC,MAAM,EAAE;;oBAEX,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;oBACtE,MAAM,MAAM,GAAGC,+BAAiB,CAAC,WAAW,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;oBAC7D,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;;oBAG5B,MAAM,IAAI,GAAG,IAAI,CAAC;oBAClB,OAAO,CAAC;wBACJ,IAAI,IAAI,GAAG,IAAI,CAAC;wBAChB,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChD,IAAI,QAAQ,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE;4BAC3C,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;yBAC3B;6BAAM,IAAI,QAAQ,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE;4BACjD,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;yBAC1B;6BAAM,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE;4BAChC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;yBAC3B;wBACD,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;qBAC9D,CAAC;iBACL,CAAC,CAAC;aACV;YACD,OAAO,IAAI,CAAC;SACf;QAES,SAAS;YACf,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;SAC3B;KACJ;;UC9KYC,eAAc,SAAQ,YAAY,CAACC,aAAgB,CAAC;QAC7D,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QASM,YAAY,CAAC,SAAU;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,aAAa,GAAG,CAAC,MAAuB,EAAE,UAA0B,KAC7E,IAAID,eAAa,CAAC,MAAM,EAAE,UAAU,CAAC;;ICbzC,MAAM,2BAA2B,GAAG,GAAG,CAAC;IAExC;;;;;;;;;AAUA,UAAa,QAAS,SAAQ,UAAU,CAAC,SAAS,CAAC;;;;;;;;;;;;;;QA0B/C,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,aAAa,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7C,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrC,WAAW,EAAE,IAAI;gBACjB,KAAK,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;gBACvD,kBAAkB,EAAE,GAAG;gBACvB,eAAe,EAAE,CAAC;gBAClB,MAAM,EAAE,SAAS;gBACjB,WAAW,EAAE,CAAC;gBACd,qBAAqB,EAAE,CAAC;gBACxB,gBAAgB,EAAE,2BAA2B;gBAC7C,cAAc,EAAE,SAAS;gBACzB,SAAS,EAAE,KAAK;aACnB,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;YAEzC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;YAClC,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC;YAC7C,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC;YAC7C,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YAEpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YAEjC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;YACrB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;SACxB;QAEM,SAAS,CAAC,IAAmB;YAChC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAES,SAAS;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;YAE3F,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC5D,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAE5D,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,OAAO,IAAI,CAAC;SACf;QAEO,UAAU;;YAEd,MAAM,SAAS,GAAGtE,WAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YACzD,IAAI,CAAC,eAAe;gBAChB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;YAEvF,MAAM,IAAI,GAA+B,IAAI,CAAC,UAAU,EAAE,CAAC;YAE3D,MAAM,SAAS,GAAkB,IAAI,CAAC,UAAU,EAAE,CAAC;YAEnD,IAAI,OAAO,CAAC;;;YAGZ,IAAIE,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;gBACjC,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gBACjC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;aAC/C;iBAAM;;;gBAGH,OAAO,GAAG,SAAS,CAAC;oBAChB,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;iBAC7E,CAAC,CAAC;gBACH,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aAC9C;YAED,IAAI,IAAI,CAAC,EAAE,EAAE;gBACT,MAAM,MAAM,GAAyB,IAAI,CAAC,EAAE;qBACvC,MAAM,CAAc,KAAK,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBACpD,SAAS,CAAmB,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;qBACvD,IAAI,CAAC,OAAO,CAAC,CAAC;gBAEnB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE;qBACjB,MAAM,CAAc,KAAK,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBACpD,SAAS,CAAsB,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;qBAC7D,IAAI,CAAM,OAAO,CAAC,CAAC;gBAExB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAErC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAEpD,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAExB,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAC/E,WAAW,EACX,aAAa,IAAI,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,CACzC,CAAC;aACL;SACJ;QAEO,eAAe,CACnB,MAA4B,EAC5B,MAAwD,EACxD,IAAgC,EAChC,OAAO;YAEP,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAEnD,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAEzC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAEhC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;SAC7C;QAEO,iBAAiB,CAAC,MAA4B;YAClD,OAAO,MAAM;iBACR,KAAK,EAAE;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE,CAAC,CAAC;SAChE;QAEO,gBAAgB,CACpB,WAAiC,EACjC,IAAgC;YAEhC,MAAM,SAAS,GAAG,WAAW;iBACxB,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxC,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC;iBACA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAEpD,MAAM,SAAS,GAAG,UAAU,CACxB,SAAS,EACT,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC;YACF,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC;oBAChC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACnC,CAAC,CAAC;aACN;SACJ;QAEO,aAAa,CAAC,WAAiC;YACnD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aACnE;SACJ;QAEO,eAAe,CAAC,MAAwD;YAC5E,MAAM,CAAC,IAAI,CAAC,CAAC;gBACT,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBACpB,IACI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACrD,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAC3B;oBACE,OAAO,EAAE,CAAC;iBACb;gBACD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACnC,CAAC,CAAC;SACN;QAEO,eAAe,CACnB,MAAwD,EACxD,IAAgC;YAEhC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAC7B,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACxE,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACpD,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SACtC;QAEO,eAAe,CAAC,CAAS,EAAE,OAAO;YACtC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;SAClE;QAEO,aAAa,CACjB,MAAwD,EACxD,OAAO,EACP,IAAgC;YAEhC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,MAAM,WAAW,GAAG,MAAM;qBACrB,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;oBAChB,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE,CAAC;oBACpE,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;wBAC3B,OAAO,IAAI,WAAW,CAAC;qBAC1B;oBACD,OAAO,OAAO,CAAC;iBAClB,CAAC;qBACD,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC;qBACA,EAAE,CACC,WAAW,EACX,YAAY,CAAC,CAAC;oBACV,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;iBACvC,CAAC,CACL;qBACA,EAAE,CACC,UAAU,EACV,YAAY,CAAC,CAAC;oBACV,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBACxC,CAAC,CACL,CAAC;gBACN,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACxC,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBACzC;aACJ;SACJ;QAEO,iBAAiB,CAAC,OAAO,EAAE,IAAsC;YACrE,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE;iBACjB,SAAS,CAA0B,YAAY,IAAI,CAAC,cAAc,EAAE,CAAC;iBACrE,IAAI,CAAC,OAAO,CAAC,CAAC;YAEnB,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAEzB,QAAQ,GAAG,QAAQ;iBACd,KAAK,EAAE;iBACP,MAAM,CAAC,UAAU,CAAC;iBAClB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,aAAa,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;iBAChE,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC;iBACA,EAAE,CACC,WAAW,EACX,YAAY,CAAC,CAAC;gBACV,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aACvC,CAAC,CACL;iBACA,EAAE,CACC,UAAU,EACV,YAAY,CAAC,CAAC;gBACV,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aACxC,CAAC,CACL;iBACA,KAAK,CAAC,QAAQ,CAAC,CAAC;YAErB,MAAM,IAAI,GAAGsE,WAAG,EAAE;iBACb,WAAW,CACR,IAAI,CAAC,eAAe;gBAChB,IAAI,CAAC,KAAK,CAAC,qBAAqB;gBAChC,IAAI,CAAC,KAAK,CAAC,cAAc,CAChC;iBACA,WAAW,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC1E,MAAM,SAAS,GAAG,UAAU,CACxB,QAAQ,EACR,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC;;YAEF,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC;oBACrC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;oBACjC,OAAO,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACzE,MAAM,YAAY,GAAGC,yBAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;oBAChC,OAAO,CAAC;wBACJ,MAAM,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;wBAC3B,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;qBACjD,CAAC;iBACL,CAAC,CAAC;aACN;iBAAM;gBACH,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvE;YACD,SAAS,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,IAC3B,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,SAAS,CAC5D,CAAC;SACL;QAEO,eAAe,CAAC,OAAY,EAAE,IAAgC;YAClE,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SAC/B;QAEO,iBAAiB,CAAC,OAAO,EAAE,IAAgC;YAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE;iBACrB,SAAS,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;iBACrC,IAAI,CAAC,OAAO,CAAC;iBACb,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YACpD,MAAM,SAAS,GAAG,UAAU,CACxB,UAAU,EACV,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC;YACF,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC;oBAChC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACnC,CAAC,CAAC;aACN;YACD,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtD;QAEO,aAAa,CAAC,OAAO,EAAE,IAAgC;YAC3D,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE;qBACjB,SAAS,CAAsB,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;qBAC7D,IAAI,CAAC,OAAO,CAAC,CAAC;gBACnB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACnC,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBACzC;aACJ;SACJ;QAEO,aAAa,CAAC,OAAO;YACzB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,IAAI,CAAC,EAAE;qBACF,SAAS,CAAmB,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;qBACvD,IAAI,CAAM,OAAO,CAAC;qBAClB,MAAM,CAAC,OAAO,CAAC;qBACf,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aAC5C;SACJ;QAEO,eAAe,CACnB,MAA4B,EAC5B,MAAwD;YAExD,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YACvB,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;SAC1B;QAEO,gBAAgB;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;oBACvD,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;wBAC3B,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;qBACjC;yBAAM;wBACH,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;qBAC9B;iBACJ,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC;oBAC5C,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC9B,CAAC,CAAC;aACN;SACJ;QAOM,EAAE,CAAC,EAAG;YACT,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aACvC;YACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QAOM,EAAE,CAAC,EAAG;YACT,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QAEO,UAAU;YACd,OAAOD,WAAG,EAAE;iBACP,WAAW,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;iBACpE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC5C;QAEO,gBAAgB,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACzD;QAES,SAAS;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;SACf;QAEO,UAAU;;YAEd,OACIE,WAAG,EAAE;iBACA,IAAI,CAAC,IAAI,CAAC;;iBAEV,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAC3B,CAAC;SACL;QAEO,cAAc,CAAC,CAAC;YACpB,MAAM,KAAK,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC;YACxC,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;SAC9D;QAEO,eAAe,CAAC,CAAC;YACrB,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;SACzB;QAEO,YAAY,CAAC,OAAO;YACxB,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC3E;QAEO,KAAK,CAAC,CAAC,EAAE,CAAS;YACtB,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAChD;QAEO,QAAQ,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE;gBAC/C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACxB;SACJ;QAEO,QAAQ,CAAC,CAAC,EAAE,CAAS,EAAE,IAAgC;YAC3D,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC1B,IAAI,GAAG,MAAM,CAAC;aACjB;YACD,OAAO,IAAI,CAAC;SACf;QAEO,cAAc,CAAC,CAAC,EAAE,IAAgC;YACtD,IAAI,QAAkB,CAAC;YACvB,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBAC3B,QAAQ,GAAGF,WAAG,EAAE;qBACX,WAAW,CACR,IAAI,CAAC,eAAe;oBAChB,IAAI,CAAC,KAAK,CAAC,qBAAqB;oBAChC,IAAI,CAAC,KAAK,CAAC,cAAc,CAChC;qBACA,WAAW,CACR,IAAI,CAAC,eAAe;oBAChB,IAAI,CAAC,KAAK,CAAC,qBAAqB;oBAChC,IAAI,CAAC,KAAK,CAAC,cAAc,CAChC;qBACA,QAAQ,CAAC,CAAC,CAAC,CAAC;aACpB;iBAAM;gBACH,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1C,OAAO,gBAAgB,CAAC;aAC3B;iBAAM;gBACH,OAAO,aAAa,QAAQ,GAAG,CAAC;aACnC;SACJ;QAEM,WAAW;YACd,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;;gBAExB,MAAM,UAAU,GAA2B;oBACvC,IAAI,EAAE,CAAC,CAAC,GAAG;oBACX,IAAI,EAAE,CAAC,CAAC,KAAK;oBACb,MAAM,EAAE,CAAC,CAAC,MAAM;oBAChB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpD,OAAO,UAAU,CAAC;aACrB,CAAC,CAAC;SACN;QAEM,eAAe,CAAC,CAAa;YAChC,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC/C;QAEM,WAAW,CAAC,CAAa;YAC5B,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SAChD;QAEM,YAAY,CAAC,CAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;SACnD;QAEO,6BAA6B,CAAC,UAAsB,EAAE,WAAoB;YAC9E,IAAI,CAAC,SAAS,CAAmB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5D,IAAI,UAAU,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBAChChF,kBAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;iBAClD;aACJ,CAAC,CAAC;SACN;QAEO,SAAS,CAAC,CAAC,EAAE,OAAO;YACxB,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YACvC,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;YAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;gBAC5B,OAAO,GAAG,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;aAC5C;iBAAM;;gBAEH,OAAO,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;aAC5E;YACD,MAAM,CAAC,GAAGiF,yBAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SACzD;KACJ;;UChjBYE,UAAS,SAAQ,WAAW,CAAC,aAAa,CAAC,YAAY,CAACC,QAAW,CAAC,CAAC,CAAC;QAC/E,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAOM,UAAU,CAAC,KAAM;YACpB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;;;;;QAMM,SAAS,CAAC,GAAY;YACzB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACxB;QASM,qBAAqB,CAAC,qBAAsB;YAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;aAC3C;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC;SACf;QASM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAQM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC5B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;SACf;QASM,gBAAgB,CAAC,gBAAiB;YACrC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACtC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,CAAC;YACvD,OAAO,IAAI,CAAC;SACf;QASM,cAAc,CAAC,cAAe;YACjC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aACpC;iBAAM,IAAI,cAAc,EAAE;;gBAEvB,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;aACtD;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,SAAS,EAAE,CAAC,CAAC;aACjD;YAED,OAAO,IAAI,CAAC;SACf;QAQM,SAAS,CAAC,SAAU;YACvB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,QAAQ,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACxE,IAAID,UAAQ,CAAC,MAAM,EAAE,UAAU,CAAC;;IC7GpC;;;;;;AAOA,UAAa,QAAS,SAAQ,UAAU,CAAC,WAAW,CAAC;;;;;;;;;;;;;;QA0BjD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrC,WAAW,EAAE,IAAI;gBACjB,KAAK,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;gBACvD,YAAY,EAAE,EAAE;gBAChB,YAAY,EAAE,SAAS;gBACvB,iBAAiB,EAAE,CAAC;gBACpB,GAAG,EAAE,CAAC;gBACN,cAAc,EAAE,SAAS;gBACzB,gBAAgB,EAAE,KAAK;gBACvB,QAAQ,EAAE,SAAS;aACtB,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;YAEzC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YAEpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;YAEpC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YAEpB,IAAI,CAAC,MAAM,GAAGjE,iBAAU,CAAC,SAAS,CAAC,CAAC;YAEpC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC7B;QAEM,SAAS,CAAC,IAAmB;YAChC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEO,mBAAmB;YACvB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACjC,MAAM,OAAO,GAAGN,cAAM,CAAc,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;gBAClE,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBAChB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBAChB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,IAAI,CAAC,EAAE,GAAGV,mBAAW,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;aAC7E;YACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;QAEO,SAAS;YACb,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAc,QAAQ,CAAC,CAAC;YAElD,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;gBACf,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aACrD;YACD,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAEnE,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAC7E,IAAI,CAAC,MAAM,CACd,CAAC;SACL;QAEM,SAAS;YACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE;iBACf,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YAElF,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,OAAO,IAAI,CAAC;SACf;QASM,CAAC,CAAC,KAAM;YACX,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;QAEO,cAAc;YAClB,IAAI,CAAC,EAAE;iBACF,SAAS,CAAmB,QAAQ,CAAC;iBACrC,MAAM,CAAiB,gBAAgB,CAAC;iBACxC,MAAM,EAAE,CAAC;YAEd,IAAI,CAAC,EAAE;iBACF,SAAS,CAAmB,QAAQ,CAAC;iBACrC,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;iBAC1B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;iBACb,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;iBACb,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;iBACb,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SAClD;QAEO,UAAU;YACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAE5B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,IAAI,GAAyB,IAAI,CAAC,EAAE;iBACnC,SAAS,CAAmB,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrD,IAAI,CAAM,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC9B;QAEO,eAAe,CAAC,IAA0B;YAC9C,MAAM,QAAQ,GAAyB,IAAI;iBACtC,KAAK,EAAE;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE,CAAC,CAAC;YAE3D,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAEzC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAE7B,OAAO,QAAQ,CAAC;SACnB;QAEO,eAAe,CAAC,IAA0B;YAC9C,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;SACxB;QAEO,UAAU;YACd,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAClE;QAEO,eAAe,CAAC,IAA0B;YAC9C,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAE/B,IAAI,MAAc,CAAC;YACnB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc;kBAC5B,IAAI,CAAC,KAAK,CAAC,cAAc;kBACzB,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;;YAG9D,IAAI,CAAC,aAAa;gBACd,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,SAAS,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAEjF,MAAM,IAAI,GAAG,IAAI;iBACZ,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,eAAe,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC;iBACpF,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;iBACtB,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC;iBACA,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;iBAChF,OAAO,CAAC,UAAU,EAAE,CAAC,KAAK,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAEnF,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACtE,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBACnE,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAEjD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC5B;QAEO,aAAa,CAAC,IAA0B;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC/C;SACJ;QAEO,aAAa,CAAC,QAA8B;YAChD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CACtB,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC;aACL;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;gBAC7B,QAAQ;qBACH,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC;qBACrC,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC;aACT;SACJ;QAEO,aAAa,CAAC,IAA0B;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,MAAM,GAAG,GAAG,IAAI;qBACX,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;qBAClC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC;qBAC7B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;qBAC1B,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACtC;qBACA,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE,CAAC;qBACrD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpC,UAAU,CACN,GAAG,EACH,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI;qBAChB,MAAM,CAAiB,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;qBACpD,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;qBAC/D,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC;qBAC7B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;qBAC1B,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC;qBAC1B,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;qBAChD,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE,CAAC;qBAC1D,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpC,UAAU,CACN,QAAQ,EACR,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aACjD;SACJ;QAEO,QAAQ,CAAC,CAAC,EAAE,CAAU;YAC1B,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACtB;QAEO,WAAW,CAAC,CAAC;YACjB,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAC7B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAE1B,OAAO,aAAa,CAAC,KAAK,CAAC;SAC9B;QAEM,SAAS;YACZ,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;SACf;QAoBM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,IAAI,CAAC;SACf;QAEO,cAAc,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;KACJ;;UChVYmF,UAAS,SAAQ,WAAW,CACrC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,QAAW,CAAC,CAAC,CAAC,CAC3D;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;SAC3B;QAQM,gBAAgB,CAAC,gBAAiB;YACrC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACtC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,CAAC;YACvD,OAAO,IAAI,CAAC;SACf;QAaM,cAAc,CAAC,cAAe;YACjC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aACpC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACf;QAQM,GAAG,CAAC,GAAI;YACX,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;QAQM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC;SACf;QAQM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QAOM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QAQM,iBAAiB,CAAC,iBAAkB;YACvC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;aACvC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,QAAQ,GAAG,CAAC,MAAuB,EAAE,UAA0B,KACxE,IAAID,UAAQ,CAAC,MAAM,EAAE,UAAU,CAAC;;IC1GpC;;;;;;;AAOA,UAAa,WAAY,SAAQ,mBAAmB;;;;;;;;;;;;;;;;QAuBhD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAEnD,IAAI,CAAC,SAAS,CAAC;gBACX,WAAW,EAAE,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,aAAa,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS;gBACzD,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK;;gBAE/B,KAAK,EAAE,CAAC,IACJ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;gBAClF,eAAe,EAAE,CAAC;gBAClB,UAAU,EAAE,CAAC;gBACb,YAAY,EAAE,CAAC;gBACf,aAAa,EAAE,IAAI;gBACnB,eAAe,EAAE,GAAG;gBACpB,SAAS,EAAE,CAAC;gBACZ,YAAY,EAAE,CAAC;gBACf,eAAe,EAAE,CAAC;gBAClB,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,KAAK;aACnB,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;gBAC1B,aAAa,EAAE,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAChD,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAGE,cAAM,EAAE,CAAC;YAExB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;YAGrB,IAAI,CAAC,KAAK,CAACC,aAAK,EAAE,CAAC,CAAC;YAEpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACxD;QAEM,SAAS,CAAC,IAAsB;YACnC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAGO,kBAAkB,CAAC,CAAC,EAAE,UAAU;YACpC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;gBAClC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACpD;iBAAM,IAAI,UAAU,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACrD;iBAAM;gBACH,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvD;SACJ;QAEO,YAAY,CAAC,CAAC,EAAE,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;gBAClC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aAC5C;iBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC7C;iBAAM;gBACH,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;aAC/C;SACJ;QAEO,QAAQ,CAAC,CAAC;YACd,OAAO,aAAa,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;SACpF;QAIM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;aACzB;YAED,IAAI,MAAM,KAAK,IAAI,EAAE;gBACjB,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC7B;YACD,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,0BAA0B,CAAC,MAAM,CAAC,CAAC,CAAC;SAC/D;;;;;;;;QASM,QAAQ;YACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACvB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC3B;iBAAM;gBACH,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;gBAE/B,MAAM,MAAM,GAAyC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAChE,MAAM,OAAO,GAAsC,IAAI,CAAC,IAAI,EAAE,CAAC;;gBAG/D,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBACtC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;;gBAGrC,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;sBACnD,CAAC;sBACD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;gBACzC,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;sBACjD,CAAC;sBACD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;gBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBACpC,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;gBACtC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;;gBAG/B,MAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;gBACtD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE;qBACrB,MAAM,CAAC,QAAQ,CAAC;qBAChB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;qBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;qBACZ,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,gBAAgB,CAAC;qBACvC,IAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,gBAAgB,CAAC;qBACzC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,IAAI,CAAC;qBAC5B,KAAK,CAAC,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC;qBAC9B,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC;qBAC7B,KAAK,CAAC,KAAK,EAAE,GAAG,OAAO,CAAC,GAAG,GAAG,MAAM,IAAI,CAAC;qBACzC,KAAK,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,GAAG,OAAO,IAAI,CAAC;qBAC5C,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;qBACpB,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;;gBAGrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;gBACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,qBAAqB,GAAG,MAAM,CAAC;gBAE7C,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;aACrB;SACJ;QAEO,aAAa;YACjB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACpC,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YAEtC,MAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO;iBACP,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,gBAAgB,CAAC;iBACvC,IAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,gBAAgB,CAAC;iBACzC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,IAAI,CAAC;iBAC5B,KAAK,CAAC,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;SAC3D;QASM,MAAM,CAAC,aAAc;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;;;;;QAMM,OAAO;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;;;;;QAMO,aAAa,CAAC,oBAAqB;YACvC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC/B,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;;YAGzB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBACd,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAEpF,IAAI,QAAQ,GAAW,CAAC,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;oBAClC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;iBACtC;qBAAM,IAAI,UAAU,EAAE;oBACnB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACzC;qBAAM;oBACH,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACzC;;gBAED,IAAI,MAAM,GAAW,IAAI,CAAC;gBAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;oBAC3D,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;iBAClC;qBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,UAAU,EAAE;oBAChD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACrC;qBAAM;oBACH,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;iBACrD;gBAED,IAAI,KAAK,GAAW,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;;gBAG3D,IAAI,oBAAoB,EAAE;oBACtB,MAAM,aAAa,GAAG,MAAM,KAAK,oBAAoB,CAAC,KAAK,CAAC;;oBAE5D,MAAM,cAAc,GAAG,GAAG,CAAC;oBAC3B,IAAI,CAAC,aAAa,EAAE;;wBAEhB,QAAQ,GAAG,cAAc,CAAC;qBAC7B;oBACD,IAAI,aAAa,EAAE;;wBAEf,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC3D;iBACJ;;gBAGD,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC;gBAC/B,OAAO,CAAC,SAAS,EAAE,CAAC;gBACpB,OAAO,CAAC,GAAG,CACP,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EACnC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAClB,KAAK,EACL,CAAC,EACD,CAAC,GAAG,IAAI,CAAC,EAAE,EACX,IAAI,CACP,CAAC;gBACF,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC;gBAC3B,OAAO,CAAC,IAAI,EAAE,CAAC;;;;gBAIf,OAAO,CAAC,OAAO,EAAE,CAAC;aACrB,CAAC,CAAC;SACN;QAEO,UAAU;;YAEd,IAAI,OAAO,GAAI,IAAI,CAAC,UAAU,EAA4C;iBACrE,SAAS,CAAsB,aAAa,CAAC;iBAC7C,IAAI,CAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAE5B,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBAChF,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBAClB,MAAM,EAAE,CAAC;YAEd,OAAO,GAAG,OAAO;iBACZ,KAAK,EAAE;iBACP,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;iBACvB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBAClB,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxD,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACxC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEpB,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAEtD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBACd,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACb,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACzF,CAAC,CAAC;YAEH,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACzE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;oBAClC,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;iBAClC;qBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACrC;qBAAM;oBACH,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;iBACrC;aACJ,CAAC;iBACD,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;oBAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;iBAChC;qBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBACvD,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACnC;qBAAM;oBACH,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;iBACnD;aACJ,CAAC;iBACD,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACxC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAChC;QAEM,QAAQ;YACX,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACtB,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;iBAAM;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ;QAEO,aAAa,CAAC,OAAyD,EAAE,EAAE;YAC/E,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBACpC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;SACJ;QAiBM,MAAM,CAAC,IAAK;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aAC9B;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAaM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;QAEM,WAAW;;YAEd,OAAO;gBACH;oBACI,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS;oBAC1C,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;iBACrF;aACJ,CAAC;SACL;QAEM,eAAe,CAAC,CAAa;YAChC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBACtF,IAAI,CAAC,UAAU,EAAE;qBACZ,SAAS,CAAC,yBAAyB,CAAC;qBACpC,MAAM,CAAC;oBACJ,OAAOxF,kBAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;iBAChD,CAAC;qBACD,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aACjC;SACJ;QAEM,WAAW,CAAC,CAAa;YAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACjF,IAAI,CAAC,UAAU,EAAE;qBACZ,SAAS,CAAC,yBAAyB,CAAC;qBACpC,MAAM,CAAC;oBACJ,OAAOA,kBAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;iBAChD,CAAC;qBACD,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;aAClC;SACJ;QAEO,mBAAmB,CAAC,SAAS,EAAE,IAAI;YACvC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;iBAC5B,SAAS,CAAC,yBAAyB,CAAC;iBACpC,MAAM,CAAC;gBACJ,OAAO,SAAS,CAACA,kBAAM,CAAC,IAAI,CAAC,CAAC,CAAC;aAClC,CAAC,CAAC;YACP,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACrC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAC/E,GAAG,EACH,IAAI,CAAC,OAAO,CACf,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B;QAEM,uBAAuB;;SAE7B;QAEM,YAAY,CAAC,cAAc;YAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAClB,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC5D,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC/D;YACD,OAAO,cAAc,CAAC;SACzB;QAEM,aAAa,CAAC,cAAc;YAC/B,QACI,CAAC,cAAc;gBACf,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C;SACL;QAES,SAAS,CAAC,GAAG;YACnB,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBACzB,OAAO;aACV;YAED,IAAI,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC;;;YAKnC,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;YAEtD,IAAI,cAAc,EAAE;gBAChB,cAAc,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,IACrC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;oBACf,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC;oBAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC9B,CAAC,CACL,CAAC;gBAEF,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;;gBAGnD,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;aACrE;YAED,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YAEzC,MAAM,cAAc,GAAG,YAAY,GAAG,IAAI,GAAG,IAAI,0BAA0B,CAAC,cAAc,CAAC,CAAC;YAE5F,MAAM,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;SAC7B;QAEM,YAAY,CAAC,cAAc,EAAE,YAAY;;YAE5C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAE5B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,MAAM,EAAE;gBAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;oBACjB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;iBACvC;gBAED,IAAI,CAAC,cAAc,EAAE;oBACjB,IAAI,CAAC,mBAAmB,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;qBAClD,CAAC,CAAC;iBACN;qBAAM;oBACH,cAAc,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,IACrC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;wBACf,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC;wBAC5C,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;qBACvB,CAAC,CACL,CAAC;oBAEF,MAAM,oBAAoB,GAAG,kBAAkB,CAC3C,YAAY,EACZ,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC7B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC7B,CAAC,MAAM,CAAC,CAAC;oBAEV,IAAI,CAAC,mBAAmB,CAAC;wBACrB,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;qBAChE,CAAC,CAAC;iBACN;aACJ;YAED,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;SAC3C;KACJ;;UC7hBYyF,aAAY,SAAQ,sBAAsB,CACnD,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,WAAc,CAAC,CAAC,CAAC,CAC9D;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAcM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QAgBM,iBAAiB,CAAC,QAAS;YAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;aACvC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC;SACf;QASM,eAAe,CAAC,eAAgB;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;aACrC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;QAUM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QASM,aAAa,CAAC,aAAc;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAQM,eAAe,CAAC,eAAgB;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;aACrC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;QASM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QAIM,UAAU,CAAC,SAAU;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;aAC3B;YACD,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SACpC;QASM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAQM,YAAY,CAAC,YAAa;YAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QAQM,eAAe,CAAC,eAAgB;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;QASM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,WAAW,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,aAAW,CAAC,MAAM,EAAE,UAAU,CAAC;;IC9LtF,MAAM,gBAAgB,GAAG,gBAAgB,CAAC;IAC1C,MAAM,gBAAgB,GAAG,kBAAkB,CAAC;IAE5C;;;;AAIA,UAAa,UAAW,SAAQ,SAAS;;;;;;;;;;;;;;;;;;;QAuBrC,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,YAAY;gBACxB,WAAW,EAAE,IAAI;gBACjB,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;gBAClC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,KAAKjG,iBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAChF,aAAa,EAAE,IAAI;aACtB,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAC5B;QAEM,SAAS,CAAC,IAAqB;YAClC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEM,IAAI;YACP,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAC1D;QAES,SAAS;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAC5E,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAE5E,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC;SACf;QAES,SAAS;YACf,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;;YAEtB,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACzC,IAAI,CAAC,OAAO;qBACP,SAAS,CAAC,QAAQ,CAAC;qBACnB,QAAQ,CACL,UAAU,EACV,CAAC,IACG,OAAO,CAAC,KAAK,WAAW;oBACxB,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACrE,CAAC;aACT;iBAAM,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;aACjD;iBAAM;gBACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;aACtC;YACD,OAAO,IAAI,CAAC;SACf;QAEO,cAAc;YAClB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;iBACvB,SAAS,CAAyB,UAAU,gBAAgB,EAAE,CAAC;iBAC/D,IAAI,CAAM,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5D,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;YAExB,OAAO;iBACF,KAAK,EAAE;iBACP,MAAM,CAAC,QAAQ,CAAC;iBAChB,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;iBAC/B,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBAC7C,KAAK,CAAC,OAAO,CAAC;iBACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE5B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE5E,IAAI,CAAC,OAAO,CAAC,EAAE,CACX,QAAQ,EACR,YAAY,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CACnD,CAAC;SACL;QAEO,SAAS,CAAC,EAAE,EAAE,GAAG;YACrB,IAAI,MAAM,CAAC;YACX,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YAC1B,IAAI,MAAM,CAAC,eAAe,EAAE;gBACxB,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC3E,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;aAC9C;iBAAM;;;gBAGH,MAAM,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAClD,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;aAClF;;;YAGD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;gBACzC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC;aAC3C;iBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpD,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aACtB;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACzB;QAEM,QAAQ,CAAC,GAAG;YACf,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;iBAAM,IAAI,GAAG,EAAE;gBACZ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACH,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;YACD,MAAM,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;QAEO,cAAc;YAClB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACvC;iBAAM;gBACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACvC;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,IAAI,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aACvD;iBAAM;gBACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnC;SACJ;KACJ;;UClKYmG,YAAW,SAAQ,YAAY,CAACC,UAAa,CAAC;QACvD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAcM,KAAK,CAAC,KAAM;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aAC3B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;SACf;QAUM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACf;QAaM,eAAe,CAAC,eAAgB;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;aACrC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC;SACf;QAWM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;SACf;QAUM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAE7C,OAAO,IAAI,CAAC;SACf;QAWM,aAAa,CAAC,aAAc;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YAEjD,OAAO,IAAI,CAAC;SACf;QAIM,IAAI,CAAC,aAAc;YACtB,MAAM,CAAC,QAAQ,CAAC,qEAAqE,CAAC,CAAC;YACvF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;aAC/B;YACD,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAC5C;KACJ;UAEY,UAAU,GAAG,CAAC,MAAuB,EAAE,UAA0B,KAC1E,IAAID,YAAU,CAAC,MAAM,EAAE,UAAU,CAAC;;IC1HtC;;;;;;;;AAQA,UAAa,WAAY,SAAQ,cAAc;;;;;;;;;;;;;;QAkB3C,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;;YAG1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAElB,IAAI,CAAC,SAAS,CAAC;gBACX,WAAW,EAAE,IAAI;gBACjB,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;gBAC9C,cAAc,EAAE,SAAS;gBACzB,UAAU,EAAEnG,iBAAS;gBACrB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,KAAKA,iBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACvF,CAAC,CAAC;YAEH,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;SAC/D;QAEM,SAAS,CAAC,IAAsB;YACnC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;YAGtB,IACI,CAAC,eAAe,EAAE,gBAAgB,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,EACzF;gBACE,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;YAED,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAEO,QAAQ,CAAC,aAA0B;YACvC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAChC;QAEM,OAAO,CAAC,aAAa;YACxB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;QAES,eAAe;YACrB,MAAM,IAAI,GAAa,EAAE,CAAC;YAC1B,IAAI,eAAwB,CAAC;YAE7B,MAAM,OAAO,GAAG,gBAAgB,CAAC;gBAC7B,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;gBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;gBAC/B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;gBAChC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE;aACvB,CAAC,CAAC;YAEH,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAChC,MAAM,QAAQ,GACV,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBACxB,eAAe,GAAG,IAAI,CAAC;iBAC1B;gBACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,QAAQ,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;oBAC9B,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS;oBAC/C,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,aAAa;oBACvD,SAAS,EAAE,GAAG,CAAC,GAAG;oBAClB,KAAK,EAAE;wBACH,GAAG,EAAE,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,MAAM;qBACxE;iBACJ,CAAC,CAAC;gBACH,QAAQ,CAAC,SAAS,CAAC;oBACf,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;iBACtC,CAAC,CAAC;gBACH,OAAO,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;aACjD,CAAC,CAAC;;;YAGH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;iBACpB,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iBACnC,OAAO,CAAC,CAAC;gBACN,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACpB,eAAe,GAAG,IAAI,CAAC;aAC1B,CAAC,CAAC;YACP,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxB,IAAI,eAAe,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;gBAClC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC;aAC1B;SACJ;QAEO,WAAW,CAAC,CAAS;YACzB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;gBACrB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;aAChC;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC1B;QAEO,cAAc;YAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACrB;KACJ;;UC5HYqG,aAAY,SAAQ,iBAAiB,CAC9C,sBAAsB,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAACC,WAAc,CAAC,CAAC,CAAC,CAAC,CACtF;QACG,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAaM,KAAK,CAAC,aAAc;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;aACnC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC;SACf;QAaM,cAAc,CAAC,QAAS;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aACpC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAYM,UAAU,CAAC,YAAa;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAgBM,SAAS,CAAC,YAAa;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,WAAW,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK,IAAID,aAAW,CAAC,MAAM,EAAE,UAAU,CAAC;;IC7EtF,MAAME,6BAA2B,GAAG,GAAG,CAAC;IAExC;;;;;;;;;;;AAWA,UAAa,aAAc,SAAQ,UAAU,CAAC,SAAS,CAAC;;;;;;;;;;;;;;QAyBpD,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,aAAa,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7C,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrC,WAAW,EAAE,IAAI;gBACjB,KAAK,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE;gBAC7E,kBAAkB,EAAE,GAAG;gBACvB,UAAU,EAAE,OAAO;gBACnB,MAAM,EAAE,SAAS;gBACjB,WAAW,EAAE,CAAC;gBACd,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE;gBAClC,gBAAgB,EAAEA,6BAA2B;gBAC7C,cAAc,EAAE,SAAS;aAC5B,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;gBAC1B,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG;aACvB,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YAEjC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;YACrB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;SACxB;QAEM,SAAS,CAAC,IAAwB;YACrC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;QAGO,sBAAsB,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAC,IAAI,EAAE;gBACR,OAAO,CAAC,CAAC,KAAK,CAAC;aAClB;YACD,OAAO,CAAC,CAAC,MAAM,CAAC;SACnB;QAEO,YAAY,CAAC,SAAiB,EAAE,CAAS;YAC7C,IAAI,SAAS,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;iBAAM;gBACH,MAAM,oBAAoB,GAAGrF,WAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;gBAC9E,MAAM,WAAW,GACb,CAAC,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC;gBAC9E,MAAM,cAAc,GAChB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,KAAK,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;qBAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBACpD,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,cAAc,GAAG,WAAW,CAAC;aAChE;SACJ;QAES,SAAS;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;YAE3F,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,OAAO,IAAI,CAAC;SACf;QAEO,UAAU;;YAEd,MAAM,SAAS,GAAWF,WAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YACjE,IAAI,CAAC,eAAe;gBAChB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;YAEvF,MAAM,IAAI,GAA+B,IAAI,CAAC,UAAU,EAAE,CAAC;YAE3D,IAAI,gBAAgB,CAAC;YACrB,IAAI,KAAK,CAAC;;;YAIV,IAAIE,WAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;gBACjC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;gBAChD,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;gBAE/C,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBAC/B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;aAC/C;iBAAM;;;gBAGH,KAAK,GAAG,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;gBACtC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC/C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aAC9C;YACD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,UAAU,CAAC;YAC/C,IAAI,CAAC,kBAAkB,GAAG,gBAAgB,CAAC,iBAAiB,CAAC;;YAG7D,IAAI,IAAI,CAAC,EAAE,EAAE;gBACT,MAAM,MAAM,GAAyB,IAAI,CAAC,EAAE;qBACvC,SAAS,CAAmB,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;qBACvD,IAAI,CAAM,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAEvC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAE3D,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAEnD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAE7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAExB,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAC/E,WAAW,EACX,aAAa,IAAI,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,CACzC,CAAC;aACL;SACJ;QAEO,eAAe,CACnB,MAA4B,EAC5B,IAAgC,EAChC,YAAY;YAEZ,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YAEnD,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;SAC1C;QAEO,iBAAiB,CAAC,MAA4B;YAClD,OAAO,MAAM;iBACR,KAAK,EAAE;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CACD,OAAO,EACP,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,UAAU,CAAC,CAAC,KAAK,EAAE,CACnF,CAAC;SACT;QAEO,gBAAgB,CACpB,WAAiC,EACjC,IAAgC;YAEhC,MAAM,SAAS,GAAG,WAAW;iBACxB,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxC,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC;iBACA,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAE5C,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACvE,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC;oBAChC,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACrC,CAAC,CAAC;aACN;SACJ;QAEO,aAAa,CAAC,WAAiC;YACnD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9D;SACJ;QAEO,eAAe,CACnB,WAA6D,EAC7D,IAAgC;YAEhC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;iBACjD,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACpD,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;iBAC7B,IAAI,CAAC,CAAC;;gBAEH,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;oBACnD,OAAO,EAAE,CAAC;iBACb;gBACD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC9B,CAAC,CAAC;SACV;QAEO,aAAa,CAAC,YAAY,EAAE,IAAgC;YAChE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE;qBACjB,SAAS,CAAsB,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;qBAC7D,IAAI,CAAM,YAAY,CAAC,CAAC;gBAE7B,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;gBAEvB,MAAM,WAAW,GAAG,MAAM;qBACrB,KAAK,EAAE;qBACP,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;oBAChB,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE,CAAC;oBAC7C,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;wBAC3B,OAAO,IAAI,WAAW,CAAC;qBAC1B;oBACD,OAAO,OAAO,CAAC;iBAClB,CAAC;qBACD,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;gBAEN,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAC3C;SACJ;QAEO,eAAe,CAAC,YAAY,EAAE,IAAgC;YAClE,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SACpC;QAEO,iBAAiB,CAAC,YAAY,EAAE,IAAgC;YACpE,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE;iBACrB,SAAS,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;iBACrC,IAAI,CAAC,YAAY,CAAC;iBAClB,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,SAAS,GAAG,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACxE,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC;oBAChC,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBACrC,CAAC,CAAC;aACN;YACD,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtD;QAEO,aAAa,CAAC,YAAY,EAAE,IAAgC;YAChE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE;qBACjB,SAAS,CAAsB,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;qBAC7D,IAAI,CAAM,YAAY,CAAC,CAAC;gBAE7B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACtC;SACJ;QAEO,aAAa,CAAC,YAAY;YAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACxB,IAAI,CAAC,EAAE;qBACF,SAAS,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;qBACrC,IAAI,CAAC,YAAY,CAAC;qBAClB,MAAM,CAAC,OAAO,CAAC;qBACf,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;SACJ;QAEO,eAAe,CAAC,MAA4B;YAChD,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;SAC1B;QAEO,gBAAgB;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC;YACnB,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE;gBACnB,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;oBACzD,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;wBAC3B,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;qBACjC;yBAAM;wBACH,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;qBAC9B;iBACJ,CAAC,CAAC;aACN;iBAAM;gBACH,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;oBACzD,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC9B,CAAC,CAAC;aACN;SACJ;QAOM,EAAE,CAAC,EAAG;YACT,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aACvC;YACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QAOM,EAAE,CAAC,EAAG;YACT,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;;QAcM,gBAAgB;YACnB,OAAO;gBACH,WAAW,EAAE,MAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe;gBAC9D,gBAAgB,EAAE,CAAC,IACf,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBACtF,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBACtC,yBAAyB,EAAE,MAAM,EAAE;aACtC,CAAC;SACL;;;;;;;;;;;QAYM,cAAc;YACjB,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS;gBACnC,MAAM,MAAM,GAAG,EAAE,CAAC;gBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;oBAChC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;iBAC9B;gBACD,OAAO,MAAM,CAAC;aACjB,CAAC,CAAC;SACN;;;;;;;;;;;;;;;;;;QAmBM,iBAAiB,CACpB,yBAA0D;YAE1D,SAAS,mBAAmB,CAAC,aAAa,EAAE,aAAa;gBACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;oBAC/B,MAAM,IAAI,oBAAoB,CAAC,iDAAiD,CAAC,CAAC;iBACrF;gBAED,MAAM,WAAW,GAAGA,WAAG,CAAC,aAAa,CAAC,CAAC;gBACvC,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,iBAAiB,EAAE;oBACzD,MAAM,IAAI,oBAAoB,CAC1B,8DAA8D,WAAW,EAAE,CAC9E,CAAC;iBACL;gBAED,IAAI,aAAa,CAAC,MAAM,KAAK,aAAa,EAAE;oBACxC,MAAM,IAAI,oBAAoB,CAC1B,oEAAoE,aAAa,aAAa,aAAa,CAAC,MAAM,EAAE,CACvH,CAAC;iBACL;aACJ;YACD,OAAO;gBACH,WAAW,EAAE,MAAM,CAAC;gBACpB,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;gBACtE,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;gBAClE,yBAAyB,EAAE,SAAS;oBAChC,MAAM,MAAM,GAAG,yBAAyB,CAAC,SAAS,CAAC,CAAC;oBACpD,mBAAmB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;oBACvC,OAAO,MAAM,CAAC;iBACjB;aACJ,CAAC;SACL;QAEO,UAAU;YACd,OAAOsE,WAAG,EAAE;iBACP,UAAU,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,EAAE,CAAC;iBAC5B,QAAQ,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,EAAE,CAAC;iBAC1B,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;iBAC1D,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE;QAEO,gBAAgB,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACvC;QAEO,eAAe,CAAC,IAAI;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;oBAChC,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;;QAGO,eAAe,CAAC,IAAI;YACxB,MAAM,UAAU,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM,WAAW,GAAG,EAAE,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;oBACxE,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBACnC;aACJ;YACD,OAAO,WAAW,CAAC;SACtB;QAES,SAAS;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;SACf;QAEO,eAAe,CAAC,IAAI;YACxB,MAAM,WAAW,GAAG,UAAU,CAAC;gBAC3B,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;aAC9C,CAAC;YACF,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;YACrD,MAAM,UAAU,GAAGgB,qBAAS,CAAC,IAAI,CAAC;iBAC7B,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3D,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAKxG,iBAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnF,MAAM,UAAU,GAAGyG,qBAAS,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAEvF,UAAU,CAAC,UAAU,CAAC,CAAC;;YAGvB,MAAM,KAAK,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;;;gBAGxC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBACnB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,OAAO,CAAC,CAAC;aACZ,CAAC,CAAC;YAEH,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,yBAAyB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAExF,OAAO;gBACH,KAAK;;;gBAGL,UAAU,EAAE,UAAU,CAAC,EAAE;gBACzB,iBAAiB,EAAE,aAAa;aACnC,CAAC;SACL;QAEO,cAAc,CAAC,CAAC;YACpB,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;SAC9D;QAEO,eAAe,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC/C;QAEO,YAAY,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3C;QAEO,KAAK,CAAC,CAAC,EAAE,CAAU;YACvB,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAChD;QAEM,OAAO,CAAC,CAAC,EAAE,CAAE;YAChB,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,cAAc,EAAE;gBAC/C,OAAO;aACV;;YAGD,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC;YAC7B,MAAM,MAAM,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;;YAGzC,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,UAAU,GAAG,KAAK,CAAC;;YAEvB,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC9C,MAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;oBACtC,UAAU,GAAG,IAAI,CAAC;iBACrB;gBACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,MAAM,CAAC,OAAO,CAAC;;gBAEX,IAAI,CAAC,UAAU,EAAE;oBACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBACvB;gBACD,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN;QAEO,QAAQ,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC1B,IAAI,GAAG,MAAM,CAAC;aACjB;YACD,OAAO,IAAI,CAAC;SACf;QAEO,cAAc,CAAC,CAAC,EAAE,IAAI;YAC1B,IAAI,QAAQ,CAAC;YACb,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBAC3B,QAAQ,GAAGjB,WAAG,EAAE;qBACX,WAAW,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;qBAC7D,WAAW,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;qBAC7D,QAAQ,CAAC,CAAC,CAAC,CAAC;aACpB;iBAAM;gBACH,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC1C,OAAO,gBAAgB,CAAC;aAC3B;iBAAM;gBACH,OAAO,aAAa,QAAQ,GAAG,CAAC;aACnC;SACJ;QAEM,WAAW;YACd,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBACxB,MAAM,UAAU,GAAe;oBAC3B,IAAI,EAAE,CAAC,CAAC,GAAG;oBACX,IAAI,EAAE,CAAC,CAAC,KAAK;oBACb,MAAM,EAAE,CAAC,CAAC,MAAM;oBAChB,KAAK,EAAE,IAAI;iBACd,CAAC;gBACF,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpD,OAAO,UAAU,CAAC;aACrB,CAAC,CAAC;SACN;QAEM,eAAe,CAAC,CAAa;YAChC,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC/C;QAEM,WAAW,CAAC,CAAa;YAC5B,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SAChD;QAEM,YAAY,CAAC,CAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;SACnD;QAEO,6BAA6B,CAAC,UAAsB,EAAE,WAAoB;YAC9E,IAAI,CAAC,SAAS,CAAmB,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5D,IAAI,UAAU,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,EAAE;oBAC3BhF,kBAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;iBAClD;aACJ,CAAC,CAAC;SACN;QAEO,WAAW,CAAC,CAAC,EAAE,OAAO;YAC1B,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;YAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;gBAC5B,OAAO,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;aAC5C;YACD,MAAM,WAAW,GAAG;gBAChB,EAAE,EAAE,CAAC,CAAC,EAAE;gBACR,EAAE,EAAE,CAAC,CAAC,EAAE;gBACR,EAAE,EAAE,CAAC,CAAC,EAAE;gBACR,EAAE,EAAE,CAAC,CAAC,EAAE;aACX,CAAC;YACF,MAAM,CAAC,GAAGiF,yBAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAC5C,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5E;KACJ;;UC7nBYiB,eAAc,SAAQ,aAAa,CAAC,YAAY,CAACC,aAAgB,CAAC,CAAC;QAC5E,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QASM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAQM,MAAM,CAAC,MAAO;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC5B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;SACf;QASM,gBAAgB,CAAC,gBAAiB;YACrC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACtC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,CAAC;YACvD,OAAO,IAAI,CAAC;SACf;QAOM,UAAU,CAAC,KAAM;YACpB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACf;QASM,cAAc,CAAC,cAAe;YACjC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aACpC;iBAAM,IAAI,cAAc,EAAE;gBACvB,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;aACtD;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,SAAS,EAAE,CAAC,CAAC;aACjD;YAED,OAAO,IAAI,CAAC;SACf;QA8BM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,aAAa,GAAG,CAAC,MAAuB,EAAE,UAA0B,KAC7E,IAAID,eAAa,CAAC,MAAM,EAAE,UAAU,CAAC;;ICtHzC,MAAM,eAAe,GAAG,sBAAsB,CAAC;IAE/C;;;;;;;;;AASA,UAAa,gBAAiB,SAAQ,SAAS;;;;;;;;;;;;;;;QAmB3C,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE1B,IAAI,CAAC,SAAS,CAAC;gBACX,WAAW,EAAE,QAAQ;gBACrB,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE;gBAC/B,qBAAqB,EAAE,KAAK;oBACxB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACpC,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC7D;aACJ,CAAC,CAAC;SACN;QAEM,SAAS,CAAC,IAA2B;YACxC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACf;QAEM,IAAI;YACP,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAES,SAAS;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;YAE9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YAEzE,MAAM,KAAK,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE;gBACpB,KAAK;qBACA,YAAY,EAAE;qBACd,IAAI,EAAE;qBACN,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7E,MAAM,CAAC,OAAO,CAAC;oBACX,KAAK,CAAC,WAAW,EAAE,CAAC;iBACvB,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;aAC7B,CAAC,CAAC;YAEH,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,OAAO,IAAI,CAAC;SACf;QAES,SAAS;YACf,IAAI,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAE3E,OAAO,IAAI,CAAC;SACf;KACJ;;UCjFYE,kBAAiB,SAAQ,YAAY,CAACC,gBAAmB,CAAC;QACnE,YAAY,MAAuB,EAAE,UAA0B;YAC3D,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7B;QAYM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;aAC/B;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;QAWM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;aACjC;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;QAgBM,qBAAqB,CAAC,qBAAsB;YAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;aAC3C;YACD,IAAI,CAAC,SAAS,CAAC,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC;SACf;KACJ;UAEY,gBAAgB,GAAG,CAAC,MAAuB,EAAE,UAA0B,KAChF,IAAID,kBAAgB,CAAC,MAAM,EAAE,UAAU,CAAC;;IC7D5C;;;;;;;;;AASA,UAAa,UAAU;QAYnB;YACI,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAAC;YAC/C,IAAI,CAAC,6BAA6B,GAAG,2BAA2B,CAAC;YACjE,IAAI,CAAC,2BAA2B,GAAG,yBAAyB,CAAC;YAC7D,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACnC;QAIM,MAAM,CAAC,CAAE;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC;SACf;QAEM,MAAM;YACT,MAAM,yBAAyB,GAAG,IAAI,CAAC,WAAW;kBAC5C,IAAI,CAAC,6BAA6B;kBAClC,IAAI,CAAC,2BAA2B,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;YAEtE,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAC3F,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAE/E,IAAI,WAAW,GAAiB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAEvC,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC9B,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACtD;YAED,MAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB;kBAC3C,IAAI,CAAC,gBAAgB;kBACrB,yBAAyB,CAAC;YAEhC,MAAM,SAAS,GAA4D,SAAS;iBAC/E,SAAS,CAAsB,OAAO,mBAAmB,EAAE,CAAC;iBAC5D,IAAI,CAAa,WAAW,CAAC;iBAC7B,KAAK,EAAE;iBACP,MAAM,CAAC,KAAK,CAAC;iBACb,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC;iBAClC,EAAE,CACC,WAAW,EACX,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CACrD;iBACA,EAAE,CACC,UAAU,EACV,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CACjD;iBACA,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAClD,CAAC;YAEN,IAAI,IAAI,CAAC,kBAAkB,EAAE;;gBAEzB,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpF;YAED,SAAS;iBACJ,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC;iBACrC,KAAK,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;YAE7C,SAAS;iBACJ,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC;iBACrC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC;iBAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/B;QAOM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;YACD,IAAI,CAAC,UAAU,GAAGpG,kBAAM,CAAC,SAAS,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;SACf;QAWM,eAAe,CAAC,eAAgB;YACnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;YACD,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,OAAO,IAAI,CAAC;SACf;QAQM,iBAAiB,CAAC,iBAAkB;YACvC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;YACD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;QAOM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAqBM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAOM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,SAAS,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;;UCzMYsG,YAAW,SAAQC,UAAa;QACzC;YACI,KAAK,EAAE,CAAC;SACX;KACJ;UAEY,UAAU,GAAG,MAAM,IAAID,YAAU,EAAE;;ICFhD,MAAM,SAAS,GAAG,CAAC,CAAC;IAEpB;;;;;;;;;;;;AAYA,UAAa,MAAM;QAef;YACI,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;SACvB;QAIM,MAAM,CAAC,CAAE;YACZ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;YACD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC;SACf;QAOM,CAAC,CAAC,CAAE;YACP,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,OAAO,IAAI,CAAC;SACf;QAOM,CAAC,CAAC,CAAE;YACP,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,OAAO,IAAI,CAAC;SACf;QAOM,GAAG,CAAC,GAAI;YACX,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;YACD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,OAAO,IAAI,CAAC;SACf;QAQM,iBAAiB,CAAC,iBAAkB;YACvC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;YACD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;QAOM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAOM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAOM,WAAW,CAAC,WAAY;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,OAAO,IAAI,CAAC;SACf;QAOM,SAAS,CAAC,SAAU;YACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;YACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QAQM,aAAa,CAAC,aAAc;YAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;YACD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,OAAO,IAAI,CAAC;SACf;QAqBM,UAAU,CAAC,UAAW;YACzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,OAAO,IAAI,CAAC;SACf;QAOM,QAAQ,CAAC,QAAS;YACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,SAAS,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;;QAIO,iBAAiB;YACrB,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;SACvC;QAEM,MAAM;YACT,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;YAClD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO;iBACjB,GAAG,EAAE;iBACL,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;iBAC1B,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAC3D,IAAI,WAAW,GAAiB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAEvC,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC9B,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACtD;YAED,MAAM,SAAS,GAAkD,IAAI,CAAC,EAAE;iBACnE,SAAS,CAAmB,kBAAkB,CAAC;iBAC/C,IAAI,CAAa,WAAW,CAAC;iBAC7B,KAAK,EAAE;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC;iBAC/B,EAAE,CACC,WAAW,EACX,YAAY,CAAC,CAAC;gBACV,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;aACnC,CAAC,CACL;iBACA,EAAE,CACC,UAAU,EACV,YAAY,CAAC,CAAC;gBACV,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aAC/B,CAAC,CACL;iBACA,EAAE,CACC,OAAO,EACP,YAAY,CAAC,CAAC;gBACV,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC3B,CAAC,CACL,CAAC;YAEN,IAAI,IAAI,CAAC,kBAAkB,EAAE;;gBAEzB,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpF;YAED,IAAI,CAAC,EAAE;iBACF,SAAS,CAAmB,kBAAkB,CAAC;iBAC/C,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5D,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;gBACpC,SAAS;qBACJ,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;qBACb,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;qBAChC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;qBAC5B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;qBAChC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;qBACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;qBAC1C,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;aACrC;iBAAM;gBACH,SAAS;qBACJ,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC;qBAC/B,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;qBAChC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;aAClD;YAED;gBACI,MAAM,IAAI,GAAG,IAAI,CAAC;gBAElB,SAAS;qBACJ,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;qBACtB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;qBACvC,IAAI,CAAC,GAAG,EAAE;oBACP,QACI,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAC7E;iBACL,CAAC,CAAC;aACV;YAED,IAAI,yBAAyB,GAAG,CAAC,CAAC;YAClC,IAAI,GAAG,GAAG,CAAC,CAAC;YAEZ;gBACI,MAAM,IAAI,GAAG,IAAI,CAAC;gBAElB,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,CAAC;oBACtC,IAAI,IAAI,CAAC,WAAW,EAAE;wBAClB,MAAM,SAAS,GACX,IAAI,CAAC,cAAc,KAAK,IAAI;8BACtB,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI;8BAChC,IAAI,CAAC,UAAU,CAAC;wBAC1B,IACI,yBAAyB,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY;4BACzD,yBAAyB,GAAG,CAAC,EAC/B;4BACE,EAAE,GAAG,CAAC;4BACN,yBAAyB,GAAG,CAAC,CAAC;yBACjC;wBACD,MAAM,WAAW,GAAG,aAAa,yBAAyB,IACtD,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAChC,GAAG,CAAC;wBACJ,yBAAyB,IAAI,SAAS,CAAC;wBACvC,OAAO,WAAW,CAAC;qBACtB;yBAAM;wBACH,OAAO,eAAe,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC;qBACzD;iBACJ,CAAC,CAAC;aACN;SACJ;KACJ;;UC/UYE,QAAO,SAAQC,MAAS;QACjC;YACI,KAAK,EAAE,CAAC;SACX;KACJ;UAEY,MAAM,GAAG,MAAM,IAAID,QAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}